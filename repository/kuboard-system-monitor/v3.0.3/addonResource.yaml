---
apiVersion: kuboard.cn/v1
extraBundles:
- system-monitor.addons.kuboard.cn-1
- system-monitor.addons.kuboard.cn-2
- system-monitor.addons.kuboard.cn-3
- system-monitor.addons.kuboard.cn-4
- system-monitor.addons.kuboard.cn-5
initResources: {}
isPreInstallScript: true
k8sYamls:
  alertmanagerConfigCustomResourceDefinition.yaml: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      name: alertmanagerconfigs.monitoring.coreos.com
    spec:
      group: monitoring.coreos.com
      names:
        kind: AlertmanagerConfig
        listKind: AlertmanagerConfigList
        plural: alertmanagerconfigs
        singular: alertmanagerconfig
      scope: Namespaced
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: AlertmanagerConfig defines a namespaced AlertmanagerConfig to be aggregated across multiple namespaces configuring one Alertmanager cluster.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: AlertmanagerConfigSpec is a specification of the desired behavior of the Alertmanager configuration. By definition, the Alertmanager configuration only applies to alerts for which the `namespace` label is equal to the namespace of the AlertmanagerConfig resource.
                properties:
                  inhibitRules:
                    description: List of inhibition rules. The rules will only apply to alerts matching the resource’s namespace.
                    items:
                      description: InhibitRule defines an inhibition rule that allows to mute alerts when other alerts are already firing. See https://prometheus.io/docs/alerting/latest/configuration/#inhibit_rule
                      properties:
                        equal:
                          description: Labels that must have an equal value in the source and target alert for the inhibition to take effect.
                          items:
                            type: string
                          type: array
                        sourceMatch:
                          description: Matchers for which one or more alerts have to exist for the inhibition to take effect. The operator enforces that the alert matches the resource’s namespace.
                          items:
                            description: Matcher defines how to match on alert's labels.
                            properties:
                              name:
                                description: Label to match.
                                type: string
                              regex:
                                description: Whether to match on equality (false) or regular-expression (true).
                                type: boolean
                              value:
                                description: Label value to match.
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        targetMatch:
                          description: Matchers that have to be fulfilled in the alerts to be muted. The operator enforces that the alert matches the resource’s namespace.
                          items:
                            description: Matcher defines how to match on alert's labels.
                            properties:
                              name:
                                description: Label to match.
                                type: string
                              regex:
                                description: Whether to match on equality (false) or regular-expression (true).
                                type: boolean
                              value:
                                description: Label value to match.
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                      type: object
                    type: array
                  receivers:
                    description: List of receivers.
                    items:
                      description: Receiver defines one or more notification integrations.
                      properties:
                        emailConfigs:
                          description: List of Email configurations.
                          items:
                            description: EmailConfig configures notifications via Email.
                            properties:
                              authIdentity:
                                type: string
                              authPassword:
                                description: SecretKeySelector selects a key of a Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              authSecret:
                                description: SecretKeySelector selects a key of a Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              authUsername:
                                description: SMTP authentication information.
                                type: string
                              from:
                                description: The sender address.
                                type: string
                              headers:
                                description: Further headers email header key/value pairs. Overrides any headers previously set by the notification implementation.
                                items:
                                  description: KeyValue defines a (key, value) tuple.
                                  properties:
                                    key:
                                      description: Key of the tuple.
                                      type: string
                                    value:
                                      description: Value of the tuple.
                                      type: string
                                  required:
                                  - key
                                  - value
                                  type: object
                                type: array
                              hello:
                                description: The hostname to identify to the SMTP server.
                                type: string
                              html:
                                description: The HTML body of the email notification.
                                type: string
                              requireTLS:
                                description: The SMTP TLS requirement. Note that Go does not support unencrypted connections to remote SMTP endpoints.
                                type: boolean
                              sendResolved:
                                description: Whether or not to notify about resolved alerts.
                                type: boolean
                              smarthost:
                                description: The SMTP host through which emails are sent.
                                type: string
                              text:
                                description: The text body of the email notification.
                                type: string
                              tlsConfig:
                                description: TLS configuration
                                properties:
                                  ca:
                                    description: Struct containing the CA cert to use for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      secret:
                                        description: Secret containing data to use for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                  cert:
                                    description: Struct containing the client cert file for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      secret:
                                        description: Secret containing data to use for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                  insecureSkipVerify:
                                    description: Disable target certificate validation.
                                    type: boolean
                                  keySecret:
                                    description: Secret containing the client key file for the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  serverName:
                                    description: Used to verify the hostname for the targets.
                                    type: string
                                type: object
                              to:
                                description: The email address to send notifications to.
                                type: string
                            type: object
                          type: array
                        name:
                          description: Name of the receiver. Must be unique across all items from the list.
                          type: string
                        opsgenieConfigs:
                          description: List of OpsGenie configurations.
                          items:
                            description: OpsGenieConfig configures notifications via OpsGenie. See https://prometheus.io/docs/alerting/latest/configuration/#opsgenie_config
                            properties:
                              apiKey:
                                description: The secret's key that contains the OpsGenie API key. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              apiURL:
                                description: The URL to send OpsGenie API requests to.
                                type: string
                              description:
                                description: Description of the incident.
                                type: string
                              details:
                                description: A set of arbitrary key/value pairs that provide further detail about the incident.
                                items:
                                  description: KeyValue defines a (key, value) tuple.
                                  properties:
                                    key:
                                      description: Key of the tuple.
                                      type: string
                                    value:
                                      description: Value of the tuple.
                                      type: string
                                  required:
                                  - key
                                  - value
                                  type: object
                                type: array
                              httpConfig:
                                description: HTTP client configuration.
                                properties:
                                  basicAuth:
                                    description: BasicAuth for the client.
                                    properties:
                                      password:
                                        description: The secret in the service monitor namespace that contains the password for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      username:
                                        description: The secret in the service monitor namespace that contains the username for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                  bearerTokenSecret:
                                    description: The secret's key that contains the bearer token to be used by the client for authentication. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  proxyURL:
                                    description: Optional proxy URL.
                                    type: string
                                  tlsConfig:
                                    description: TLS configuration for the client.
                                    properties:
                                      ca:
                                        description: Struct containing the CA cert to use for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      cert:
                                        description: Struct containing the client cert file for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      insecureSkipVerify:
                                        description: Disable target certificate validation.
                                        type: boolean
                                      keySecret:
                                        description: Secret containing the client key file for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      serverName:
                                        description: Used to verify the hostname for the targets.
                                        type: string
                                    type: object
                                type: object
                              message:
                                description: Alert text limited to 130 characters.
                                type: string
                              note:
                                description: Additional alert note.
                                type: string
                              priority:
                                description: Priority level of alert. Possible values are P1, P2, P3, P4, and P5.
                                type: string
                              responders:
                                description: List of responders responsible for notifications.
                                items:
                                  description: OpsGenieConfigResponder defines a responder to an incident. One of id, name or username has to be defined.
                                  properties:
                                    id:
                                      description: ID of the responder.
                                      type: string
                                    name:
                                      description: Name of the responder.
                                      type: string
                                    type:
                                      description: Type of responder.
                                      type: string
                                    username:
                                      description: Username of the responder.
                                      type: string
                                  type: object
                                type: array
                              sendResolved:
                                description: Whether or not to notify about resolved alerts.
                                type: boolean
                              source:
                                description: Backlink to the sender of the notification.
                                type: string
                              tags:
                                description: Comma separated list of tags attached to the notifications.
                                type: string
                            type: object
                          type: array
                        pagerdutyConfigs:
                          description: List of PagerDuty configurations.
                          items:
                            description: PagerDutyConfig configures notifications via PagerDuty. See https://prometheus.io/docs/alerting/latest/configuration/#pagerduty_config
                            properties:
                              class:
                                description: The class/type of the event.
                                type: string
                              client:
                                description: Client identification.
                                type: string
                              clientURL:
                                description: Backlink to the sender of notification.
                                type: string
                              component:
                                description: The part or component of the affected system that is broken.
                                type: string
                              description:
                                description: Description of the incident.
                                type: string
                              details:
                                description: Arbitrary key/value pairs that provide further detail about the incident.
                                items:
                                  description: KeyValue defines a (key, value) tuple.
                                  properties:
                                    key:
                                      description: Key of the tuple.
                                      type: string
                                    value:
                                      description: Value of the tuple.
                                      type: string
                                  required:
                                  - key
                                  - value
                                  type: object
                                type: array
                              group:
                                description: A cluster or grouping of sources.
                                type: string
                              httpConfig:
                                description: HTTP client configuration.
                                properties:
                                  basicAuth:
                                    description: BasicAuth for the client.
                                    properties:
                                      password:
                                        description: The secret in the service monitor namespace that contains the password for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      username:
                                        description: The secret in the service monitor namespace that contains the username for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                  bearerTokenSecret:
                                    description: The secret's key that contains the bearer token to be used by the client for authentication. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  proxyURL:
                                    description: Optional proxy URL.
                                    type: string
                                  tlsConfig:
                                    description: TLS configuration for the client.
                                    properties:
                                      ca:
                                        description: Struct containing the CA cert to use for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      cert:
                                        description: Struct containing the client cert file for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      insecureSkipVerify:
                                        description: Disable target certificate validation.
                                        type: boolean
                                      keySecret:
                                        description: Secret containing the client key file for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      serverName:
                                        description: Used to verify the hostname for the targets.
                                        type: string
                                    type: object
                                type: object
                              routingKey:
                                description: The secret's key that contains the PagerDuty integration key (when using Events API v2). Either this field or `serviceKey` needs to be defined. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              sendResolved:
                                description: Whether or not to notify about resolved alerts.
                                type: boolean
                              serviceKey:
                                description: The secret's key that contains the PagerDuty service key (when using integration type "Prometheus"). Either this field or `routingKey` needs to be defined. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              severity:
                                description: Severity of the incident.
                                type: string
                              url:
                                description: The URL to send requests to.
                                type: string
                            type: object
                          type: array
                        pushoverConfigs:
                          description: List of Pushover configurations.
                          items:
                            description: PushoverConfig configures notifications via Pushover. See https://prometheus.io/docs/alerting/latest/configuration/#pushover_config
                            properties:
                              expire:
                                description: How long your notification will continue to be retried for, unless the user acknowledges the notification.
                                type: string
                              html:
                                description: Whether notification message is HTML or plain text.
                                type: boolean
                              httpConfig:
                                description: HTTP client configuration.
                                properties:
                                  basicAuth:
                                    description: BasicAuth for the client.
                                    properties:
                                      password:
                                        description: The secret in the service monitor namespace that contains the password for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      username:
                                        description: The secret in the service monitor namespace that contains the username for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                  bearerTokenSecret:
                                    description: The secret's key that contains the bearer token to be used by the client for authentication. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  proxyURL:
                                    description: Optional proxy URL.
                                    type: string
                                  tlsConfig:
                                    description: TLS configuration for the client.
                                    properties:
                                      ca:
                                        description: Struct containing the CA cert to use for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      cert:
                                        description: Struct containing the client cert file for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      insecureSkipVerify:
                                        description: Disable target certificate validation.
                                        type: boolean
                                      keySecret:
                                        description: Secret containing the client key file for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      serverName:
                                        description: Used to verify the hostname for the targets.
                                        type: string
                                    type: object
                                type: object
                              message:
                                description: Notification message.
                                type: string
                              priority:
                                description: Priority, see https://pushover.net/api#priority
                                type: string
                              retry:
                                description: How often the Pushover servers will send the same notification to the user. Must be at least 30 seconds.
                                type: string
                              sendResolved:
                                description: Whether or not to notify about resolved alerts.
                                type: boolean
                              sound:
                                description: The name of one of the sounds supported by device clients to override the user's default sound choice
                                type: string
                              title:
                                description: Notification title.
                                type: string
                              token:
                                description: Your registered application’s API token, see https://pushover.net/apps
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              url:
                                description: A supplementary URL shown alongside the message.
                                type: string
                              urlTitle:
                                description: A title for supplementary URL, otherwise just the URL is shown
                                type: string
                              userKey:
                                description: The recipient user’s user key.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          type: array
                        slackConfigs:
                          description: List of Slack configurations.
                          items:
                            description: SlackConfig configures notifications via Slack. See https://prometheus.io/docs/alerting/latest/configuration/#slack_config
                            properties:
                              actions:
                                description: A list of Slack actions that are sent with each notification.
                                items:
                                  description: SlackAction configures a single Slack action that is sent with each notification. See https://api.slack.com/docs/message-attachments#action_fields and https://api.slack.com/docs/message-buttons for more information.
                                  properties:
                                    confirm:
                                      description: SlackConfirmationField protect users from destructive actions or particularly distinguished decisions by asking them to confirm their button click one more time. See https://api.slack.com/docs/interactive-message-field-guide#confirmation_fields for more information.
                                      properties:
                                        dismissText:
                                          type: string
                                        okText:
                                          type: string
                                        text:
                                          type: string
                                        title:
                                          type: string
                                      required:
                                      - text
                                      type: object
                                    name:
                                      type: string
                                    style:
                                      type: string
                                    text:
                                      type: string
                                    type:
                                      type: string
                                    url:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - text
                                  - type
                                  type: object
                                type: array
                              apiURL:
                                description: The secret's key that contains the Slack webhook URL. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              callbackId:
                                type: string
                              channel:
                                description: The channel or user to send notifications to.
                                type: string
                              color:
                                type: string
                              fallback:
                                type: string
                              fields:
                                description: A list of Slack fields that are sent with each notification.
                                items:
                                  description: SlackField configures a single Slack field that is sent with each notification. Each field must contain a title, value, and optionally, a boolean value to indicate if the field is short enough to be displayed next to other fields designated as short. See https://api.slack.com/docs/message-attachments#fields for more information.
                                  properties:
                                    short:
                                      type: boolean
                                    title:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - title
                                  - value
                                  type: object
                                type: array
                              footer:
                                type: string
                              httpConfig:
                                description: HTTP client configuration.
                                properties:
                                  basicAuth:
                                    description: BasicAuth for the client.
                                    properties:
                                      password:
                                        description: The secret in the service monitor namespace that contains the password for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      username:
                                        description: The secret in the service monitor namespace that contains the username for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                  bearerTokenSecret:
                                    description: The secret's key that contains the bearer token to be used by the client for authentication. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  proxyURL:
                                    description: Optional proxy URL.
                                    type: string
                                  tlsConfig:
                                    description: TLS configuration for the client.
                                    properties:
                                      ca:
                                        description: Struct containing the CA cert to use for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      cert:
                                        description: Struct containing the client cert file for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      insecureSkipVerify:
                                        description: Disable target certificate validation.
                                        type: boolean
                                      keySecret:
                                        description: Secret containing the client key file for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      serverName:
                                        description: Used to verify the hostname for the targets.
                                        type: string
                                    type: object
                                type: object
                              iconEmoji:
                                type: string
                              iconURL:
                                type: string
                              imageURL:
                                type: string
                              linkNames:
                                type: boolean
                              mrkdwnIn:
                                items:
                                  type: string
                                type: array
                              pretext:
                                type: string
                              sendResolved:
                                description: Whether or not to notify about resolved alerts.
                                type: boolean
                              shortFields:
                                type: boolean
                              text:
                                type: string
                              thumbURL:
                                type: string
                              title:
                                type: string
                              titleLink:
                                type: string
                              username:
                                type: string
                            type: object
                          type: array
                        victoropsConfigs:
                          description: List of VictorOps configurations.
                          items:
                            description: VictorOpsConfig configures notifications via VictorOps. See https://prometheus.io/docs/alerting/latest/configuration/#victorops_config
                            properties:
                              apiKey:
                                description: The API key to use when talking to the VictorOps API.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              apiUrl:
                                description: The VictorOps API URL.
                                type: string
                              customFields:
                                description: Additional custom fields for notification.
                                items:
                                  description: KeyValue defines a (key, value) tuple.
                                  properties:
                                    key:
                                      description: Key of the tuple.
                                      type: string
                                    value:
                                      description: Value of the tuple.
                                      type: string
                                  required:
                                  - key
                                  - value
                                  type: object
                                type: array
                              entityDisplayName:
                                description: Contains summary of the alerted problem.
                                type: string
                              httpConfig:
                                description: The HTTP client's configuration.
                                properties:
                                  basicAuth:
                                    description: BasicAuth for the client.
                                    properties:
                                      password:
                                        description: The secret in the service monitor namespace that contains the password for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      username:
                                        description: The secret in the service monitor namespace that contains the username for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                  bearerTokenSecret:
                                    description: The secret's key that contains the bearer token to be used by the client for authentication. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  proxyURL:
                                    description: Optional proxy URL.
                                    type: string
                                  tlsConfig:
                                    description: TLS configuration for the client.
                                    properties:
                                      ca:
                                        description: Struct containing the CA cert to use for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      cert:
                                        description: Struct containing the client cert file for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      insecureSkipVerify:
                                        description: Disable target certificate validation.
                                        type: boolean
                                      keySecret:
                                        description: Secret containing the client key file for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      serverName:
                                        description: Used to verify the hostname for the targets.
                                        type: string
                                    type: object
                                type: object
                              messageType:
                                description: Describes the behavior of the alert (CRITICAL, WARNING, INFO).
                                type: string
                              monitoringTool:
                                description: The monitoring tool the state message is from.
                                type: string
                              routingKey:
                                description: A key used to map the alert to a team.
                                type: string
                              sendResolved:
                                description: Whether or not to notify about resolved alerts.
                                type: boolean
                              stateMessage:
                                description: Contains long explanation of the alerted problem.
                                type: string
                            required:
                            - routingKey
                            type: object
                          type: array
                        webhookConfigs:
                          description: List of webhook configurations.
                          items:
                            description: WebhookConfig configures notifications via a generic receiver supporting the webhook payload. See https://prometheus.io/docs/alerting/latest/configuration/#webhook_config
                            properties:
                              httpConfig:
                                description: HTTP client configuration.
                                properties:
                                  basicAuth:
                                    description: BasicAuth for the client.
                                    properties:
                                      password:
                                        description: The secret in the service monitor namespace that contains the password for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      username:
                                        description: The secret in the service monitor namespace that contains the username for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                  bearerTokenSecret:
                                    description: The secret's key that contains the bearer token to be used by the client for authentication. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  proxyURL:
                                    description: Optional proxy URL.
                                    type: string
                                  tlsConfig:
                                    description: TLS configuration for the client.
                                    properties:
                                      ca:
                                        description: Struct containing the CA cert to use for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      cert:
                                        description: Struct containing the client cert file for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      insecureSkipVerify:
                                        description: Disable target certificate validation.
                                        type: boolean
                                      keySecret:
                                        description: Secret containing the client key file for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      serverName:
                                        description: Used to verify the hostname for the targets.
                                        type: string
                                    type: object
                                type: object
                              maxAlerts:
                                description: Maximum number of alerts to be sent per webhook message.
                                format: int32
                                type: integer
                              sendResolved:
                                description: Whether or not to notify about resolved alerts.
                                type: boolean
                              url:
                                description: The URL to send HTTP POST requests to. `urlSecret` takes precedence over `url`. One of `urlSecret` and `url` should be defined.
                                type: string
                              urlSecret:
                                description: The secret's key that contains the webhook URL to send HTTP requests to. `urlSecret` takes precedence over `url`. One of `urlSecret` and `url` should be defined. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          type: array
                        wechatConfigs:
                          description: List of WeChat configurations.
                          items:
                            description: WeChatConfig configures notifications via WeChat. See https://prometheus.io/docs/alerting/latest/configuration/#wechat_config
                            properties:
                              agentID:
                                type: string
                              apiSecret:
                                description: The secret's key that contains the WeChat API key. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              apiURL:
                                description: The WeChat API URL.
                                type: string
                              corpID:
                                description: The corp id for authentication.
                                type: string
                              httpConfig:
                                description: HTTP client configuration.
                                properties:
                                  basicAuth:
                                    description: BasicAuth for the client.
                                    properties:
                                      password:
                                        description: The secret in the service monitor namespace that contains the password for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      username:
                                        description: The secret in the service monitor namespace that contains the username for authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                  bearerTokenSecret:
                                    description: The secret's key that contains the bearer token to be used by the client for authentication. The secret needs to be in the same namespace as the AlertmanagerConfig object and accessible by the Prometheus Operator.
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  proxyURL:
                                    description: Optional proxy URL.
                                    type: string
                                  tlsConfig:
                                    description: TLS configuration for the client.
                                    properties:
                                      ca:
                                        description: Struct containing the CA cert to use for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      cert:
                                        description: Struct containing the client cert file for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      insecureSkipVerify:
                                        description: Disable target certificate validation.
                                        type: boolean
                                      keySecret:
                                        description: Secret containing the client key file for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      serverName:
                                        description: Used to verify the hostname for the targets.
                                        type: string
                                    type: object
                                type: object
                              message:
                                description: API request data as defined by the WeChat API.
                                type: string
                              messageType:
                                type: string
                              sendResolved:
                                description: Whether or not to notify about resolved alerts.
                                type: boolean
                              toParty:
                                type: string
                              toTag:
                                type: string
                              toUser:
                                type: string
                            type: object
                          type: array
                      required:
                      - name
                      type: object
                    type: array
                  route:
                    description: The Alertmanager route definition for alerts matching the resource’s namespace. It will be added to the generated Alertmanager configuration as a first-level route.
                    properties:
                      continue:
                        description: Boolean indicating whether an alert should continue matching subsequent sibling nodes. It will always be overridden to true for the first-level route by the Prometheus operator.
                        type: boolean
                      groupBy:
                        description: List of labels to group by.
                        items:
                          type: string
                        type: array
                      groupInterval:
                        description: How long to wait before sending an updated notification. Must match the regular expression `[0-9]+(ms|s|m|h)` (milliseconds seconds minutes hours).
                        type: string
                      groupWait:
                        description: How long to wait before sending the initial notification. Must match the regular expression `[0-9]+(ms|s|m|h)` (milliseconds seconds minutes hours).
                        type: string
                      matchers:
                        description: 'List of matchers that the alert’s labels should match. For the first level route, the operator removes any existing equality and regexp matcher on the `namespace` label and adds a `namespace: <object namespace>` matcher.'
                        items:
                          description: Matcher defines how to match on alert's labels.
                          properties:
                            name:
                              description: Label to match.
                              type: string
                            regex:
                              description: Whether to match on equality (false) or regular-expression (true).
                              type: boolean
                            value:
                              description: Label value to match.
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      receiver:
                        description: Name of the receiver for this route. If present, it should be listed in the `receivers` field. The field can be omitted only for nested routes otherwise it is mandatory.
                        type: string
                      repeatInterval:
                        description: How long to wait before repeating the last notification. Must match the regular expression `[0-9]+(ms|s|m|h)` (milliseconds seconds minutes hours).
                        type: string
                      routes:
                        description: Child routes.
                        items:
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                    type: object
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
  alertmanagerCustomResourceDefinition.yaml: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      name: alertmanagers.monitoring.coreos.com
    spec:
      group: monitoring.coreos.com
      names:
        kind: Alertmanager
        listKind: AlertmanagerList
        plural: alertmanagers
        singular: alertmanager
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - description: The version of Alertmanager
          jsonPath: .spec.version
          name: Version
          type: string
        - description: The desired replicas number of Alertmanagers
          jsonPath: .spec.replicas
          name: Replicas
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1
        schema:
          openAPIV3Schema:
            description: Alertmanager describes an Alertmanager cluster.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: 'Specification of the desired behavior of the Alertmanager cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                properties:
                  additionalPeers:
                    description: AdditionalPeers allows injecting a set of additional Alertmanagers to peer with to form a highly available cluster.
                    items:
                      type: string
                    type: array
                  affinity:
                    description: If specified, the pod's scheduling constraints.
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements by node's labels.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements by node's fields.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms. The terms are ORed.
                                items:
                                  description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements by node's labels.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements by node's fields.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources, in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources, in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources, in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources, in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  alertmanagerConfigNamespaceSelector:
                    description: Namespaces to be selected for AlertmanagerConfig discovery. If nil, only check own namespace.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  alertmanagerConfigSelector:
                    description: AlertmanagerConfigs to be selected for to merge and configure Alertmanager with.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  baseImage:
                    description: 'Base image that is used to deploy pods, without tag. Deprecated: use ''image'' instead'
                    type: string
                  clusterAdvertiseAddress:
                    description: 'ClusterAdvertiseAddress is the explicit address to advertise in cluster. Needs to be provided for non RFC1918 [1] (public) addresses. [1] RFC1918: https://tools.ietf.org/html/rfc1918'
                    type: string
                  clusterGossipInterval:
                    description: Interval between gossip attempts.
                    type: string
                  clusterPeerTimeout:
                    description: Timeout for cluster peering.
                    type: string
                  clusterPushpullInterval:
                    description: Interval between pushpull attempts.
                    type: string
                  configMaps:
                    description: ConfigMaps is a list of ConfigMaps in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/<configmap-name>.
                    items:
                      type: string
                    type: array
                  configSecret:
                    description: ConfigSecret is the name of a Kubernetes Secret in the same namespace as the Alertmanager object, which contains configuration for this Alertmanager instance. Defaults to 'alertmanager-<alertmanager-name>' The secret is mounted into /etc/alertmanager/config.
                    type: string
                  containers:
                    description: 'Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to an Alertmanager pod. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `alertmanager` and `config-reloader`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.'
                    items:
                      description: A single application container that you want to run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resources:
                          description: 'Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        securityContext:
                          description: 'Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only root filesystem. Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies to the container.
                                  type: string
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                  type: string
                                runAsUserName:
                                  description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod''s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  externalUrl:
                    description: The external URL the Alertmanager instances will be available under. This is necessary to generate correct URLs. This is necessary if Alertmanager is not served from root of a DNS name.
                    type: string
                  forceEnableClusterMode:
                    description: ForceEnableClusterMode ensures Alertmanager does not deactivate the cluster mode when running with a single replica. Use case is e.g. spanning an Alertmanager cluster across Kubernetes clusters with a single replica in each.
                    type: boolean
                  image:
                    description: Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Alertmanager is being configured.
                    type: string
                  imagePullSecrets:
                    description: An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                    items:
                      description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  initContainers:
                    description: 'InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the Alertmanager configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.'
                    items:
                      description: A single application container that you want to run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resources:
                          description: 'Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        securityContext:
                          description: 'Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only root filesystem. Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies to the container.
                                  type: string
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                  type: string
                                runAsUserName:
                                  description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod''s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  listenLocal:
                    description: ListenLocal makes the Alertmanager server listen on loopback, so that it does not bind against the Pod IP. Note this is only for the Alertmanager UI, not the gossip communication.
                    type: boolean
                  logFormat:
                    description: Log format for Alertmanager to be configured with.
                    type: string
                  logLevel:
                    description: Log level for Alertmanager to be configured with.
                    type: string
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: Define which Nodes the Pods are scheduled on.
                    type: object
                  paused:
                    description: If set to true all actions on the underlying managed objects are not goint to be performed, except for delete actions.
                    type: boolean
                  podMetadata:
                    description: PodMetadata configures Labels and Annotations which are propagated to the alertmanager pods.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      name:
                        description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                    type: object
                  portName:
                    description: Port name used for the pods and governing service. This defaults to web
                    type: string
                  priorityClassName:
                    description: Priority class assigned to the Pods
                    type: string
                  replicas:
                    description: Size is the expected size of the alertmanager cluster. The controller will eventually make the size of the running cluster equal to the expected size.
                    format: int32
                    type: integer
                  resources:
                    description: Define resources requests and limits for single Pods.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  retention:
                    description: Time duration Alertmanager shall retain data for. Default is '120h', and must match the regular expression `[0-9]+(ms|s|m|h)` (milliseconds seconds minutes hours).
                    type: string
                  routePrefix:
                    description: The route prefix Alertmanager registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`.
                    type: string
                  secrets:
                    description: Secrets is a list of Secrets in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods. The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>.
                    items:
                      type: string
                    type: array
                  securityContext:
                    description: SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.
                    properties:
                      fsGroup:
                        description: "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: \n 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- \n If unset, the Kubelet will not modify the ownership and permissions of any volume."
                        format: int64
                        type: integer
                      fsGroupChangePolicy:
                        description: 'fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified defaults to "Always".'
                        type: string
                      runAsGroup:
                        description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                        properties:
                          level:
                            description: Level is SELinux level label that applies to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies to the container.
                            type: string
                        type: object
                      supplementalGroups:
                        description: A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            type: string
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: string
                        type: object
                    type: object
                  serviceAccountName:
                    description: ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.
                    type: string
                  sha:
                    description: 'SHA of Alertmanager container image to be deployed. Defaults to the value of `version`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set. Deprecated: use ''image'' instead.  The image digest can be specified as part of the image URL.'
                    type: string
                  storage:
                    description: Storage is the definition of how storage will be used by the Alertmanager instances.
                    properties:
                      disableMountSubPath:
                        description: 'Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary. DisableMountSubPath allows to remove any subPath usage in volume mounts.'
                        type: boolean
                      emptyDir:
                        description: 'EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
                        properties:
                          medium:
                            description: 'What type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      volumeClaimTemplate:
                        description: A PVC spec to be used by the Prometheus StatefulSets.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: EmbeddedMetadata contains metadata relevant to an EmbeddedResource.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                              name:
                                description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                            type: object
                          spec:
                            description: 'Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              accessModes:
                                description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              dataSource:
                                description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              resources:
                                description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                type: object
                              selector:
                                description: A label query over volumes to consider for binding.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                              storageClassName:
                                description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                                type: string
                            type: object
                          status:
                            description: 'Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              accessModes:
                                description: 'AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              capacity:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: Represents the actual resources of the underlying volume.
                                type: object
                              conditions:
                                description: Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
                                items:
                                  description: PersistentVolumeClaimCondition contails details about state of pvc
                                  properties:
                                    lastProbeTime:
                                      description: Last time we probed the condition.
                                      format: date-time
                                      type: string
                                    lastTransitionTime:
                                      description: Last time the condition transitioned from one status to another.
                                      format: date-time
                                      type: string
                                    message:
                                      description: Human-readable message indicating details about last transition.
                                      type: string
                                    reason:
                                      description: Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
                                      type: string
                                    status:
                                      type: string
                                    type:
                                      description: PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
                                      type: string
                                  required:
                                  - status
                                  - type
                                  type: object
                                type: array
                              phase:
                                description: Phase represents the current phase of PersistentVolumeClaim.
                                type: string
                            type: object
                        type: object
                    type: object
                  tag:
                    description: 'Tag of Alertmanager container image to be deployed. Defaults to the value of `version`. Version is ignored if Tag is set. Deprecated: use ''image'' instead.  The image tag can be specified as part of the image URL.'
                    type: string
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologySpreadConstraints:
                    description: If specified, the pod's topology spread constraints.
                    items:
                      description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                      properties:
                        labelSelector:
                          description: LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        maxSkew:
                          description: 'MaxSkew describes the degree to which pods may be unevenly distributed. It''s the maximum permitted difference between the number of matching pods in any two topology domains of a given topology type. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. It''s a required field. Default value is 1 and 0 is not allowed.'
                          format: int32
                          type: integer
                        topologyKey:
                          description: TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
                          type: string
                        whenUnsatisfiable:
                          description: 'WhenUnsatisfiable indicates how to deal with a pod if it doesn''t satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it - ScheduleAnyway tells the scheduler to still schedule it It''s considered as "Unsatisfiable" if and only if placing incoming pod on any topology violates "MaxSkew". For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won''t make it *more* imbalanced. It''s a required field.'
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                    type: array
                  version:
                    description: Version the cluster should be on.
                    type: string
                  volumeMounts:
                    description: VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the alertmanager container, that are generated as a result of StorageSpec objects.
                    items:
                      description: VolumeMount describes a mounting of a Volume within a container.
                      properties:
                        mountPath:
                          description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                          type: string
                        mountPropagation:
                          description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  volumes:
                    description: Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
                    items:
                      description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                      properties:
                        awsElasticBlockStore:
                          description: 'AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            partition:
                              description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: boolean
                            volumeID:
                              description: 'Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'Host Caching mode: None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: The Name of the data disk in the blob storage
                              type: string
                            diskURI:
                              description: The URI the data disk in the blob storage
                              type: string
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: the name of secret that contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: Share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                          properties:
                            monitors:
                              description: 'Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            path:
                              description: 'Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: boolean
                            secretFile:
                              description: 'Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                            secretRef:
                              description: 'Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            user:
                              description: 'Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: 'Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          properties:
                            fsType:
                              description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: boolean
                            secretRef:
                              description: 'Optional: points to a secret object containing parameters used to connect to OpenStack.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            volumeID:
                              description: 'volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: ConfigMap represents a configMap that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a volume.
                                properties:
                                  key:
                                    description: The key to project.
                                    type: string
                                  mode:
                                    description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its keys must be defined
                              type: boolean
                          type: object
                        csi:
                          description: CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
                          properties:
                            driver:
                              description: Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            readOnly:
                              description: Specifies a read-only configuration for the volume. Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              additionalProperties:
                                type: string
                              description: VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                              type: object
                          required:
                          - driver
                          type: object
                        downwardAPI:
                          description: DownwardAPI represents downward API about the pod that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume file
                              items:
                                description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  mode:
                                    description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                required:
                                - path
                                type: object
                              type: array
                          type: object
                        emptyDir:
                          description: 'EmptyDir represents a temporary directory that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          properties:
                            medium:
                              description: 'What type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        fc:
                          description: FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                          properties:
                            fsType:
                              description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            lun:
                              description: 'Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                              type: boolean
                            targetWWNs:
                              description: 'Optional: FC target worldwide names (WWNs)'
                              items:
                                type: string
                              type: array
                            wwids:
                              description: 'Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.'
                              items:
                                type: string
                              type: array
                          type: object
                        flexVolume:
                          description: FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: Driver is the name of the driver to use for this volume.
                              type: string
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'Optional: Extra command options if any.'
                              type: object
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                              type: boolean
                            secretRef:
                              description: 'Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                          required:
                          - driver
                          type: object
                        flocker:
                          description: Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                          properties:
                            datasetName:
                              description: Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                              type: string
                            datasetUUID:
                              description: UUID of the dataset. This is unique identifier of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: 'GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            partition:
                              description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              format: int32
                              type: integer
                            pdName:
                              description: 'Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: 'GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod''s container.'
                          properties:
                            directory:
                              description: Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                              type: string
                            repository:
                              description: Repository URL
                              type: string
                            revision:
                              description: Commit hash for the specified revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: 'Glusterfs represents a Glusterfs mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                          properties:
                            endpoints:
                              description: 'EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            path:
                              description: 'Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: 'HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.'
                          properties:
                            path:
                              description: 'Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                            type:
                              description: 'Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                          required:
                          - path
                          type: object
                        iscsi:
                          description: 'ISCSI represents an ISCSI Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                          properties:
                            chapAuthDiscovery:
                              description: whether support iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: whether support iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            initiatorName:
                              description: Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                              type: string
                            iqn:
                              description: Target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              items:
                                type: string
                              type: array
                            readOnly:
                              description: ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                              type: boolean
                            secretRef:
                              description: CHAP Secret for iSCSI target and initiator authentication
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            targetPortal:
                              description: iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        name:
                          description: 'Volume''s name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        nfs:
                          description: 'NFS represents an NFS mount on the host that shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          properties:
                            path:
                              description: 'Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: boolean
                            server:
                              description: 'Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: 'PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            claimName:
                              description: 'ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: Will force the ReadOnly setting in VolumeMounts. Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: ID that identifies Photon Controller persistent disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: VolumeID uniquely identifies a Portworx volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: Items for all in one resources secrets, configmaps, and downward API
                          properties:
                            defaultMode:
                              description: Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: list of volume projections
                              items:
                                description: Projection that may be projected along with other supported volume types
                                properties:
                                  configMap:
                                    description: information about the configMap data to project
                                    properties:
                                      items:
                                        description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path within a volume.
                                          properties:
                                            key:
                                              description: The key to project.
                                              type: string
                                            mode:
                                              description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its keys must be defined
                                        type: boolean
                                    type: object
                                  downwardAPI:
                                    description: information about the downwardAPI data to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume file
                                        items:
                                          description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            mode:
                                              description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required for volumes, optional for env vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output format of the exposed resources, defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                          required:
                                          - path
                                          type: object
                                        type: array
                                    type: object
                                  secret:
                                    description: information about the secret data to project
                                    properties:
                                      items:
                                        description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path within a volume.
                                          properties:
                                            key:
                                              description: The key to project.
                                              type: string
                                            mode:
                                              description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    type: object
                                  serviceAccountToken:
                                    description: information about the serviceAccountToken data to project
                                    properties:
                                      audience:
                                        description: Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: Path is the path relative to the mount point of the file to project the token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                          required:
                          - sources
                          type: object
                        quobyte:
                          description: Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                          properties:
                            group:
                              description: Group to map volume access to Default is no group
                              type: string
                            readOnly:
                              description: ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                              type: boolean
                            registry:
                              description: Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                              type: string
                            user:
                              description: User to map volume access to Defaults to serivceaccount user
                              type: string
                            volume:
                              description: Volume is a string that references an already created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: 'RBD represents a Rados Block Device mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            image:
                              description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            keyring:
                              description: 'Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            monitors:
                              description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            pool:
                              description: 'The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: boolean
                            secretRef:
                              description: 'SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            user:
                              description: 'The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        scaleIO:
                          description: ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              type: string
                            gateway:
                              description: The host address of the ScaleIO API Gateway.
                              type: string
                            protectionDomain:
                              description: The name of the ScaleIO Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            sslEnabled:
                              description: Flag to enable/disable SSL communication with Gateway, default false
                              type: boolean
                            storageMode:
                              description: Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: The ScaleIO Storage Pool associated with the protection domain.
                              type: string
                            system:
                              description: The name of the storage system as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: The name of a volume already created in the ScaleIO system that is associated with this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: 'Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a volume.
                                properties:
                                  key:
                                    description: The key to project.
                                    type: string
                                  mode:
                                    description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            optional:
                              description: Specify whether the Secret or its keys must be defined
                              type: boolean
                            secretName:
                              description: 'Name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              type: string
                          type: object
                        storageos:
                          description: StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            volumeName:
                              description: VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                              type: string
                            volumeNamespace:
                              description: VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                              type: string
                          type: object
                        vsphereVolume:
                          description: VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: Storage Policy Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: Path that identifies vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                type: object
              status:
                description: 'Most recent observed status of the Alertmanager cluster. Read-only. Not included when requesting from the apiserver, only from the Prometheus Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                properties:
                  availableReplicas:
                    description: Total number of available pods (ready for at least minReadySeconds) targeted by this Alertmanager cluster.
                    format: int32
                    type: integer
                  paused:
                    description: Represents whether any actions on the underlying managed objects are being performed. Only delete actions will be performed.
                    type: boolean
                  replicas:
                    description: Total number of non-terminated pods targeted by this Alertmanager cluster (their labels match the selector).
                    format: int32
                    type: integer
                  unavailableReplicas:
                    description: Total number of unavailable pods targeted by this Alertmanager cluster.
                    format: int32
                    type: integer
                  updatedReplicas:
                    description: Total number of non-terminated pods targeted by this Alertmanager cluster that have the desired version spec.
                    format: int32
                    type: integer
                required:
                - availableReplicas
                - paused
                - replicas
                - unavailableReplicas
                - updatedReplicas
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
  podmonitorCustomResourceDefinition.yaml: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      name: podmonitors.monitoring.coreos.com
    spec:
      group: monitoring.coreos.com
      names:
        kind: PodMonitor
        listKind: PodMonitorList
        plural: podmonitors
        singular: podmonitor
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            description: PodMonitor defines monitoring for a set of pods.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Specification of desired Pod selection for target discovery by Prometheus.
                properties:
                  jobLabel:
                    description: The label to use to retrieve the job name from.
                    type: string
                  namespaceSelector:
                    description: Selector to select which namespaces the Endpoints objects are discovered from.
                    properties:
                      any:
                        description: Boolean describing whether all namespaces are selected in contrast to a list restricting them.
                        type: boolean
                      matchNames:
                        description: List of namespace names.
                        items:
                          type: string
                        type: array
                    type: object
                  podMetricsEndpoints:
                    description: A list of endpoints allowed as part of this PodMonitor.
                    items:
                      description: PodMetricsEndpoint defines a scrapeable endpoint of a Kubernetes Pod serving Prometheus metrics.
                      properties:
                        basicAuth:
                          description: 'BasicAuth allow an endpoint to authenticate over basic authentication. More info: https://prometheus.io/docs/operating/configuration/#endpoint'
                          properties:
                            password:
                              description: The secret in the service monitor namespace that contains the password for authentication.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            username:
                              description: The secret in the service monitor namespace that contains the username for authentication.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        bearerTokenSecret:
                          description: Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the pod monitor and accessible by the Prometheus Operator.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        honorLabels:
                          description: HonorLabels chooses the metric's labels on collisions with target labels.
                          type: boolean
                        honorTimestamps:
                          description: HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.
                          type: boolean
                        interval:
                          description: Interval at which metrics should be scraped
                          type: string
                        metricRelabelings:
                          description: MetricRelabelConfigs to apply to samples before ingestion.
                          items:
                            description: 'RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                            properties:
                              action:
                                description: Action to perform based on regex matching. Default is 'replace'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source label values.
                                format: int64
                                type: integer
                              regex:
                                description: Regular expression against which the extracted value is matched. Default is '(.*)'
                                type: string
                              replacement:
                                description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated source label values. default is ';'.
                                type: string
                              sourceLabels:
                                description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              targetLabel:
                                description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        params:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Optional HTTP URL parameters
                          type: object
                        path:
                          description: HTTP path to scrape for metrics.
                          type: string
                        port:
                          description: Name of the pod port this endpoint refers to. Mutually exclusive with targetPort.
                          type: string
                        proxyUrl:
                          description: ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.
                          type: string
                        relabelings:
                          description: 'RelabelConfigs to apply to samples before ingestion. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                          items:
                            description: 'RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                            properties:
                              action:
                                description: Action to perform based on regex matching. Default is 'replace'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source label values.
                                format: int64
                                type: integer
                              regex:
                                description: Regular expression against which the extracted value is matched. Default is '(.*)'
                                type: string
                              replacement:
                                description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated source label values. default is ';'.
                                type: string
                              sourceLabels:
                                description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              targetLabel:
                                description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        scheme:
                          description: HTTP scheme to use for scraping.
                          type: string
                        scrapeTimeout:
                          description: Timeout after which the scrape is ended
                          type: string
                        targetPort:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'Deprecated: Use ''port'' instead.'
                          x-kubernetes-int-or-string: true
                        tlsConfig:
                          description: TLS configuration to use when scraping the endpoint.
                          properties:
                            ca:
                              description: Struct containing the CA cert to use for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            cert:
                              description: Struct containing the client cert file for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keySecret:
                              description: Secret containing the client key file for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                      type: object
                    type: array
                  podTargetLabels:
                    description: PodTargetLabels transfers labels on the Kubernetes Pod onto the target.
                    items:
                      type: string
                    type: array
                  sampleLimit:
                    description: SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
                    format: int64
                    type: integer
                  selector:
                    description: Selector to select Pod objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  targetLimit:
                    description: TargetLimit defines a limit on the number of scraped targets that will be accepted.
                    format: int64
                    type: integer
                required:
                - podMetricsEndpoints
                - selector
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
  probeCustomResourceDefinition.yaml: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      name: probes.monitoring.coreos.com
    spec:
      group: monitoring.coreos.com
      names:
        kind: Probe
        listKind: ProbeList
        plural: probes
        singular: probe
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            description: Probe defines monitoring for a set of static targets or ingresses.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Specification of desired Ingress selection for target discovery by Prometheus.
                properties:
                  interval:
                    description: Interval at which targets are probed using the configured prober. If not specified Prometheus' global scrape interval is used.
                    type: string
                  jobName:
                    description: The job name assigned to scraped metrics by default.
                    type: string
                  module:
                    description: 'The module to use for probing specifying how to probe the target. Example module configuring in the blackbox exporter: https://github.com/prometheus/blackbox_exporter/blob/master/example.yml'
                    type: string
                  prober:
                    description: Specification for the prober to use for probing targets. The prober.URL parameter is required. Targets cannot be probed if left empty.
                    properties:
                      path:
                        description: Path to collect metrics from. Defaults to `/probe`.
                        type: string
                      scheme:
                        description: HTTP scheme to use for scraping. Defaults to `http`.
                        type: string
                      url:
                        description: Mandatory URL of the prober.
                        type: string
                    required:
                    - url
                    type: object
                  scrapeTimeout:
                    description: Timeout for scraping metrics from the Prometheus exporter.
                    type: string
                  targets:
                    description: Targets defines a set of static and/or dynamically discovered targets to be probed using the prober.
                    properties:
                      ingress:
                        description: Ingress defines the set of dynamically discovered ingress objects which hosts are considered for probing.
                        properties:
                          namespaceSelector:
                            description: Select Ingress objects by namespace.
                            properties:
                              any:
                                description: Boolean describing whether all namespaces are selected in contrast to a list restricting them.
                                type: boolean
                              matchNames:
                                description: List of namespace names.
                                items:
                                  type: string
                                type: array
                            type: object
                          relabelingConfigs:
                            description: 'RelabelConfigs to apply to samples before ingestion. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                            items:
                              description: 'RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                              properties:
                                action:
                                  description: Action to perform based on regex matching. Default is 'replace'
                                  type: string
                                modulus:
                                  description: Modulus to take of the hash of the source label values.
                                  format: int64
                                  type: integer
                                regex:
                                  description: Regular expression against which the extracted value is matched. Default is '(.*)'
                                  type: string
                                replacement:
                                  description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
                                  type: string
                                separator:
                                  description: Separator placed between concatenated source label values. default is ';'.
                                  type: string
                                sourceLabels:
                                  description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                                  items:
                                    type: string
                                  type: array
                                targetLabel:
                                  description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                                  type: string
                              type: object
                            type: array
                          selector:
                            description: Select Ingress objects by labels.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        type: object
                      staticConfig:
                        description: 'StaticConfig defines static targets which are considers for probing. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.'
                        properties:
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels assigned to all metrics scraped from the targets.
                            type: object
                          static:
                            description: Targets is a list of URLs to probe using the configured prober.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
  prometheusCustomResourceDefinition.yaml: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      name: prometheuses.monitoring.coreos.com
    spec:
      group: monitoring.coreos.com
      names:
        kind: Prometheus
        listKind: PrometheusList
        plural: prometheuses
        singular: prometheus
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - description: The version of Prometheus
          jsonPath: .spec.version
          name: Version
          type: string
        - description: The desired replicas number of Prometheuses
          jsonPath: .spec.replicas
          name: Replicas
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1
        schema:
          openAPIV3Schema:
            description: Prometheus defines a Prometheus deployment.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: 'Specification of the desired behavior of the Prometheus cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                properties:
                  additionalAlertManagerConfigs:
                    description: 'AdditionalAlertManagerConfigs allows specifying a key of a Secret containing additional Prometheus AlertManager configurations. AlertManager configurations specified are appended to the configurations generated by the Prometheus Operator. Job configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config. As AlertManager configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible AlertManager configs are going to break Prometheus after the upgrade.'
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be defined
                        type: boolean
                    required:
                    - key
                    type: object
                  additionalAlertRelabelConfigs:
                    description: 'AdditionalAlertRelabelConfigs allows specifying a key of a Secret containing additional Prometheus alert relabel configurations. Alert relabel configurations specified are appended to the configurations generated by the Prometheus Operator. Alert relabel configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs. As alert relabel configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible alert relabel configs are going to break Prometheus after the upgrade.'
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be defined
                        type: boolean
                    required:
                    - key
                    type: object
                  additionalScrapeConfigs:
                    description: 'AdditionalScrapeConfigs allows specifying a key of a Secret containing additional Prometheus scrape configurations. Scrape configurations specified are appended to the configurations generated by the Prometheus Operator. Job configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config. As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible scrape configs are going to break Prometheus after the upgrade.'
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be defined
                        type: boolean
                    required:
                    - key
                    type: object
                  affinity:
                    description: If specified, the pod's scheduling constraints.
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements by node's labels.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements by node's fields.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms. The terms are ORed.
                                items:
                                  description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements by node's labels.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements by node's fields.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources, in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources, in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources, in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources, in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  alerting:
                    description: Define details regarding alerting.
                    properties:
                      alertmanagers:
                        description: AlertmanagerEndpoints Prometheus should fire alerts against.
                        items:
                          description: AlertmanagerEndpoints defines a selection of a single Endpoints object containing alertmanager IPs to fire alerts against.
                          properties:
                            apiVersion:
                              description: Version of the Alertmanager API that Prometheus uses to send alerts. It can be "v1" or "v2".
                              type: string
                            bearerTokenFile:
                              description: BearerTokenFile to read from filesystem to use when authenticating to Alertmanager.
                              type: string
                            name:
                              description: Name of Endpoints object in Namespace.
                              type: string
                            namespace:
                              description: Namespace of Endpoints object.
                              type: string
                            pathPrefix:
                              description: Prefix for the HTTP path alerts are pushed to.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Port the Alertmanager API is exposed on.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use when firing alerts.
                              type: string
                            timeout:
                              description: Timeout is a per-target Alertmanager timeout when pushing alerts.
                              type: string
                            tlsConfig:
                              description: TLS Config to use for alertmanager connection.
                              properties:
                                ca:
                                  description: Struct containing the CA cert to use for the targets.
                                  properties:
                                    configMap:
                                      description: ConfigMap containing data to use for the targets.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                    secret:
                                      description: Secret containing data to use for the targets.
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                                caFile:
                                  description: Path to the CA cert in the Prometheus container to use for the targets.
                                  type: string
                                cert:
                                  description: Struct containing the client cert file for the targets.
                                  properties:
                                    configMap:
                                      description: ConfigMap containing data to use for the targets.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                    secret:
                                      description: Secret containing data to use for the targets.
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                                certFile:
                                  description: Path to the client cert file in the Prometheus container for the targets.
                                  type: string
                                insecureSkipVerify:
                                  description: Disable target certificate validation.
                                  type: boolean
                                keyFile:
                                  description: Path to the client key file in the Prometheus container for the targets.
                                  type: string
                                keySecret:
                                  description: Secret containing the client key file for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                serverName:
                                  description: Used to verify the hostname for the targets.
                                  type: string
                              type: object
                          required:
                          - name
                          - namespace
                          - port
                          type: object
                        type: array
                    required:
                    - alertmanagers
                    type: object
                  allowOverlappingBlocks:
                    description: AllowOverlappingBlocks enables vertical compaction and vertical query merge in Prometheus. This is still experimental in Prometheus so it may change in any upcoming release.
                    type: boolean
                  apiserverConfig:
                    description: APIServerConfig allows specifying a host and auth methods to access apiserver. If left empty, Prometheus is assumed to run inside of the cluster and will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.
                    properties:
                      basicAuth:
                        description: BasicAuth allow an endpoint to authenticate over basic authentication
                        properties:
                          password:
                            description: The secret in the service monitor namespace that contains the password for authentication.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          username:
                            description: The secret in the service monitor namespace that contains the username for authentication.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      bearerToken:
                        description: Bearer token for accessing apiserver.
                        type: string
                      bearerTokenFile:
                        description: File to read bearer token for accessing apiserver.
                        type: string
                      host:
                        description: Host of apiserver. A valid string consisting of a hostname or IP followed by an optional port number
                        type: string
                      tlsConfig:
                        description: TLS Config to use for accessing apiserver.
                        properties:
                          ca:
                            description: Struct containing the CA cert to use for the targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              secret:
                                description: Secret containing data to use for the targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          caFile:
                            description: Path to the CA cert in the Prometheus container to use for the targets.
                            type: string
                          cert:
                            description: Struct containing the client cert file for the targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              secret:
                                description: Secret containing data to use for the targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          certFile:
                            description: Path to the client cert file in the Prometheus container for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: Path to the client key file in the Prometheus container for the targets.
                            type: string
                          keySecret:
                            description: Secret containing the client key file for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                    required:
                    - host
                    type: object
                  arbitraryFSAccessThroughSMs:
                    description: ArbitraryFSAccessThroughSMs configures whether configuration based on a service monitor can access arbitrary files on the file system of the Prometheus container e.g. bearer token files.
                    properties:
                      deny:
                        type: boolean
                    type: object
                  baseImage:
                    description: 'Base image to use for a Prometheus deployment. Deprecated: use ''image'' instead'
                    type: string
                  configMaps:
                    description: ConfigMaps is a list of ConfigMaps in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. The ConfigMaps are mounted into /etc/prometheus/configmaps/<configmap-name>.
                    items:
                      type: string
                    type: array
                  containers:
                    description: 'Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a Prometheus pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `prometheus`, `config-reloader`, and `thanos-sidecar`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.'
                    items:
                      description: A single application container that you want to run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resources:
                          description: 'Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        securityContext:
                          description: 'Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only root filesystem. Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies to the container.
                                  type: string
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                  type: string
                                runAsUserName:
                                  description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod''s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  disableCompaction:
                    description: Disable prometheus compaction.
                    type: boolean
                  enableAdminAPI:
                    description: 'Enable access to prometheus web admin API. Defaults to the value of `false`. WARNING: Enabling the admin APIs enables mutating endpoints, to delete data, shutdown Prometheus, and more. Enabling this should be done with care and the user is advised to add additional authentication authorization via a proxy to ensure only clients authorized to perform these actions can do so. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis'
                    type: boolean
                  enforcedNamespaceLabel:
                    description: EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.
                    type: string
                  enforcedSampleLimit:
                    description: EnforcedSampleLimit defines global limit on number of scraped samples that will be accepted. This overrides any SampleLimit set per ServiceMonitor or/and PodMonitor. It is meant to be used by admins to enforce the SampleLimit to keep overall number of samples/series under the desired limit. Note that if SampleLimit is lower that value will be taken instead.
                    format: int64
                    type: integer
                  enforcedTargetLimit:
                    description: EnforcedTargetLimit defines a global limit on the number of scraped targets. This overrides any TargetLimit set per ServiceMonitor or/and PodMonitor. It is meant to be used by admins to enforce the TargetLimit to keep overall number of targets under the desired limit. Note that if TargetLimit is higher that value will be taken instead.
                    format: int64
                    type: integer
                  evaluationInterval:
                    description: Interval between consecutive evaluations.
                    type: string
                  externalLabels:
                    additionalProperties:
                      type: string
                    description: The labels to add to any time series or alerts when communicating with external systems (federation, remote storage, Alertmanager).
                    type: object
                  externalUrl:
                    description: The external URL the Prometheus instances will be available under. This is necessary to generate correct URLs. This is necessary if Prometheus is not served from root of a DNS name.
                    type: string
                  ignoreNamespaceSelectors:
                    description: IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from the podmonitor and servicemonitor configs, and they will only discover endpoints within their current namespace.  Defaults to false.
                    type: boolean
                  image:
                    description: Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Prometheus is being configured.
                    type: string
                  imagePullSecrets:
                    description: An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                    items:
                      description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  initContainers:
                    description: 'InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the Prometheus configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.'
                    items:
                      description: A single application container that you want to run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resources:
                          description: 'Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        securityContext:
                          description: 'Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only root filesystem. Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies to the container.
                                  type: string
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                  type: string
                                runAsUserName:
                                  description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod''s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  listenLocal:
                    description: ListenLocal makes the Prometheus server listen on loopback, so that it does not bind against the Pod IP.
                    type: boolean
                  logFormat:
                    description: Log format for Prometheus to be configured with.
                    type: string
                  logLevel:
                    description: Log level for Prometheus to be configured with.
                    type: string
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: Define which Nodes the Pods are scheduled on.
                    type: object
                  overrideHonorLabels:
                    description: OverrideHonorLabels if set to true overrides all user configured honor_labels. If HonorLabels is set in ServiceMonitor or PodMonitor to true, this overrides honor_labels to false.
                    type: boolean
                  overrideHonorTimestamps:
                    description: OverrideHonorTimestamps allows to globally enforce honoring timestamps in all scrape configs.
                    type: boolean
                  paused:
                    description: When a Prometheus deployment is paused, no actions except for deletion will be performed on the underlying objects.
                    type: boolean
                  podMetadata:
                    description: PodMetadata configures Labels and Annotations which are propagated to the prometheus pods.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      name:
                        description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                    type: object
                  podMonitorNamespaceSelector:
                    description: Namespaces to be selected for PodMonitor discovery. If nil, only check own namespace.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  podMonitorSelector:
                    description: '*Experimental* PodMonitors to be selected for target discovery. *Deprecated:* if neither this nor serviceMonitorSelector are specified, configuration is unmanaged.'
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  portName:
                    description: Port name used for the pods and governing service. This defaults to web
                    type: string
                  priorityClassName:
                    description: Priority class assigned to the Pods
                    type: string
                  probeNamespaceSelector:
                    description: '*Experimental* Namespaces to be selected for Probe discovery. If nil, only check own namespace.'
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  probeSelector:
                    description: '*Experimental* Probes to be selected for target discovery.'
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  prometheusExternalLabelName:
                    description: Name of Prometheus external label used to denote Prometheus instance name. Defaults to the value of `prometheus`. External label will _not_ be added when value is set to empty string (`""`).
                    type: string
                  prometheusRulesExcludedFromEnforce:
                    description: PrometheusRulesExcludedFromEnforce - list of prometheus rules to be excluded from enforcing of adding namespace labels. Works only if enforcedNamespaceLabel set to true. Make sure both ruleNamespace and ruleName are set for each pair
                    items:
                      description: PrometheusRuleExcludeConfig enables users to configure excluded PrometheusRule names and their namespaces to be ignored while enforcing namespace label for alerts and metrics.
                      properties:
                        ruleName:
                          description: RuleNamespace - name of excluded rule
                          type: string
                        ruleNamespace:
                          description: RuleNamespace - namespace of excluded rule
                          type: string
                      required:
                      - ruleName
                      - ruleNamespace
                      type: object
                    type: array
                  query:
                    description: QuerySpec defines the query command line flags when starting Prometheus.
                    properties:
                      lookbackDelta:
                        description: The delta difference allowed for retrieving metrics during expression evaluations.
                        type: string
                      maxConcurrency:
                        description: Number of concurrent queries that can be run at once.
                        format: int32
                        type: integer
                      maxSamples:
                        description: Maximum number of samples a single query can load into memory. Note that queries will fail if they would load more samples than this into memory, so this also limits the number of samples a query can return.
                        format: int32
                        type: integer
                      timeout:
                        description: Maximum time a query may take before being aborted.
                        type: string
                    type: object
                  queryLogFile:
                    description: QueryLogFile specifies the file to which PromQL queries are logged. Note that this location must be writable, and can be persisted using an attached volume. Alternatively, the location can be set to a stdout location such as `/dev/stdout` to log querie information to the default Prometheus log stream. This is only available in versions of Prometheus >= 2.16.0. For more details, see the Prometheus docs (https://prometheus.io/docs/guides/query-log/)
                    type: string
                  remoteRead:
                    description: If specified, the remote_read spec. This is an experimental feature, it may change in any upcoming release in a breaking way.
                    items:
                      description: RemoteReadSpec defines the remote_read configuration for prometheus.
                      properties:
                        basicAuth:
                          description: BasicAuth for the URL.
                          properties:
                            password:
                              description: The secret in the service monitor namespace that contains the password for authentication.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            username:
                              description: The secret in the service monitor namespace that contains the username for authentication.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        bearerToken:
                          description: bearer token for remote read.
                          type: string
                        bearerTokenFile:
                          description: File to read bearer token for remote read.
                          type: string
                        name:
                          description: The name of the remote read queue, must be unique if specified. The name is used in metrics and logging in order to differentiate read configurations.  Only valid in Prometheus versions 2.15.0 and newer.
                          type: string
                        proxyUrl:
                          description: Optional ProxyURL
                          type: string
                        readRecent:
                          description: Whether reads should be made for queries for time ranges that the local storage should have complete data for.
                          type: boolean
                        remoteTimeout:
                          description: Timeout for requests to the remote read endpoint.
                          type: string
                        requiredMatchers:
                          additionalProperties:
                            type: string
                          description: An optional list of equality matchers which have to be present in a selector to query the remote read endpoint.
                          type: object
                        tlsConfig:
                          description: TLS Config to use for remote read.
                          properties:
                            ca:
                              description: Struct containing the CA cert to use for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            caFile:
                              description: Path to the CA cert in the Prometheus container to use for the targets.
                              type: string
                            cert:
                              description: Struct containing the client cert file for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            certFile:
                              description: Path to the client cert file in the Prometheus container for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: Path to the client key file in the Prometheus container for the targets.
                              type: string
                            keySecret:
                              description: Secret containing the client key file for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                        url:
                          description: The URL of the endpoint to send samples to.
                          type: string
                      required:
                      - url
                      type: object
                    type: array
                  remoteWrite:
                    description: If specified, the remote_write spec. This is an experimental feature, it may change in any upcoming release in a breaking way.
                    items:
                      description: RemoteWriteSpec defines the remote_write configuration for prometheus.
                      properties:
                        basicAuth:
                          description: BasicAuth for the URL.
                          properties:
                            password:
                              description: The secret in the service monitor namespace that contains the password for authentication.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            username:
                              description: The secret in the service monitor namespace that contains the username for authentication.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        bearerToken:
                          description: File to read bearer token for remote write.
                          type: string
                        bearerTokenFile:
                          description: File to read bearer token for remote write.
                          type: string
                        name:
                          description: The name of the remote write queue, must be unique if specified. The name is used in metrics and logging in order to differentiate queues. Only valid in Prometheus versions 2.15.0 and newer.
                          type: string
                        proxyUrl:
                          description: Optional ProxyURL
                          type: string
                        queueConfig:
                          description: QueueConfig allows tuning of the remote write queue parameters.
                          properties:
                            batchSendDeadline:
                              description: BatchSendDeadline is the maximum time a sample will wait in buffer.
                              type: string
                            capacity:
                              description: Capacity is the number of samples to buffer per shard before we start dropping them.
                              type: integer
                            maxBackoff:
                              description: MaxBackoff is the maximum retry delay.
                              type: string
                            maxRetries:
                              description: MaxRetries is the maximum number of times to retry a batch on recoverable errors.
                              type: integer
                            maxSamplesPerSend:
                              description: MaxSamplesPerSend is the maximum number of samples per send.
                              type: integer
                            maxShards:
                              description: MaxShards is the maximum number of shards, i.e. amount of concurrency.
                              type: integer
                            minBackoff:
                              description: MinBackoff is the initial retry delay. Gets doubled for every retry.
                              type: string
                            minShards:
                              description: MinShards is the minimum number of shards, i.e. amount of concurrency.
                              type: integer
                          type: object
                        remoteTimeout:
                          description: Timeout for requests to the remote write endpoint.
                          type: string
                        tlsConfig:
                          description: TLS Config to use for remote write.
                          properties:
                            ca:
                              description: Struct containing the CA cert to use for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            caFile:
                              description: Path to the CA cert in the Prometheus container to use for the targets.
                              type: string
                            cert:
                              description: Struct containing the client cert file for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            certFile:
                              description: Path to the client cert file in the Prometheus container for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: Path to the client key file in the Prometheus container for the targets.
                              type: string
                            keySecret:
                              description: Secret containing the client key file for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                        url:
                          description: The URL of the endpoint to send samples to.
                          type: string
                        writeRelabelConfigs:
                          description: The list of remote write relabel configurations.
                          items:
                            description: 'RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                            properties:
                              action:
                                description: Action to perform based on regex matching. Default is 'replace'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source label values.
                                format: int64
                                type: integer
                              regex:
                                description: Regular expression against which the extracted value is matched. Default is '(.*)'
                                type: string
                              replacement:
                                description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated source label values. default is ';'.
                                type: string
                              sourceLabels:
                                description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              targetLabel:
                                description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                      required:
                      - url
                      type: object
                    type: array
                  replicaExternalLabelName:
                    description: Name of Prometheus external label used to denote replica name. Defaults to the value of `prometheus_replica`. External label will _not_ be added when value is set to empty string (`""`).
                    type: string
                  replicas:
                    description: Number of replicas of each shard to deploy for a Prometheus deployment. Number of replicas multiplied by shards is the total number of Pods created.
                    format: int32
                    type: integer
                  resources:
                    description: Define resources requests and limits for single Pods.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  retention:
                    description: Time duration Prometheus shall retain data for. Default is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)` (milliseconds seconds minutes hours days weeks years).
                    type: string
                  retentionSize:
                    description: Maximum amount of disk space used by blocks.
                    type: string
                  routePrefix:
                    description: The route prefix Prometheus registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`.
                    type: string
                  ruleNamespaceSelector:
                    description: Namespaces to be selected for PrometheusRules discovery. If unspecified, only the same namespace as the Prometheus object is in is used.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  ruleSelector:
                    description: A selector to select which PrometheusRules to mount for loading alerting/recording rules from. Until (excluding) Prometheus Operator v0.24.0 Prometheus Operator will migrate any legacy rule ConfigMaps to PrometheusRule custom resources selected by RuleSelector. Make sure it does not match any config maps that you do not want to be migrated.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  rules:
                    description: /--rules.*/ command-line arguments.
                    properties:
                      alert:
                        description: /--rules.alert.*/ command-line arguments
                        properties:
                          forGracePeriod:
                            description: Minimum duration between alert and restored 'for' state. This is maintained only for alerts with configured 'for' time greater than grace period.
                            type: string
                          forOutageTolerance:
                            description: Max time to tolerate prometheus outage for restoring 'for' state of alert.
                            type: string
                          resendDelay:
                            description: Minimum amount of time to wait before resending an alert to Alertmanager.
                            type: string
                        type: object
                    type: object
                  scrapeInterval:
                    description: Interval between consecutive scrapes.
                    type: string
                  scrapeTimeout:
                    description: Number of seconds to wait for target to respond before erroring.
                    type: string
                  secrets:
                    description: Secrets is a list of Secrets in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. The Secrets are mounted into /etc/prometheus/secrets/<secret-name>.
                    items:
                      type: string
                    type: array
                  securityContext:
                    description: SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.
                    properties:
                      fsGroup:
                        description: "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: \n 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- \n If unset, the Kubelet will not modify the ownership and permissions of any volume."
                        format: int64
                        type: integer
                      fsGroupChangePolicy:
                        description: 'fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified defaults to "Always".'
                        type: string
                      runAsGroup:
                        description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                        properties:
                          level:
                            description: Level is SELinux level label that applies to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies to the container.
                            type: string
                        type: object
                      supplementalGroups:
                        description: A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            type: string
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: string
                        type: object
                    type: object
                  serviceAccountName:
                    description: ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.
                    type: string
                  serviceMonitorNamespaceSelector:
                    description: Namespaces to be selected for ServiceMonitor discovery. If nil, only check own namespace.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  serviceMonitorSelector:
                    description: ServiceMonitors to be selected for target discovery. *Deprecated:* if neither this nor podMonitorSelector are specified, configuration is unmanaged.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  sha:
                    description: 'SHA of Prometheus container image to be deployed. Defaults to the value of `version`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set. Deprecated: use ''image'' instead.  The image digest can be specified as part of the image URL.'
                    type: string
                  shards:
                    description: 'EXPERIMENTAL: Number of shards to distribute targets onto. Number of replicas multiplied by shards is the total number of Pods created. Note that scaling down shards will not reshard data onto remaining instances, it must be manually moved. Increasing shards will not reshard data either but it will continue to be available from the same instances. To query globally use Thanos sidecar and Thanos querier or remote write data to a central location. Sharding is done on the content of the `__address__` target meta-label.'
                    format: int32
                    type: integer
                  storage:
                    description: Storage spec to specify how storage shall be used.
                    properties:
                      disableMountSubPath:
                        description: 'Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary. DisableMountSubPath allows to remove any subPath usage in volume mounts.'
                        type: boolean
                      emptyDir:
                        description: 'EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
                        properties:
                          medium:
                            description: 'What type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      volumeClaimTemplate:
                        description: A PVC spec to be used by the Prometheus StatefulSets.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: EmbeddedMetadata contains metadata relevant to an EmbeddedResource.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                              name:
                                description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                            type: object
                          spec:
                            description: 'Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              accessModes:
                                description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              dataSource:
                                description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              resources:
                                description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                type: object
                              selector:
                                description: A label query over volumes to consider for binding.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                              storageClassName:
                                description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                                type: string
                            type: object
                          status:
                            description: 'Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              accessModes:
                                description: 'AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              capacity:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: Represents the actual resources of the underlying volume.
                                type: object
                              conditions:
                                description: Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
                                items:
                                  description: PersistentVolumeClaimCondition contails details about state of pvc
                                  properties:
                                    lastProbeTime:
                                      description: Last time we probed the condition.
                                      format: date-time
                                      type: string
                                    lastTransitionTime:
                                      description: Last time the condition transitioned from one status to another.
                                      format: date-time
                                      type: string
                                    message:
                                      description: Human-readable message indicating details about last transition.
                                      type: string
                                    reason:
                                      description: Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
                                      type: string
                                    status:
                                      type: string
                                    type:
                                      description: PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
                                      type: string
                                  required:
                                  - status
                                  - type
                                  type: object
                                type: array
                              phase:
                                description: Phase represents the current phase of PersistentVolumeClaim.
                                type: string
                            type: object
                        type: object
                    type: object
                  tag:
                    description: 'Tag of Prometheus container image to be deployed. Defaults to the value of `version`. Version is ignored if Tag is set. Deprecated: use ''image'' instead.  The image tag can be specified as part of the image URL.'
                    type: string
                  thanos:
                    description: "Thanos configuration allows configuring various aspects of a Prometheus server in a Thanos environment. \n This section is experimental, it may change significantly without deprecation notice in any release. \n This is experimental and may change significantly without backward compatibility in any release."
                    properties:
                      baseImage:
                        description: 'Thanos base image if other than default. Deprecated: use ''image'' instead'
                        type: string
                      grpcServerTlsConfig:
                        description: 'GRPCServerTLSConfig configures the gRPC server from which Thanos Querier reads recorded rule data. Note: Currently only the CAFile, CertFile, and KeyFile fields are supported. Maps to the ''--grpc-server-tls-*'' CLI args.'
                        properties:
                          ca:
                            description: Struct containing the CA cert to use for the targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              secret:
                                description: Secret containing data to use for the targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          caFile:
                            description: Path to the CA cert in the Prometheus container to use for the targets.
                            type: string
                          cert:
                            description: Struct containing the client cert file for the targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              secret:
                                description: Secret containing data to use for the targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          certFile:
                            description: Path to the client cert file in the Prometheus container for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: Path to the client key file in the Prometheus container for the targets.
                            type: string
                          keySecret:
                            description: Secret containing the client key file for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                      image:
                        description: Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Thanos is being configured.
                        type: string
                      listenLocal:
                        description: ListenLocal makes the Thanos sidecar listen on loopback, so that it does not bind against the Pod IP.
                        type: boolean
                      logFormat:
                        description: LogFormat for Thanos sidecar to be configured with.
                        type: string
                      logLevel:
                        description: LogLevel for Thanos sidecar to be configured with.
                        type: string
                      minTime:
                        description: MinTime for Thanos sidecar to be configured with. Option can be a constant time in RFC3339 format or time duration relative to current time, such as -1d or 2h45m. Valid duration units are ms, s, m, h, d, w, y.
                        type: string
                      objectStorageConfig:
                        description: ObjectStorageConfig configures object storage in Thanos. Alternative to ObjectStorageConfigFile, and lower order priority.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      objectStorageConfigFile:
                        description: ObjectStorageConfigFile specifies the path of the object storage configuration file. When used alongside with ObjectStorageConfig, ObjectStorageConfigFile takes precedence.
                        type: string
                      resources:
                        description: Resources defines the resource requirements for the Thanos sidecar. If not provided, no requests/limits will be set
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                      sha:
                        description: 'SHA of Thanos container image to be deployed. Defaults to the value of `version`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set. Deprecated: use ''image'' instead.  The image digest can be specified as part of the image URL.'
                        type: string
                      tag:
                        description: 'Tag of Thanos sidecar container image to be deployed. Defaults to the value of `version`. Version is ignored if Tag is set. Deprecated: use ''image'' instead.  The image tag can be specified as part of the image URL.'
                        type: string
                      tracingConfig:
                        description: TracingConfig configures tracing in Thanos. This is an experimental feature, it may change in any upcoming release in a breaking way.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      version:
                        description: Version describes the version of Thanos to use.
                        type: string
                    type: object
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologySpreadConstraints:
                    description: If specified, the pod's topology spread constraints.
                    items:
                      description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                      properties:
                        labelSelector:
                          description: LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        maxSkew:
                          description: 'MaxSkew describes the degree to which pods may be unevenly distributed. It''s the maximum permitted difference between the number of matching pods in any two topology domains of a given topology type. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. It''s a required field. Default value is 1 and 0 is not allowed.'
                          format: int32
                          type: integer
                        topologyKey:
                          description: TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
                          type: string
                        whenUnsatisfiable:
                          description: 'WhenUnsatisfiable indicates how to deal with a pod if it doesn''t satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it - ScheduleAnyway tells the scheduler to still schedule it It''s considered as "Unsatisfiable" if and only if placing incoming pod on any topology violates "MaxSkew". For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won''t make it *more* imbalanced. It''s a required field.'
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                    type: array
                  version:
                    description: Version of Prometheus to be deployed.
                    type: string
                  volumeMounts:
                    description: VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the prometheus container, that are generated as a result of StorageSpec objects.
                    items:
                      description: VolumeMount describes a mounting of a Volume within a container.
                      properties:
                        mountPath:
                          description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                          type: string
                        mountPropagation:
                          description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  volumes:
                    description: Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
                    items:
                      description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                      properties:
                        awsElasticBlockStore:
                          description: 'AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            partition:
                              description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: boolean
                            volumeID:
                              description: 'Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'Host Caching mode: None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: The Name of the data disk in the blob storage
                              type: string
                            diskURI:
                              description: The URI the data disk in the blob storage
                              type: string
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: the name of secret that contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: Share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                          properties:
                            monitors:
                              description: 'Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            path:
                              description: 'Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: boolean
                            secretFile:
                              description: 'Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                            secretRef:
                              description: 'Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            user:
                              description: 'Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: 'Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          properties:
                            fsType:
                              description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: boolean
                            secretRef:
                              description: 'Optional: points to a secret object containing parameters used to connect to OpenStack.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            volumeID:
                              description: 'volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: ConfigMap represents a configMap that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a volume.
                                properties:
                                  key:
                                    description: The key to project.
                                    type: string
                                  mode:
                                    description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its keys must be defined
                              type: boolean
                          type: object
                        csi:
                          description: CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
                          properties:
                            driver:
                              description: Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            readOnly:
                              description: Specifies a read-only configuration for the volume. Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              additionalProperties:
                                type: string
                              description: VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                              type: object
                          required:
                          - driver
                          type: object
                        downwardAPI:
                          description: DownwardAPI represents downward API about the pod that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume file
                              items:
                                description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  mode:
                                    description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                required:
                                - path
                                type: object
                              type: array
                          type: object
                        emptyDir:
                          description: 'EmptyDir represents a temporary directory that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          properties:
                            medium:
                              description: 'What type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        fc:
                          description: FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                          properties:
                            fsType:
                              description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            lun:
                              description: 'Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                              type: boolean
                            targetWWNs:
                              description: 'Optional: FC target worldwide names (WWNs)'
                              items:
                                type: string
                              type: array
                            wwids:
                              description: 'Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.'
                              items:
                                type: string
                              type: array
                          type: object
                        flexVolume:
                          description: FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: Driver is the name of the driver to use for this volume.
                              type: string
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'Optional: Extra command options if any.'
                              type: object
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                              type: boolean
                            secretRef:
                              description: 'Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                          required:
                          - driver
                          type: object
                        flocker:
                          description: Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                          properties:
                            datasetName:
                              description: Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                              type: string
                            datasetUUID:
                              description: UUID of the dataset. This is unique identifier of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: 'GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            partition:
                              description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              format: int32
                              type: integer
                            pdName:
                              description: 'Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: 'GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod''s container.'
                          properties:
                            directory:
                              description: Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                              type: string
                            repository:
                              description: Repository URL
                              type: string
                            revision:
                              description: Commit hash for the specified revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: 'Glusterfs represents a Glusterfs mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                          properties:
                            endpoints:
                              description: 'EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            path:
                              description: 'Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: 'HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.'
                          properties:
                            path:
                              description: 'Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                            type:
                              description: 'Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                          required:
                          - path
                          type: object
                        iscsi:
                          description: 'ISCSI represents an ISCSI Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                          properties:
                            chapAuthDiscovery:
                              description: whether support iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: whether support iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            initiatorName:
                              description: Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                              type: string
                            iqn:
                              description: Target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              items:
                                type: string
                              type: array
                            readOnly:
                              description: ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                              type: boolean
                            secretRef:
                              description: CHAP Secret for iSCSI target and initiator authentication
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            targetPortal:
                              description: iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        name:
                          description: 'Volume''s name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        nfs:
                          description: 'NFS represents an NFS mount on the host that shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          properties:
                            path:
                              description: 'Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: boolean
                            server:
                              description: 'Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: 'PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            claimName:
                              description: 'ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: Will force the ReadOnly setting in VolumeMounts. Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: ID that identifies Photon Controller persistent disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: VolumeID uniquely identifies a Portworx volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: Items for all in one resources secrets, configmaps, and downward API
                          properties:
                            defaultMode:
                              description: Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: list of volume projections
                              items:
                                description: Projection that may be projected along with other supported volume types
                                properties:
                                  configMap:
                                    description: information about the configMap data to project
                                    properties:
                                      items:
                                        description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path within a volume.
                                          properties:
                                            key:
                                              description: The key to project.
                                              type: string
                                            mode:
                                              description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its keys must be defined
                                        type: boolean
                                    type: object
                                  downwardAPI:
                                    description: information about the downwardAPI data to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume file
                                        items:
                                          description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            mode:
                                              description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required for volumes, optional for env vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output format of the exposed resources, defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                          required:
                                          - path
                                          type: object
                                        type: array
                                    type: object
                                  secret:
                                    description: information about the secret data to project
                                    properties:
                                      items:
                                        description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path within a volume.
                                          properties:
                                            key:
                                              description: The key to project.
                                              type: string
                                            mode:
                                              description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    type: object
                                  serviceAccountToken:
                                    description: information about the serviceAccountToken data to project
                                    properties:
                                      audience:
                                        description: Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: Path is the path relative to the mount point of the file to project the token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                          required:
                          - sources
                          type: object
                        quobyte:
                          description: Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                          properties:
                            group:
                              description: Group to map volume access to Default is no group
                              type: string
                            readOnly:
                              description: ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                              type: boolean
                            registry:
                              description: Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                              type: string
                            user:
                              description: User to map volume access to Defaults to serivceaccount user
                              type: string
                            volume:
                              description: Volume is a string that references an already created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: 'RBD represents a Rados Block Device mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            image:
                              description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            keyring:
                              description: 'Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            monitors:
                              description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            pool:
                              description: 'The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: boolean
                            secretRef:
                              description: 'SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            user:
                              description: 'The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        scaleIO:
                          description: ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              type: string
                            gateway:
                              description: The host address of the ScaleIO API Gateway.
                              type: string
                            protectionDomain:
                              description: The name of the ScaleIO Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            sslEnabled:
                              description: Flag to enable/disable SSL communication with Gateway, default false
                              type: boolean
                            storageMode:
                              description: Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: The ScaleIO Storage Pool associated with the protection domain.
                              type: string
                            system:
                              description: The name of the storage system as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: The name of a volume already created in the ScaleIO system that is associated with this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: 'Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a volume.
                                properties:
                                  key:
                                    description: The key to project.
                                    type: string
                                  mode:
                                    description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            optional:
                              description: Specify whether the Secret or its keys must be defined
                              type: boolean
                            secretName:
                              description: 'Name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              type: string
                          type: object
                        storageos:
                          description: StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            volumeName:
                              description: VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                              type: string
                            volumeNamespace:
                              description: VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                              type: string
                          type: object
                        vsphereVolume:
                          description: VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: Storage Policy Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: Path that identifies vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  walCompression:
                    description: Enable compression of the write-ahead log using Snappy. This flag is only available in versions of Prometheus >= 2.11.0.
                    type: boolean
                  web:
                    description: WebSpec defines the web command line flags when starting Prometheus.
                    properties:
                      pageTitle:
                        description: The prometheus web page title
                        type: string
                    type: object
                type: object
              status:
                description: 'Most recent observed status of the Prometheus cluster. Read-only. Not included when requesting from the apiserver, only from the Prometheus Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                properties:
                  availableReplicas:
                    description: Total number of available pods (ready for at least minReadySeconds) targeted by this Prometheus deployment.
                    format: int32
                    type: integer
                  paused:
                    description: Represents whether any actions on the underlying managed objects are being performed. Only delete actions will be performed.
                    type: boolean
                  replicas:
                    description: Total number of non-terminated pods targeted by this Prometheus deployment (their labels match the selector).
                    format: int32
                    type: integer
                  unavailableReplicas:
                    description: Total number of unavailable pods targeted by this Prometheus deployment.
                    format: int32
                    type: integer
                  updatedReplicas:
                    description: Total number of non-terminated pods targeted by this Prometheus deployment that have the desired version spec.
                    format: int32
                    type: integer
                required:
                - availableReplicas
                - paused
                - replicas
                - unavailableReplicas
                - updatedReplicas
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
  prometheusruleCustomResourceDefinition.yaml: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      name: prometheusrules.monitoring.coreos.com
    spec:
      group: monitoring.coreos.com
      names:
        kind: PrometheusRule
        listKind: PrometheusRuleList
        plural: prometheusrules
        singular: prometheusrule
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            description: PrometheusRule defines recording and alerting rules for a Prometheus instance
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Specification of desired alerting rule definitions for Prometheus.
                properties:
                  groups:
                    description: Content of Prometheus rule file
                    items:
                      description: 'RuleGroup is a list of sequentially evaluated recording and alerting rules. Note: PartialResponseStrategy is only used by ThanosRuler and will be ignored by Prometheus instances.  Valid values for this field are ''warn'' or ''abort''.  More info: https://github.com/thanos-io/thanos/blob/master/docs/components/rule.md#partial-response'
                      properties:
                        interval:
                          type: string
                        name:
                          type: string
                        partial_response_strategy:
                          type: string
                        rules:
                          items:
                            description: Rule describes an alerting or recording rule.
                            properties:
                              alert:
                                type: string
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                              expr:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              for:
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                              record:
                                type: string
                            required:
                            - expr
                            type: object
                          type: array
                      required:
                      - name
                      - rules
                      type: object
                    type: array
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
kind: KuboardAddonResource
lifecycleHandler:
  additionalStep: >-
    <div style="font-size: 14px; color: red; font-weight: 500">请确认您的 Kuboard
    版本不低于 v3.0.0-beta.2</div>
    <div style="font-size: 14px; color: red; font-weight: 500">本套件兼容 amd64 和 arm64 架构的 CPU</div>
  beforeUninstall: JavaScriptToExecuteBeforeUninstall
  disable: JavaScriptToExecuteBeforeDisable
  initialize: |
    import { startInitTasks, completeInitTask, failInitTask, KuboardProxy } from '/addon-api/index.js'

    export function initializeKuboardAddon (initContext) {
      startInitTasks([
        {name: 'system-monitor', description: '初始化任务 system-monitor', descriptionEn: 'init task: system-monitor' },
      ])
      setTimeout(_ => {
        completeInitTask('system-monitor')
      }, 1000)
      console.log('finished')
    }
  install:
    - alertmanagerConfigCustomResourceDefinition.yaml
    - alertmanagerCustomResourceDefinition.yaml
    - podmonitorCustomResourceDefinition.yaml
    - probeCustomResourceDefinition.yaml
    - prometheusCustomResourceDefinition.yaml
    - prometheusruleCustomResourceDefinition.yaml
  images: {
    'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/alertmanager:v0.21.0': 'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/alertmanager:v0.21.0',
    'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/prometheus-operator:v0.44.0': 'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/prometheus-operator:v0.44.0',
    'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/node-exporter:v1.0.1': 'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/node-exporter:v1.0.1',
    'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/prometheus:v2.22.1': 'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/prometheus:v2.22.1',
    'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/kube-state-metrics:v1.9.7': 'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/kube-state-metrics:v1.9.7',
    'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/kube-rbac-proxy:v0.8.0': 'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/kube-rbac-proxy:v0.8.0',
    'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/grafana:7.3.5': 'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/grafana:7.3.5',
    'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/k8s-prometheus-adapter:v0.8.2': 'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/k8s-prometheus-adapter:v0.8.2',
    'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/prometheus-config-reloader:v0.44.0': 'swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/prometheus-config-reloader:v0.44.0'
  }
metadata:
  name: system-monitor.addons.kuboard.cn
  namespace: kuboard
parameters:
  - default: '9100'
    description: NodeExporter Host Port
    descriptionEn: NodeExporter Host Port
    name: NODE_EXPORTER_PORT
    required: true
    type: integer
    value: '9100'
  - default: '2'
    description: Prometheus 实例数量
    descriptionEn: Prometheus replicas
    name: PROMETHEUS_REPLICAS
    required: true
    type: integer
    value: '2'
  - default: please-provide-a-valid-storage-class-name
    description: 为 Prometheus 提供存储空间的 StorageClass
    descriptionEn: StorageClass that is used by Prometheus
    name: PROMETHEUS_STORAGE_CLASS
    required: true
    type: string
    value: please-provide-a-valid-storage-class-name
  - default: '40Gi'
    description: 为每个 Prometheus 实例分配的存储卷大小
    descriptionEn: Storage capacity allocated for each instance of prometheus
    name: PROMETHEUS_STORAGE_SIZE_PER_VOLUME
    required: true
    type: string
    value: '40Gi'



---
apiVersion: kuboard.cn/v1
initResources: {}
isPreInstallScript: true
k8sYamls:
  clusterRole.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/version: v0.44.0
      name: prometheus-operator
    rules:
    - apiGroups:
      - monitoring.coreos.com
      resources:
      - alertmanagers
      - alertmanagers/finalizers
      - alertmanagerconfigs
      - prometheuses
      - prometheuses/finalizers
      - thanosrulers
      - thanosrulers/finalizers
      - servicemonitors
      - podmonitors
      - probes
      - prometheusrules
      verbs:
      - '*'
    - apiGroups:
      - apps
      resources:
      - statefulsets
      verbs:
      - '*'
    - apiGroups:
      - ""
      resources:
      - configmaps
      - secrets
      verbs:
      - '*'
    - apiGroups:
      - ""
      resources:
      - pods
      verbs:
      - list
      - delete
    - apiGroups:
      - ""
      resources:
      - services
      - services/finalizers
      - endpoints
      verbs:
      - get
      - create
      - update
      - delete
    - apiGroups:
      - ""
      resources:
      - nodes
      verbs:
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - networking.k8s.io
      resources:
      - ingresses
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - authentication.k8s.io
      resources:
      - tokenreviews
      verbs:
      - create
    - apiGroups:
      - authorization.k8s.io
      resources:
      - subjectaccessreviews
      verbs:
      - create
  clusterRoleBinding.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/version: v0.44.0
      name: prometheus-operator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: prometheus-operator
    subjects:
    - kind: ServiceAccount
      name: prometheus-operator
      namespace: kuboard
  deployment.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/version: v0.44.0
      name: prometheus-operator
      namespace: kuboard
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/name: prometheus-operator
      template:
        metadata:
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: prometheus-operator
            app.kubernetes.io/version: v0.44.0
        spec:
          containers:
          - args:
            - --kubelet-service=kube-system/kubelet
            - --prometheus-config-reloader=swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/prometheus-config-reloader:v0.44.0
            image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/prometheus-operator:v0.44.0
            name: prometheus-operator
            ports:
            - containerPort: 8080
              name: http
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 100m
                memory: 100Mi
            securityContext:
              allowPrivilegeEscalation: false
          - args:
            - --logtostderr
            - --secure-listen-address=:8443
            - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
            - --upstream=http://127.0.0.1:8080/
            image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/kube-rbac-proxy:v0.8.0
            name: kube-rbac-proxy
            ports:
            - containerPort: 8443
              name: https
            securityContext:
              runAsGroup: 65532
              runAsNonRoot: true
              runAsUser: 65532
          nodeSelector:
            beta.kubernetes.io/os: linux
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
          serviceAccountName: prometheus-operator
  service.yaml: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/version: v0.44.0
      name: prometheus-operator
      namespace: kuboard
    spec:
      clusterIP: None
      ports:
      - name: https
        port: 8443
        targetPort: https
      selector:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
  serviceAccount.yaml: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/version: v0.44.0
      name: prometheus-operator
      namespace: kuboard
  servicemonitorCustomResourceDefinition.yaml: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      name: servicemonitors.monitoring.coreos.com
    spec:
      group: monitoring.coreos.com
      names:
        kind: ServiceMonitor
        listKind: ServiceMonitorList
        plural: servicemonitors
        singular: servicemonitor
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            description: ServiceMonitor defines monitoring for a set of services.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Specification of desired Service selection for target discovery by Prometheus.
                properties:
                  endpoints:
                    description: A list of endpoints allowed as part of this ServiceMonitor.
                    items:
                      description: Endpoint defines a scrapeable endpoint serving Prometheus metrics.
                      properties:
                        basicAuth:
                          description: 'BasicAuth allow an endpoint to authenticate over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                          properties:
                            password:
                              description: The secret in the service monitor namespace that contains the password for authentication.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            username:
                              description: The secret in the service monitor namespace that contains the username for authentication.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        bearerTokenFile:
                          description: File to read bearer token for scraping targets.
                          type: string
                        bearerTokenSecret:
                          description: Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the service monitor and accessible by the Prometheus Operator.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        honorLabels:
                          description: HonorLabels chooses the metric's labels on collisions with target labels.
                          type: boolean
                        honorTimestamps:
                          description: HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.
                          type: boolean
                        interval:
                          description: Interval at which metrics should be scraped
                          type: string
                        metricRelabelings:
                          description: MetricRelabelConfigs to apply to samples before ingestion.
                          items:
                            description: 'RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                            properties:
                              action:
                                description: Action to perform based on regex matching. Default is 'replace'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source label values.
                                format: int64
                                type: integer
                              regex:
                                description: Regular expression against which the extracted value is matched. Default is '(.*)'
                                type: string
                              replacement:
                                description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated source label values. default is ';'.
                                type: string
                              sourceLabels:
                                description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              targetLabel:
                                description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        params:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Optional HTTP URL parameters
                          type: object
                        path:
                          description: HTTP path to scrape for metrics.
                          type: string
                        port:
                          description: Name of the service port this endpoint refers to. Mutually exclusive with targetPort.
                          type: string
                        proxyUrl:
                          description: ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.
                          type: string
                        relabelings:
                          description: 'RelabelConfigs to apply to samples before scraping. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                          items:
                            description: 'RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                            properties:
                              action:
                                description: Action to perform based on regex matching. Default is 'replace'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source label values.
                                format: int64
                                type: integer
                              regex:
                                description: Regular expression against which the extracted value is matched. Default is '(.*)'
                                type: string
                              replacement:
                                description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated source label values. default is ';'.
                                type: string
                              sourceLabels:
                                description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              targetLabel:
                                description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        scheme:
                          description: HTTP scheme to use for scraping.
                          type: string
                        scrapeTimeout:
                          description: Timeout after which the scrape is ended
                          type: string
                        targetPort:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the target port of the Pod behind the Service, the port must be specified with container port property. Mutually exclusive with port.
                          x-kubernetes-int-or-string: true
                        tlsConfig:
                          description: TLS configuration to use when scraping the endpoint
                          properties:
                            ca:
                              description: Struct containing the CA cert to use for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            caFile:
                              description: Path to the CA cert in the Prometheus container to use for the targets.
                              type: string
                            cert:
                              description: Struct containing the client cert file for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            certFile:
                              description: Path to the client cert file in the Prometheus container for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: Path to the client key file in the Prometheus container for the targets.
                              type: string
                            keySecret:
                              description: Secret containing the client key file for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                      type: object
                    type: array
                  jobLabel:
                    description: The label to use to retrieve the job name from.
                    type: string
                  namespaceSelector:
                    description: Selector to select which namespaces the Endpoints objects are discovered from.
                    properties:
                      any:
                        description: Boolean describing whether all namespaces are selected in contrast to a list restricting them.
                        type: boolean
                      matchNames:
                        description: List of namespace names.
                        items:
                          type: string
                        type: array
                    type: object
                  podTargetLabels:
                    description: PodTargetLabels transfers labels on the Kubernetes Pod onto the target.
                    items:
                      type: string
                    type: array
                  sampleLimit:
                    description: SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
                    format: int64
                    type: integer
                  selector:
                    description: Selector to select Endpoints objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  targetLabels:
                    description: TargetLabels transfers labels on the Kubernetes Service onto the target.
                    items:
                      type: string
                    type: array
                  targetLimit:
                    description: TargetLimit defines a limit on the number of scraped targets that will be accepted.
                    format: int64
                    type: integer
                required:
                - endpoints
                - selector
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
  thanosrulerCustomResourceDefinition.yaml: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      name: thanosrulers.monitoring.coreos.com
    spec:
      group: monitoring.coreos.com
      names:
        kind: ThanosRuler
        listKind: ThanosRulerList
        plural: thanosrulers
        singular: thanosruler
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            description: ThanosRuler defines a ThanosRuler deployment.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: 'Specification of the desired behavior of the ThanosRuler cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                properties:
                  affinity:
                    description: If specified, the pod's scheduling constraints.
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements by node's labels.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements by node's fields.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms. The terms are ORed.
                                items:
                                  description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements by node's labels.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements by node's fields.
                                      items:
                                        description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources, in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources, in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources, in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources, in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  alertDropLabels:
                    description: AlertDropLabels configure the label names which should be dropped in ThanosRuler alerts. If `labels` field is not provided, `thanos_ruler_replica` will be dropped in alerts by default.
                    items:
                      type: string
                    type: array
                  alertQueryUrl:
                    description: The external Query URL the Thanos Ruler will set in the 'Source' field of all alerts. Maps to the '--alert.query-url' CLI arg.
                    type: string
                  alertmanagersConfig:
                    description: Define configuration for connecting to alertmanager.  Only available with thanos v0.10.0 and higher.  Maps to the `alertmanagers.config` arg.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be defined
                        type: boolean
                    required:
                    - key
                    type: object
                  alertmanagersUrl:
                    description: 'Define URLs to send alerts to Alertmanager.  For Thanos v0.10.0 and higher, AlertManagersConfig should be used instead.  Note: this field will be ignored if AlertManagersConfig is specified. Maps to the `alertmanagers.url` arg.'
                    items:
                      type: string
                    type: array
                  containers:
                    description: 'Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a ThanosRuler pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `thanos-ruler` and `config-reloader`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.'
                    items:
                      description: A single application container that you want to run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resources:
                          description: 'Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        securityContext:
                          description: 'Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only root filesystem. Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies to the container.
                                  type: string
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                  type: string
                                runAsUserName:
                                  description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod''s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  enforcedNamespaceLabel:
                    description: EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.
                    type: string
                  evaluationInterval:
                    description: Interval between consecutive evaluations.
                    type: string
                  externalPrefix:
                    description: The external URL the Thanos Ruler instances will be available under. This is necessary to generate correct URLs. This is necessary if Thanos Ruler is not served from root of a DNS name.
                    type: string
                  grpcServerTlsConfig:
                    description: 'GRPCServerTLSConfig configures the gRPC server from which Thanos Querier reads recorded rule data. Note: Currently only the CAFile, CertFile, and KeyFile fields are supported. Maps to the ''--grpc-server-tls-*'' CLI args.'
                    properties:
                      ca:
                        description: Struct containing the CA cert to use for the targets.
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      caFile:
                        description: Path to the CA cert in the Prometheus container to use for the targets.
                        type: string
                      cert:
                        description: Struct containing the client cert file for the targets.
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      certFile:
                        description: Path to the client cert file in the Prometheus container for the targets.
                        type: string
                      insecureSkipVerify:
                        description: Disable target certificate validation.
                        type: boolean
                      keyFile:
                        description: Path to the client key file in the Prometheus container for the targets.
                        type: string
                      keySecret:
                        description: Secret containing the client key file for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      serverName:
                        description: Used to verify the hostname for the targets.
                        type: string
                    type: object
                  image:
                    description: Thanos container image URL.
                    type: string
                  imagePullSecrets:
                    description: An optional list of references to secrets in the same namespace to use for pulling thanos images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                    items:
                      description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  initContainers:
                    description: 'InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the ThanosRuler configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.'
                    items:
                      description: A single application container that you want to run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request. HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resources:
                          description: 'Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        securityContext:
                          description: 'Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only root filesystem. Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies to the container.
                                  type: string
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                  type: string
                                runAsUserName:
                                  description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod''s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels configure the external label pairs to ThanosRuler. If not provided, default replica label `thanos_ruler_replica` will be added as a label and be dropped in alerts.
                    type: object
                  listenLocal:
                    description: ListenLocal makes the Thanos ruler listen on loopback, so that it does not bind against the Pod IP.
                    type: boolean
                  logFormat:
                    description: Log format for ThanosRuler to be configured with.
                    type: string
                  logLevel:
                    description: Log level for ThanosRuler to be configured with.
                    type: string
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: Define which Nodes the Pods are scheduled on.
                    type: object
                  objectStorageConfig:
                    description: ObjectStorageConfig configures object storage in Thanos. Alternative to ObjectStorageConfigFile, and lower order priority.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be defined
                        type: boolean
                    required:
                    - key
                    type: object
                  objectStorageConfigFile:
                    description: ObjectStorageConfigFile specifies the path of the object storage configuration file. When used alongside with ObjectStorageConfig, ObjectStorageConfigFile takes precedence.
                    type: string
                  paused:
                    description: When a ThanosRuler deployment is paused, no actions except for deletion will be performed on the underlying objects.
                    type: boolean
                  podMetadata:
                    description: PodMetadata contains Labels and Annotations gets propagated to the thanos ruler pods.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      name:
                        description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                    type: object
                  portName:
                    description: Port name used for the pods and governing service. This defaults to web
                    type: string
                  priorityClassName:
                    description: Priority class assigned to the Pods
                    type: string
                  prometheusRulesExcludedFromEnforce:
                    description: PrometheusRulesExcludedFromEnforce - list of Prometheus rules to be excluded from enforcing of adding namespace labels. Works only if enforcedNamespaceLabel set to true. Make sure both ruleNamespace and ruleName are set for each pair
                    items:
                      description: PrometheusRuleExcludeConfig enables users to configure excluded PrometheusRule names and their namespaces to be ignored while enforcing namespace label for alerts and metrics.
                      properties:
                        ruleName:
                          description: RuleNamespace - name of excluded rule
                          type: string
                        ruleNamespace:
                          description: RuleNamespace - namespace of excluded rule
                          type: string
                      required:
                      - ruleName
                      - ruleNamespace
                      type: object
                    type: array
                  queryConfig:
                    description: Define configuration for connecting to thanos query instances. If this is defined, the QueryEndpoints field will be ignored. Maps to the `query.config` CLI argument. Only available with thanos v0.11.0 and higher.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be defined
                        type: boolean
                    required:
                    - key
                    type: object
                  queryEndpoints:
                    description: QueryEndpoints defines Thanos querier endpoints from which to query metrics. Maps to the --query flag of thanos ruler.
                    items:
                      type: string
                    type: array
                  replicas:
                    description: Number of thanos ruler instances to deploy.
                    format: int32
                    type: integer
                  resources:
                    description: Resources defines the resource requirements for single Pods. If not provided, no requests/limits will be set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  retention:
                    description: Time duration ThanosRuler shall retain data for. Default is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)` (milliseconds seconds minutes hours days weeks years).
                    type: string
                  routePrefix:
                    description: The route prefix ThanosRuler registers HTTP handlers for. This allows thanos UI to be served on a sub-path.
                    type: string
                  ruleNamespaceSelector:
                    description: Namespaces to be selected for Rules discovery. If unspecified, only the same namespace as the ThanosRuler object is in is used.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  ruleSelector:
                    description: A label selector to select which PrometheusRules to mount for alerting and recording.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  securityContext:
                    description: SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.
                    properties:
                      fsGroup:
                        description: "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: \n 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- \n If unset, the Kubelet will not modify the ownership and permissions of any volume."
                        format: int64
                        type: integer
                      fsGroupChangePolicy:
                        description: 'fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified defaults to "Always".'
                        type: string
                      runAsGroup:
                        description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                        properties:
                          level:
                            description: Level is SELinux level label that applies to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies to the container.
                            type: string
                        type: object
                      supplementalGroups:
                        description: A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            type: string
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: string
                        type: object
                    type: object
                  serviceAccountName:
                    description: ServiceAccountName is the name of the ServiceAccount to use to run the Thanos Ruler Pods.
                    type: string
                  storage:
                    description: Storage spec to specify how storage shall be used.
                    properties:
                      disableMountSubPath:
                        description: 'Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary. DisableMountSubPath allows to remove any subPath usage in volume mounts.'
                        type: boolean
                      emptyDir:
                        description: 'EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
                        properties:
                          medium:
                            description: 'What type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      volumeClaimTemplate:
                        description: A PVC spec to be used by the Prometheus StatefulSets.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: EmbeddedMetadata contains metadata relevant to an EmbeddedResource.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                              name:
                                description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                            type: object
                          spec:
                            description: 'Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              accessModes:
                                description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              dataSource:
                                description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              resources:
                                description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                type: object
                              selector:
                                description: A label query over volumes to consider for binding.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                              storageClassName:
                                description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                                type: string
                            type: object
                          status:
                            description: 'Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              accessModes:
                                description: 'AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              capacity:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: Represents the actual resources of the underlying volume.
                                type: object
                              conditions:
                                description: Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
                                items:
                                  description: PersistentVolumeClaimCondition contails details about state of pvc
                                  properties:
                                    lastProbeTime:
                                      description: Last time we probed the condition.
                                      format: date-time
                                      type: string
                                    lastTransitionTime:
                                      description: Last time the condition transitioned from one status to another.
                                      format: date-time
                                      type: string
                                    message:
                                      description: Human-readable message indicating details about last transition.
                                      type: string
                                    reason:
                                      description: Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
                                      type: string
                                    status:
                                      type: string
                                    type:
                                      description: PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
                                      type: string
                                  required:
                                  - status
                                  - type
                                  type: object
                                type: array
                              phase:
                                description: Phase represents the current phase of PersistentVolumeClaim.
                                type: string
                            type: object
                        type: object
                    type: object
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologySpreadConstraints:
                    description: If specified, the pod's topology spread constraints.
                    items:
                      description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                      properties:
                        labelSelector:
                          description: LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        maxSkew:
                          description: 'MaxSkew describes the degree to which pods may be unevenly distributed. It''s the maximum permitted difference between the number of matching pods in any two topology domains of a given topology type. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. It''s a required field. Default value is 1 and 0 is not allowed.'
                          format: int32
                          type: integer
                        topologyKey:
                          description: TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
                          type: string
                        whenUnsatisfiable:
                          description: 'WhenUnsatisfiable indicates how to deal with a pod if it doesn''t satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it - ScheduleAnyway tells the scheduler to still schedule it It''s considered as "Unsatisfiable" if and only if placing incoming pod on any topology violates "MaxSkew". For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won''t make it *more* imbalanced. It''s a required field.'
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                    type: array
                  tracingConfig:
                    description: TracingConfig configures tracing in Thanos. This is an experimental feature, it may change in any upcoming release in a breaking way.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be defined
                        type: boolean
                    required:
                    - key
                    type: object
                  volumes:
                    description: Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
                    items:
                      description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                      properties:
                        awsElasticBlockStore:
                          description: 'AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            partition:
                              description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: boolean
                            volumeID:
                              description: 'Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'Host Caching mode: None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: The Name of the data disk in the blob storage
                              type: string
                            diskURI:
                              description: The URI the data disk in the blob storage
                              type: string
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: the name of secret that contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: Share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                          properties:
                            monitors:
                              description: 'Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            path:
                              description: 'Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: boolean
                            secretFile:
                              description: 'Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                            secretRef:
                              description: 'Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            user:
                              description: 'Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: 'Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          properties:
                            fsType:
                              description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: boolean
                            secretRef:
                              description: 'Optional: points to a secret object containing parameters used to connect to OpenStack.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            volumeID:
                              description: 'volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: ConfigMap represents a configMap that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a volume.
                                properties:
                                  key:
                                    description: The key to project.
                                    type: string
                                  mode:
                                    description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its keys must be defined
                              type: boolean
                          type: object
                        csi:
                          description: CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
                          properties:
                            driver:
                              description: Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            readOnly:
                              description: Specifies a read-only configuration for the volume. Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              additionalProperties:
                                type: string
                              description: VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                              type: object
                          required:
                          - driver
                          type: object
                        downwardAPI:
                          description: DownwardAPI represents downward API about the pod that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume file
                              items:
                                description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  mode:
                                    description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                required:
                                - path
                                type: object
                              type: array
                          type: object
                        emptyDir:
                          description: 'EmptyDir represents a temporary directory that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          properties:
                            medium:
                              description: 'What type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        fc:
                          description: FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                          properties:
                            fsType:
                              description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            lun:
                              description: 'Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                              type: boolean
                            targetWWNs:
                              description: 'Optional: FC target worldwide names (WWNs)'
                              items:
                                type: string
                              type: array
                            wwids:
                              description: 'Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.'
                              items:
                                type: string
                              type: array
                          type: object
                        flexVolume:
                          description: FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: Driver is the name of the driver to use for this volume.
                              type: string
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'Optional: Extra command options if any.'
                              type: object
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                              type: boolean
                            secretRef:
                              description: 'Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                          required:
                          - driver
                          type: object
                        flocker:
                          description: Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                          properties:
                            datasetName:
                              description: Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                              type: string
                            datasetUUID:
                              description: UUID of the dataset. This is unique identifier of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: 'GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            partition:
                              description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              format: int32
                              type: integer
                            pdName:
                              description: 'Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: 'GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod''s container.'
                          properties:
                            directory:
                              description: Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                              type: string
                            repository:
                              description: Repository URL
                              type: string
                            revision:
                              description: Commit hash for the specified revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: 'Glusterfs represents a Glusterfs mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                          properties:
                            endpoints:
                              description: 'EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            path:
                              description: 'Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: 'HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.'
                          properties:
                            path:
                              description: 'Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                            type:
                              description: 'Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                          required:
                          - path
                          type: object
                        iscsi:
                          description: 'ISCSI represents an ISCSI Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                          properties:
                            chapAuthDiscovery:
                              description: whether support iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: whether support iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            initiatorName:
                              description: Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                              type: string
                            iqn:
                              description: Target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              items:
                                type: string
                              type: array
                            readOnly:
                              description: ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                              type: boolean
                            secretRef:
                              description: CHAP Secret for iSCSI target and initiator authentication
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            targetPortal:
                              description: iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        name:
                          description: 'Volume''s name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        nfs:
                          description: 'NFS represents an NFS mount on the host that shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          properties:
                            path:
                              description: 'Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: boolean
                            server:
                              description: 'Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: 'PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            claimName:
                              description: 'ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: Will force the ReadOnly setting in VolumeMounts. Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: ID that identifies Photon Controller persistent disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: VolumeID uniquely identifies a Portworx volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: Items for all in one resources secrets, configmaps, and downward API
                          properties:
                            defaultMode:
                              description: Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: list of volume projections
                              items:
                                description: Projection that may be projected along with other supported volume types
                                properties:
                                  configMap:
                                    description: information about the configMap data to project
                                    properties:
                                      items:
                                        description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path within a volume.
                                          properties:
                                            key:
                                              description: The key to project.
                                              type: string
                                            mode:
                                              description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its keys must be defined
                                        type: boolean
                                    type: object
                                  downwardAPI:
                                    description: information about the downwardAPI data to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume file
                                        items:
                                          description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            mode:
                                              description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required for volumes, optional for env vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output format of the exposed resources, defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                          required:
                                          - path
                                          type: object
                                        type: array
                                    type: object
                                  secret:
                                    description: information about the secret data to project
                                    properties:
                                      items:
                                        description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path within a volume.
                                          properties:
                                            key:
                                              description: The key to project.
                                              type: string
                                            mode:
                                              description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    type: object
                                  serviceAccountToken:
                                    description: information about the serviceAccountToken data to project
                                    properties:
                                      audience:
                                        description: Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: Path is the path relative to the mount point of the file to project the token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                          required:
                          - sources
                          type: object
                        quobyte:
                          description: Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                          properties:
                            group:
                              description: Group to map volume access to Default is no group
                              type: string
                            readOnly:
                              description: ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                              type: boolean
                            registry:
                              description: Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                              type: string
                            user:
                              description: User to map volume access to Defaults to serivceaccount user
                              type: string
                            volume:
                              description: Volume is a string that references an already created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: 'RBD represents a Rados Block Device mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type: string
                            image:
                              description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            keyring:
                              description: 'Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            monitors:
                              description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            pool:
                              description: 'The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: boolean
                            secretRef:
                              description: 'SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            user:
                              description: 'The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        scaleIO:
                          description: ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              type: string
                            gateway:
                              description: The host address of the ScaleIO API Gateway.
                              type: string
                            protectionDomain:
                              description: The name of the ScaleIO Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            sslEnabled:
                              description: Flag to enable/disable SSL communication with Gateway, default false
                              type: boolean
                            storageMode:
                              description: Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: The ScaleIO Storage Pool associated with the protection domain.
                              type: string
                            system:
                              description: The name of the storage system as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: The name of a volume already created in the ScaleIO system that is associated with this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: 'Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a volume.
                                properties:
                                  key:
                                    description: The key to project.
                                    type: string
                                  mode:
                                    description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            optional:
                              description: Specify whether the Secret or its keys must be defined
                              type: boolean
                            secretName:
                              description: 'Name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              type: string
                          type: object
                        storageos:
                          description: StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            volumeName:
                              description: VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                              type: string
                            volumeNamespace:
                              description: VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                              type: string
                          type: object
                        vsphereVolume:
                          description: VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: Storage Policy Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: Path that identifies vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                type: object
              status:
                description: 'Most recent observed status of the ThanosRuler cluster. Read-only. Not included when requesting from the apiserver, only from the ThanosRuler Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                properties:
                  availableReplicas:
                    description: Total number of available pods (ready for at least minReadySeconds) targeted by this ThanosRuler deployment.
                    format: int32
                    type: integer
                  paused:
                    description: Represents whether any actions on the underlying managed objects are being performed. Only delete actions will be performed.
                    type: boolean
                  replicas:
                    description: Total number of non-terminated pods targeted by this ThanosRuler deployment (their labels match the selector).
                    format: int32
                    type: integer
                  unavailableReplicas:
                    description: Total number of unavailable pods targeted by this ThanosRuler deployment.
                    format: int32
                    type: integer
                  updatedReplicas:
                    description: Total number of non-terminated pods targeted by this ThanosRuler deployment that have the desired version spec.
                    format: int32
                    type: integer
                required:
                - availableReplicas
                - paused
                - replicas
                - unavailableReplicas
                - updatedReplicas
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
kind: KuboardAddonResource
lifecycleHandler:
  install:
  - clusterRole.yaml
  - clusterRoleBinding.yaml
  - deployment.yaml
  - service.yaml
  - serviceAccount.yaml
  - thanosrulerCustomResourceDefinition.yaml
  - servicemonitorCustomResourceDefinition.yaml
metadata:
  name: system-monitor.addons.kuboard.cn-1
  namespace: kuboard

---
apiVersion: kuboard.cn/v1
initResources: {}
k8sYamls:
  resources.yaml: |
    ---
    apiVersion: monitoring.coreos.com/v1
    kind: Alertmanager
    metadata:
      labels:
        alertmanager: main
      name: main
      namespace: kuboard
    spec:
      image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/alertmanager:v0.21.0
      nodeSelector:
        kubernetes.io/os: linux
      replicas: 3
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: alertmanager-main
      version: v0.21.0

    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: alertmanager-main
      namespace: kuboard
    stringData:
      alertmanager.yaml: |-
        "global":
          "resolve_timeout": "5m"
        "inhibit_rules":
        - "equal":
          - "namespace"
          - "alertname"
          "source_match":
            "severity": "critical"
          "target_match_re":
            "severity": "warning|info"
        - "equal":
          - "namespace"
          - "alertname"
          "source_match":
            "severity": "warning"
          "target_match_re":
            "severity": "info"
        "receivers":
        - "name": "Default"
        - "name": "Watchdog"
        - "name": "Critical"
        "route":
          "group_by":
          - "namespace"
          "group_interval": "5m"
          "group_wait": "30s"
          "receiver": "Default"
          "repeat_interval": "12h"
          "routes":
          - "match":
              "alertname": "Watchdog"
            "receiver": "Watchdog"
          - "match":
              "severity": "critical"
            "receiver": "Critical"
    type: Opaque

    ---
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        alertmanager: main
      name: alertmanager-main
      namespace: kuboard
    spec:
      ports:
      - name: web
        port: 9093
        targetPort: web
      selector:
        alertmanager: main
        app: alertmanager
      sessionAffinity: ClientIP

    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: alertmanager-main
      namespace: kuboard

    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        k8s-app: alertmanager
      name: alertmanager
      namespace: kuboard
    spec:
      endpoints:
      - interval: 30s
        port: web
      selector:
        matchLabels:
          alertmanager: main

    ---
    apiVersion: v1
    data:
      datasources.yaml: ewogICAgImFwaVZlcnNpb24iOiAxLAogICAgImRhdGFzb3VyY2VzIjogWwogICAgICAgIHsKICAgICAgICAgICAgImFjY2VzcyI6ICJwcm94eSIsCiAgICAgICAgICAgICJlZGl0YWJsZSI6IGZhbHNlLAogICAgICAgICAgICAibmFtZSI6ICJwcm9tZXRoZXVzIiwKICAgICAgICAgICAgIm9yZ0lkIjogMSwKICAgICAgICAgICAgInR5cGUiOiAicHJvbWV0aGV1cyIsCiAgICAgICAgICAgICJ1cmwiOiAiaHR0cDovL3Byb21ldGhldXMtazhzLmt1Ym9hcmQuc3ZjOjkwOTAiLAogICAgICAgICAgICAidmVyc2lvbiI6IDEKICAgICAgICB9CiAgICBdCn0=
    kind: Secret
    metadata:
      name: grafana-datasources
      namespace: kuboard
    type: Opaque

    ---
    apiVersion: v1
    data:
      dashboards.yaml: |-
        {
            "apiVersion": 1,
            "providers": [
                {
                    "folder": "Default",
                    "name": "0",
                    "options": {
                        "path": "/grafana-dashboard-definitions/0"
                    },
                    "orgId": 1,
                    "type": "file"
                }
            ]
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboards
      namespace: kuboard

    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: grafana
      name: grafana
      namespace: kuboard
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: grafana
      template:
        metadata:
          annotations:
            checksum/grafana-dashboards: b44634653e3bb90dacd5c15f42200fae
            checksum/grafana-datasources: 48faab41f579fc8efde6034391496f6a
          labels:
            app: grafana
        spec:
          containers:
          - image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/grafana:7.3.5
            name: grafana
            env:
              - name: GF_AUTH_PROXY_ENABLED
                value: 'true'
              - name: GF_SERVER_ROOT_URL
                value: >-
                  /k8s-proxy/${KUBERNETES_CLUSTER}/api/v1/namespaces/kuboard/services/http:grafana:3000/proxy/
              - name: GF_SECURITY_ADMIN_USER
                value: kuboard-admin
              - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
                value: Viewer
            ports:
            - containerPort: 3000
              name: http
            readinessProbe:
              httpGet:
                path: /api/health
                port: http
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 100m
                memory: 100Mi
            volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
              readOnly: false
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboards
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/apiserver
              name: grafana-dashboard-apiserver
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/cluster-total
              name: grafana-dashboard-cluster-total
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/controller-manager
              name: grafana-dashboard-controller-manager
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/k8s-resources-cluster
              name: grafana-dashboard-k8s-resources-cluster
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/k8s-resources-namespace
              name: grafana-dashboard-k8s-resources-namespace
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/k8s-resources-node
              name: grafana-dashboard-k8s-resources-node
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/k8s-resources-pod
              name: grafana-dashboard-k8s-resources-pod
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/k8s-resources-workload
              name: grafana-dashboard-k8s-resources-workload
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/k8s-resources-workloads-namespace
              name: grafana-dashboard-k8s-resources-workloads-namespace
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/kubelet
              name: grafana-dashboard-kubelet
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/namespace-by-pod
              name: grafana-dashboard-namespace-by-pod
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/namespace-by-workload
              name: grafana-dashboard-namespace-by-workload
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/node-cluster-rsrc-use
              name: grafana-dashboard-node-cluster-rsrc-use
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/node-rsrc-use
              name: grafana-dashboard-node-rsrc-use
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/nodes
              name: grafana-dashboard-nodes
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/persistentvolumesusage
              name: grafana-dashboard-persistentvolumesusage
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/pod-total
              name: grafana-dashboard-pod-total
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/prometheus-remote-write
              name: grafana-dashboard-prometheus-remote-write
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/prometheus
              name: grafana-dashboard-prometheus
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/proxy
              name: grafana-dashboard-proxy
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/scheduler
              name: grafana-dashboard-scheduler
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/statefulset
              name: grafana-dashboard-statefulset
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0/workload-total
              name: grafana-dashboard-workload-total
              readOnly: false
          nodeSelector:
            beta.kubernetes.io/os: linux
          securityContext:
            fsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          serviceAccountName: grafana
          volumes:
          - emptyDir: {}
            name: grafana-storage
          - name: grafana-datasources
            secret:
              secretName: grafana-datasources
          - configMap:
              name: grafana-dashboards
            name: grafana-dashboards
          - configMap:
              name: grafana-dashboard-apiserver
            name: grafana-dashboard-apiserver
          - configMap:
              name: grafana-dashboard-cluster-total
            name: grafana-dashboard-cluster-total
          - configMap:
              name: grafana-dashboard-controller-manager
            name: grafana-dashboard-controller-manager
          - configMap:
              name: grafana-dashboard-k8s-resources-cluster
            name: grafana-dashboard-k8s-resources-cluster
          - configMap:
              name: grafana-dashboard-k8s-resources-namespace
            name: grafana-dashboard-k8s-resources-namespace
          - configMap:
              name: grafana-dashboard-k8s-resources-node
            name: grafana-dashboard-k8s-resources-node
          - configMap:
              name: grafana-dashboard-k8s-resources-pod
            name: grafana-dashboard-k8s-resources-pod
          - configMap:
              name: grafana-dashboard-k8s-resources-workload
            name: grafana-dashboard-k8s-resources-workload
          - configMap:
              name: grafana-dashboard-k8s-resources-workloads-namespace
            name: grafana-dashboard-k8s-resources-workloads-namespace
          - configMap:
              name: grafana-dashboard-kubelet
            name: grafana-dashboard-kubelet
          - configMap:
              name: grafana-dashboard-namespace-by-pod
            name: grafana-dashboard-namespace-by-pod
          - configMap:
              name: grafana-dashboard-namespace-by-workload
            name: grafana-dashboard-namespace-by-workload
          - configMap:
              name: grafana-dashboard-node-cluster-rsrc-use
            name: grafana-dashboard-node-cluster-rsrc-use
          - configMap:
              name: grafana-dashboard-node-rsrc-use
            name: grafana-dashboard-node-rsrc-use
          - configMap:
              name: grafana-dashboard-nodes
            name: grafana-dashboard-nodes
          - configMap:
              name: grafana-dashboard-persistentvolumesusage
            name: grafana-dashboard-persistentvolumesusage
          - configMap:
              name: grafana-dashboard-pod-total
            name: grafana-dashboard-pod-total
          - configMap:
              name: grafana-dashboard-prometheus-remote-write
            name: grafana-dashboard-prometheus-remote-write
          - configMap:
              name: grafana-dashboard-prometheus
            name: grafana-dashboard-prometheus
          - configMap:
              name: grafana-dashboard-proxy
            name: grafana-dashboard-proxy
          - configMap:
              name: grafana-dashboard-scheduler
            name: grafana-dashboard-scheduler
          - configMap:
              name: grafana-dashboard-statefulset
            name: grafana-dashboard-statefulset
          - configMap:
              name: grafana-dashboard-workload-total
            name: grafana-dashboard-workload-total

    ---
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: grafana
      name: grafana
      namespace: kuboard
      annotations:
        proxy.kuboard.cn/auth-header-groups-3000: X-WEBAUTH-GROUPS
        proxy.kuboard.cn/auth-header-user-3000: X-WEBAUTH-USER
        proxy.kuboard.cn/cookie-ttl-3000: '3600'
        proxy.kuboard.cn/disable-rebase-3000: 'true'
    spec:
      ports:
      - name: http
        port: 3000
        targetPort: http
      selector:
        app: grafana
      type: NodePort

    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: grafana
      namespace: kuboard

    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      name: grafana
      namespace: kuboard
    spec:
      endpoints:
      - interval: 15s
        port: http
      selector:
        matchLabels:
          app: grafana

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: v1.9.7
      name: kube-state-metrics
    rules:
    - apiGroups:
      - ""
      resources:
      - configmaps
      - secrets
      - nodes
      - pods
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - namespaces
      - endpoints
      verbs:
      - list
      - watch
    - apiGroups:
      - extensions
      resources:
      - daemonsets
      - deployments
      - replicasets
      - ingresses
      verbs:
      - list
      - watch
    - apiGroups:
      - apps
      resources:
      - statefulsets
      - daemonsets
      - deployments
      - replicasets
      verbs:
      - list
      - watch
    - apiGroups:
      - batch
      resources:
      - cronjobs
      - jobs
      verbs:
      - list
      - watch
    - apiGroups:
      - autoscaling
      resources:
      - horizontalpodautoscalers
      verbs:
      - list
      - watch
    - apiGroups:
      - authentication.k8s.io
      resources:
      - tokenreviews
      verbs:
      - create
    - apiGroups:
      - authorization.k8s.io
      resources:
      - subjectaccessreviews
      verbs:
      - create
    - apiGroups:
      - policy
      resources:
      - poddisruptionbudgets
      verbs:
      - list
      - watch
    - apiGroups:
      - certificates.k8s.io
      resources:
      - certificatesigningrequests
      verbs:
      - list
      - watch
    - apiGroups:
      - storage.k8s.io
      resources:
      - storageclasses
      - volumeattachments
      verbs:
      - list
      - watch
    - apiGroups:
      - admissionregistration.k8s.io
      resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
      verbs:
      - list
      - watch
    - apiGroups:
      - networking.k8s.io
      resources:
      - networkpolicies
      verbs:
      - list
      - watch

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: v1.9.7
      name: kube-state-metrics
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kube-state-metrics
    subjects:
    - kind: ServiceAccount
      name: kube-state-metrics
      namespace: kuboard

    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: v1.9.7
      name: kube-state-metrics
      namespace: kuboard
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: kube-state-metrics
      template:
        metadata:
          labels:
            app.kubernetes.io/name: kube-state-metrics
            app.kubernetes.io/version: v1.9.7
        spec:
          containers:
          - args:
            - --host=127.0.0.1
            - --port=8081
            - --telemetry-host=127.0.0.1
            - --telemetry-port=8082
            image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/kube-state-metrics:v1.9.7
            name: kube-state-metrics
          - args:
            - --logtostderr
            - --secure-listen-address=:8443
            - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
            - --upstream=http://127.0.0.1:8081/
            image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/kube-rbac-proxy:v0.8.0
            name: kube-rbac-proxy-main
            ports:
            - containerPort: 8443
              name: https-main
            securityContext:
              runAsGroup: 65532
              runAsNonRoot: true
              runAsUser: 65532
          - args:
            - --logtostderr
            - --secure-listen-address=:9443
            - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
            - --upstream=http://127.0.0.1:8082/
            image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/kube-rbac-proxy:v0.8.0
            name: kube-rbac-proxy-self
            ports:
            - containerPort: 9443
              name: https-self
            securityContext:
              runAsGroup: 65532
              runAsNonRoot: true
              runAsUser: 65532
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: kube-state-metrics

    ---
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: v1.9.7
      name: kube-state-metrics
      namespace: kuboard
    spec:
      clusterIP: None
      ports:
      - name: https-main
        port: 8443
        targetPort: https-main
      - name: https-self
        port: 9443
        targetPort: https-self
      selector:
        app.kubernetes.io/name: kube-state-metrics

    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: v1.9.7
      name: kube-state-metrics
      namespace: kuboard

    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: 1.9.7
      name: kube-state-metrics
      namespace: kuboard
    spec:
      endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        honorLabels: true
        interval: 30s
        port: https-main
        relabelings:
        - action: labeldrop
          regex: (pod|service|endpoint|namespace)
        scheme: https
        scrapeTimeout: 30s
        tlsConfig:
          insecureSkipVerify: true
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        interval: 30s
        port: https-self
        scheme: https
        tlsConfig:
          insecureSkipVerify: true
      jobLabel: app.kubernetes.io/name
      selector:
        matchLabels:
          app.kubernetes.io/name: kube-state-metrics

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: node-exporter
    rules:
    - apiGroups:
      - authentication.k8s.io
      resources:
      - tokenreviews
      verbs:
      - create
    - apiGroups:
      - authorization.k8s.io
      resources:
      - subjectaccessreviews
      verbs:
      - create

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: node-exporter
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: node-exporter
    subjects:
    - kind: ServiceAccount
      name: node-exporter
      namespace: kuboard

    ---
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        app.kubernetes.io/name: node-exporter
        app.kubernetes.io/version: v1.0.1
      name: node-exporter
      namespace: kuboard
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/name: node-exporter
      template:
        metadata:
          labels:
            app.kubernetes.io/name: node-exporter
            app.kubernetes.io/version: v1.0.1
        spec:
          containers:
          - args:
            - --web.listen-address=127.0.0.1:${NODE_EXPORTER_PORT}
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --path.rootfs=/host/root
            - --no-collector.wifi
            - --no-collector.hwmon
            - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
            image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/node-exporter:v1.0.1
            name: node-exporter
            resources:
              limits:
                cpu: 250m
                memory: 180Mi
              requests:
                cpu: 102m
                memory: 180Mi
            volumeMounts:
            - mountPath: /host/proc
              mountPropagation: HostToContainer
              name: proc
              readOnly: true
            - mountPath: /host/sys
              mountPropagation: HostToContainer
              name: sys
              readOnly: true
            - mountPath: /host/root
              mountPropagation: HostToContainer
              name: root
              readOnly: true
          - args:
            - --logtostderr
            - --secure-listen-address=[$(IP)]:${NODE_EXPORTER_PORT}
            - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
            - --upstream=http://127.0.0.1:${NODE_EXPORTER_PORT}/
            env:
            - name: IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/kube-rbac-proxy:v0.8.0
            name: kube-rbac-proxy
            ports:
            - containerPort: ${NODE_EXPORTER_PORT}
              hostPort: ${NODE_EXPORTER_PORT}
              name: https
            resources:
              limits:
                cpu: 20m
                memory: 40Mi
              requests:
                cpu: 10m
                memory: 20Mi
            securityContext:
              runAsGroup: 65532
              runAsNonRoot: true
              runAsUser: 65532
          hostNetwork: true
          hostPID: true
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
          serviceAccountName: node-exporter
          tolerations:
          - operator: Exists
          volumes:
          - hostPath:
              path: /proc
            name: proc
          - hostPath:
              path: /sys
            name: sys
          - hostPath:
              path: /
            name: root
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 10%
        type: RollingUpdate

    ---
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/name: node-exporter
        app.kubernetes.io/version: v1.0.1
      name: node-exporter
      namespace: kuboard
    spec:
      clusterIP: None
      ports:
      - name: https
        port: ${NODE_EXPORTER_PORT}
        targetPort: https
      selector:
        app.kubernetes.io/name: node-exporter

    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: node-exporter
      namespace: kuboard

    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app.kubernetes.io/name: node-exporter
        app.kubernetes.io/version: v1.0.1
      name: node-exporter
      namespace: kuboard
    spec:
      endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        interval: 15s
        port: https
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: instance
        scheme: https
        tlsConfig:
          insecureSkipVerify: true
      jobLabel: app.kubernetes.io/name
      selector:
        matchLabels:
          app.kubernetes.io/name: node-exporter


    ---
    apiVersion: apiregistration.k8s.io/v1
    kind: APIService
    metadata:
      name: v1beta1.metrics.k8s.io
    spec:
      group: metrics.k8s.io
      groupPriorityMinimum: 100
      insecureSkipTLSVerify: true
      service:
        name: prometheus-adapter
        namespace: kuboard
      version: v1beta1
      versionPriority: 100


    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: prometheus-adapter
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes
      - namespaces
      - pods
      - services
      verbs:
      - get
      - list
      - watch

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
        rbac.authorization.k8s.io/aggregate-to-view: "true"
      name: system:aggregated-metrics-reader
    rules:
    - apiGroups:
      - metrics.k8s.io
      resources:
      - pods
      - nodes
      verbs:
      - get
      - list
      - watch

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: prometheus-adapter
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: prometheus-adapter
    subjects:
    - kind: ServiceAccount
      name: prometheus-adapter
      namespace: kuboard

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: resource-metrics:system:auth-delegator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
    - kind: ServiceAccount
      name: prometheus-adapter
      namespace: kuboard

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: resource-metrics-server-resources
    rules:
    - apiGroups:
      - metrics.k8s.io
      resources:
      - '*'
      verbs:
      - '*'

    ---
    apiVersion: v1
    data:
      config.yaml: |-
        "resourceRules":
          "cpu":
            "containerLabel": "container"
            "containerQuery": "sum(irate(container_cpu_usage_seconds_total{<<.LabelMatchers>>,container!=\"POD\",container!=\"\",pod!=\"\"}[5m])) by (<<.GroupBy>>)"
            "nodeQuery": "sum(1 - irate(node_cpu_seconds_total{mode=\"idle\"}[5m]) * on(namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:{<<.LabelMatchers>>}) by (<<.GroupBy>>)"
            "resources":
              "overrides":
                "namespace":
                  "resource": "namespace"
                "node":
                  "resource": "node"
                "pod":
                  "resource": "pod"
          "memory":
            "containerLabel": "container"
            "containerQuery": "sum(container_memory_working_set_bytes{<<.LabelMatchers>>,container!=\"POD\",container!=\"\",pod!=\"\"}) by (<<.GroupBy>>)"
            "nodeQuery": "sum(node_memory_MemTotal_bytes{job=\"node-exporter\",<<.LabelMatchers>>} - node_memory_MemAvailable_bytes{job=\"node-exporter\",<<.LabelMatchers>>}) by (<<.GroupBy>>)"
            "resources":
              "overrides":
                "instance":
                  "resource": "node"
                "namespace":
                  "resource": "namespace"
                "pod":
                  "resource": "pod"
          "window": "5m"
    kind: ConfigMap
    metadata:
      name: adapter-config
      namespace: kuboard

    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: prometheus-adapter
      namespace: kuboard
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: prometheus-adapter
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
      template:
        metadata:
          labels:
            name: prometheus-adapter
        spec:
          containers:
          - args:
            - --cert-dir=/var/run/serving-cert
            - --config=/etc/adapter/config.yaml
            - --logtostderr=true
            - --metrics-relist-interval=1m
            - --prometheus-url=http://prometheus-k8s.kuboard.svc:9090/
            - --secure-port=6443
            image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/k8s-prometheus-adapter:v0.8.2
            name: prometheus-adapter
            ports:
            - containerPort: 6443
            volumeMounts:
            - mountPath: /tmp
              name: tmpfs
              readOnly: false
            - mountPath: /var/run/serving-cert
              name: volume-serving-cert
              readOnly: false
            - mountPath: /etc/adapter
              name: config
              readOnly: false
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: prometheus-adapter
          volumes:
          - emptyDir: {}
            name: tmpfs
          - emptyDir: {}
            name: volume-serving-cert
          - configMap:
              name: adapter-config
            name: config

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: resource-metrics-auth-reader
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: extension-apiserver-authentication-reader
    subjects:
    - kind: ServiceAccount
      name: prometheus-adapter
      namespace: kuboard


    ---
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: prometheus-adapter
      name: prometheus-adapter
      namespace: kuboard
    spec:
      ports:
      - name: https
        port: 443
        targetPort: 6443
      selector:
        name: prometheus-adapter

    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: prometheus-adapter
      namespace: kuboard

    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        name: prometheus-adapter
      name: prometheus-adapter
      namespace: kuboard
    spec:
      endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        interval: 30s
        port: https
        scheme: https
        tlsConfig:
          insecureSkipVerify: true
      selector:
        matchLabels:
          name: prometheus-adapter


    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: prometheus-k8s
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes/metrics
      verbs:
      - get
    - nonResourceURLs:
      - /metrics
      verbs:
      - get

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: prometheus-k8s
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: prometheus-k8s
    subjects:
    - kind: ServiceAccount
      name: prometheus-k8s
      namespace: kuboard


    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/version: v0.44.0
      name: prometheus-operator
      namespace: kuboard
    spec:
      endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        honorLabels: true
        port: https
        scheme: https
        tlsConfig:
          insecureSkipVerify: true
      selector:
        matchLabels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/name: prometheus-operator
          app.kubernetes.io/version: v0.44.0

    ---
    apiVersion: monitoring.coreos.com/v1
    kind: Prometheus
    metadata:
      labels:
        prometheus: k8s
      name: k8s
      namespace: kuboard
    spec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: ${PROMETHEUS_STORAGE_CLASS}
            resources:
              requests:
                storage: ${PROMETHEUS_STORAGE_SIZE_PER_VOLUME}
      alerting:
        alertmanagers:
        - name: alertmanager-main
          namespace: kuboard
          port: web
      image: swr.cn-east-2.myhuaweicloud.com/kuboard-dependency/prometheus:v2.22.1
      nodeSelector:
        kubernetes.io/os: linux
      podMonitorNamespaceSelector: {}
      podMonitorSelector: {}
      probeNamespaceSelector: {}
      probeSelector: {}
      replicas: ${PROMETHEUS_REPLICAS}
      resources:
        requests:
          memory: 400Mi
      ruleSelector:
        matchLabels:
          prometheus: k8s
          role: alert-rules
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: prometheus-k8s
      serviceMonitorNamespaceSelector: {}
      serviceMonitorSelector: {}
      version: v2.22.1

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: prometheus-k8s-config
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: prometheus-k8s-config
    subjects:
    - kind: ServiceAccount
      name: prometheus-k8s
      namespace: kuboard

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: prometheus-k8s
      namespace: default
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: prometheus-k8s
    subjects:
    - kind: ServiceAccount
      name: prometheus-k8s
      namespace: kuboard

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: prometheus-k8s
      namespace: kuboard
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: prometheus-k8s
    subjects:
    - kind: ServiceAccount
      name: prometheus-k8s
      namespace: kuboard

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: prometheus-k8s
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: prometheus-k8s
    subjects:
    - kind: ServiceAccount
      name: prometheus-k8s
      namespace: kuboard


    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: prometheus-k8s-config
      namespace: kube-system
    rules:
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - get

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: prometheus-k8s
      namespace: kuboard
    rules:
    - apiGroups:
      - ""
      resources:
      - services
      - endpoints
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - extensions
      resources:
      - ingresses
      verbs:
      - get
      - list
      - watch

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: prometheus-k8s
      namespace: default
    rules:
    - apiGroups:
      - ""
      resources:
      - services
      - endpoints
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - extensions
      resources:
      - ingresses
      verbs:
      - get
      - list
      - watch

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: prometheus-k8s
      namespace: kube-system
    rules:
    - apiGroups:
      - ""
      resources:
      - services
      - endpoints
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - extensions
      resources:
      - ingresses
      verbs:
      - get
      - list
      - watch

    ---
    apiVersion: monitoring.coreos.com/v1
    kind: PrometheusRule
    metadata:
      labels:
        prometheus: k8s
        role: alert-rules
      name: prometheus-k8s-rules
      namespace: kuboard
    spec:
      groups:
      - name: node-exporter.rules
        rules:
        - expr: |
            count without (cpu) (
              count without (mode) (
                node_cpu_seconds_total{job="node-exporter"}
              )
            )
          record: instance:node_num_cpu:sum
        - expr: |
            1 - avg without (cpu, mode) (
              rate(node_cpu_seconds_total{job="node-exporter", mode="idle"}[1m])
            )
          record: instance:node_cpu_utilisation:rate1m
        - expr: |
            (
              node_load1{job="node-exporter"}
            /
              instance:node_num_cpu:sum{job="node-exporter"}
            )
          record: instance:node_load1_per_cpu:ratio
        - expr: |
            1 - (
              node_memory_MemAvailable_bytes{job="node-exporter"}
            /
              node_memory_MemTotal_bytes{job="node-exporter"}
            )
          record: instance:node_memory_utilisation:ratio
        - expr: |
            rate(node_vmstat_pgmajfault{job="node-exporter"}[1m])
          record: instance:node_vmstat_pgmajfault:rate1m
        - expr: |
            rate(node_disk_io_time_seconds_total{job="node-exporter", device=~"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+"}[1m])
          record: instance_device:node_disk_io_time_seconds:rate1m
        - expr: |
            rate(node_disk_io_time_weighted_seconds_total{job="node-exporter", device=~"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+"}[1m])
          record: instance_device:node_disk_io_time_weighted_seconds:rate1m
        - expr: |
            sum without (device) (
              rate(node_network_receive_bytes_total{job="node-exporter", device!="lo"}[1m])
            )
          record: instance:node_network_receive_bytes_excluding_lo:rate1m
        - expr: |
            sum without (device) (
              rate(node_network_transmit_bytes_total{job="node-exporter", device!="lo"}[1m])
            )
          record: instance:node_network_transmit_bytes_excluding_lo:rate1m
        - expr: |
            sum without (device) (
              rate(node_network_receive_drop_total{job="node-exporter", device!="lo"}[1m])
            )
          record: instance:node_network_receive_drop_excluding_lo:rate1m
        - expr: |
            sum without (device) (
              rate(node_network_transmit_drop_total{job="node-exporter", device!="lo"}[1m])
            )
          record: instance:node_network_transmit_drop_excluding_lo:rate1m
      - name: kube-apiserver.rules
        rules:
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"LIST|GET"}[1d]))
                -
                (
                  (
                    sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[1d]))
                    or
                    vector(0)
                  )
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[1d]))
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[1d]))
                )
              )
              +
              # errors
              sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[1d]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[1d]))
          labels:
            verb: read
          record: apiserver_request:burnrate1d
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"LIST|GET"}[1h]))
                -
                (
                  (
                    sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[1h]))
                    or
                    vector(0)
                  )
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[1h]))
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[1h]))
                )
              )
              +
              # errors
              sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[1h]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[1h]))
          labels:
            verb: read
          record: apiserver_request:burnrate1h
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"LIST|GET"}[2h]))
                -
                (
                  (
                    sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[2h]))
                    or
                    vector(0)
                  )
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[2h]))
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[2h]))
                )
              )
              +
              # errors
              sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[2h]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[2h]))
          labels:
            verb: read
          record: apiserver_request:burnrate2h
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"LIST|GET"}[30m]))
                -
                (
                  (
                    sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[30m]))
                    or
                    vector(0)
                  )
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[30m]))
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[30m]))
                )
              )
              +
              # errors
              sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[30m]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[30m]))
          labels:
            verb: read
          record: apiserver_request:burnrate30m
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"LIST|GET"}[3d]))
                -
                (
                  (
                    sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[3d]))
                    or
                    vector(0)
                  )
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[3d]))
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[3d]))
                )
              )
              +
              # errors
              sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[3d]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[3d]))
          labels:
            verb: read
          record: apiserver_request:burnrate3d
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"LIST|GET"}[5m]))
                -
                (
                  (
                    sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[5m]))
                    or
                    vector(0)
                  )
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[5m]))
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[5m]))
                )
              )
              +
              # errors
              sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[5m]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[5m]))
          labels:
            verb: read
          record: apiserver_request:burnrate5m
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"LIST|GET"}[6h]))
                -
                (
                  (
                    sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[6h]))
                    or
                    vector(0)
                  )
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[6h]))
                  +
                  sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[6h]))
                )
              )
              +
              # errors
              sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[6h]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[6h]))
          labels:
            verb: read
          record: apiserver_request:burnrate6h
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
                -
                sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[1d]))
              )
              +
              sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1d]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
          labels:
            verb: write
          record: apiserver_request:burnrate1d
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
                -
                sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[1h]))
              )
              +
              sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
          labels:
            verb: write
          record: apiserver_request:burnrate1h
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
                -
                sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[2h]))
              )
              +
              sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[2h]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
          labels:
            verb: write
          record: apiserver_request:burnrate2h
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
                -
                sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[30m]))
              )
              +
              sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[30m]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
          labels:
            verb: write
          record: apiserver_request:burnrate30m
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
                -
                sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[3d]))
              )
              +
              sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[3d]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
          labels:
            verb: write
          record: apiserver_request:burnrate3d
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
                -
                sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[5m]))
              )
              +
              sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[5m]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
          labels:
            verb: write
          record: apiserver_request:burnrate5m
        - expr: |
            (
              (
                # too slow
                sum(rate(apiserver_request_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
                -
                sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[6h]))
              )
              +
              sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[6h]))
            )
            /
            sum(rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
          labels:
            verb: write
          record: apiserver_request:burnrate6h
        - expr: |
            sum by (code,resource) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[5m]))
          labels:
            verb: read
          record: code_resource:apiserver_request_total:rate5m
        - expr: |
            sum by (code,resource) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
          labels:
            verb: write
          record: code_resource:apiserver_request_total:rate5m
        - expr: |
            histogram_quantile(0.99, sum by (le, resource) (rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET"}[5m]))) > 0
          labels:
            quantile: "0.99"
            verb: read
          record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.99, sum by (le, resource) (rate(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))) > 0
          labels:
            quantile: "0.99"
            verb: write
          record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
          record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
          record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
          record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
      - interval: 3m
        name: kube-apiserver-availability.rules
        rules:
        - expr: |
            1 - (
              (
                # write too slow
                sum(increase(apiserver_request_duration_seconds_count{verb=~"POST|PUT|PATCH|DELETE"}[30d]))
                -
                sum(increase(apiserver_request_duration_seconds_bucket{verb=~"POST|PUT|PATCH|DELETE",le="1"}[30d]))
              ) +
              (
                # read too slow
                sum(increase(apiserver_request_duration_seconds_count{verb=~"LIST|GET"}[30d]))
                -
                (
                  (
                    sum(increase(apiserver_request_duration_seconds_bucket{verb=~"LIST|GET",scope=~"resource|",le="0.1"}[30d]))
                    or
                    vector(0)
                  )
                  +
                  sum(increase(apiserver_request_duration_seconds_bucket{verb=~"LIST|GET",scope="namespace",le="0.5"}[30d]))
                  +
                  sum(increase(apiserver_request_duration_seconds_bucket{verb=~"LIST|GET",scope="cluster",le="5"}[30d]))
                )
              ) +
              # errors
              sum(code:apiserver_request_total:increase30d{code=~"5.."} or vector(0))
            )
            /
            sum(code:apiserver_request_total:increase30d)
          labels:
            verb: all
          record: apiserver_request:availability30d
        - expr: |
            1 - (
              sum(increase(apiserver_request_duration_seconds_count{job="apiserver",verb=~"LIST|GET"}[30d]))
              -
              (
                # too slow
                (
                  sum(increase(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[30d]))
                  or
                  vector(0)
                )
                +
                sum(increase(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[30d]))
                +
                sum(increase(apiserver_request_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[30d]))
              )
              +
              # errors
              sum(code:apiserver_request_total:increase30d{verb="read",code=~"5.."} or vector(0))
            )
            /
            sum(code:apiserver_request_total:increase30d{verb="read"})
          labels:
            verb: read
          record: apiserver_request:availability30d
        - expr: |
            1 - (
              (
                # too slow
                sum(increase(apiserver_request_duration_seconds_count{verb=~"POST|PUT|PATCH|DELETE"}[30d]))
                -
                sum(increase(apiserver_request_duration_seconds_bucket{verb=~"POST|PUT|PATCH|DELETE",le="1"}[30d]))
              )
              +
              # errors
              sum(code:apiserver_request_total:increase30d{verb="write",code=~"5.."} or vector(0))
            )
            /
            sum(code:apiserver_request_total:increase30d{verb="write"})
          labels:
            verb: write
          record: apiserver_request:availability30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="LIST",code=~"2.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="GET",code=~"2.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="POST",code=~"2.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="PUT",code=~"2.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="PATCH",code=~"2.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="DELETE",code=~"2.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="LIST",code=~"3.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="GET",code=~"3.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="POST",code=~"3.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="PUT",code=~"3.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="PATCH",code=~"3.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="DELETE",code=~"3.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="LIST",code=~"4.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="GET",code=~"4.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="POST",code=~"4.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="PUT",code=~"4.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="PATCH",code=~"4.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="DELETE",code=~"4.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="LIST",code=~"5.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="GET",code=~"5.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="POST",code=~"5.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="PUT",code=~"5.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="PATCH",code=~"5.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code, verb) (increase(apiserver_request_total{job="apiserver",verb="DELETE",code=~"5.."}[30d]))
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (code) (code_verb:apiserver_request_total:increase30d{verb=~"LIST|GET"})
          labels:
            verb: read
          record: code:apiserver_request_total:increase30d
        - expr: |
            sum by (code) (code_verb:apiserver_request_total:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
          labels:
            verb: write
          record: code:apiserver_request_total:increase30d
      - name: k8s.rules
        rules:
        - expr: |
            sum by (cluster, namespace, pod, container) (
              rate(container_cpu_usage_seconds_total{job="kubelet", metrics_path="/metrics/cadvisor", image!="", container!="POD"}[5m])
            ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (
              1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
        - expr: |
            container_memory_working_set_bytes{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,
              max by(namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_working_set_bytes
        - expr: |
            container_memory_rss{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,
              max by(namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_rss
        - expr: |
            container_memory_cache{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,
              max by(namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_cache
        - expr: |
            container_memory_swap{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,
              max by(namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_swap
        - expr: |
            sum by (namespace) (
                sum by (namespace, pod) (
                    max by (namespace, pod, container) (
                        kube_pod_container_resource_requests_memory_bytes{job="kube-state-metrics"}
                    ) * on(namespace, pod) group_left() max by (namespace, pod) (
                        kube_pod_status_phase{phase=~"Pending|Running"} == 1
                    )
                )
            )
          record: namespace:kube_pod_container_resource_requests_memory_bytes:sum
        - expr: |
            sum by (namespace) (
                sum by (namespace, pod) (
                    max by (namespace, pod, container) (
                        kube_pod_container_resource_requests_cpu_cores{job="kube-state-metrics"}
                    ) * on(namespace, pod) group_left() max by (namespace, pod) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                    )
                )
            )
          record: namespace:kube_pod_container_resource_requests_cpu_cores:sum
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                label_replace(
                  kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"},
                  "replicaset", "$1", "owner_name", "(.*)"
                ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (
                  1, max by (replicaset, namespace, owner_name) (
                    kube_replicaset_owner{job="kube-state-metrics"}
                  )
                ),
                "workload", "$1", "owner_name", "(.*)"
              )
            )
          labels:
            workload_type: deployment
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                kube_pod_owner{job="kube-state-metrics", owner_kind="DaemonSet"},
                "workload", "$1", "owner_name", "(.*)"
              )
            )
          labels:
            workload_type: daemonset
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                kube_pod_owner{job="kube-state-metrics", owner_kind="StatefulSet"},
                "workload", "$1", "owner_name", "(.*)"
              )
            )
          labels:
            workload_type: statefulset
          record: namespace_workload_pod:kube_pod_owner:relabel
      - name: kube-scheduler.rules
        rules:
        - expr: |
            histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
          record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
          record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
          record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
          record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
          record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
          record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
          record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
          record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
          record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
      - name: node.rules
        rules:
        - expr: |
            topk by(namespace, pod) (1,
              max by (node, namespace, pod) (
                label_replace(kube_pod_info{job="kube-state-metrics",node!=""}, "pod", "$1", "pod", "(.*)")
            ))
          record: 'node_namespace_pod:kube_pod_info:'
        - expr: |
            count by (cluster, node) (sum by (node, cpu) (
              node_cpu_seconds_total{job="node-exporter"}
            * on (namespace, pod) group_left(node)
              node_namespace_pod:kube_pod_info:
            ))
          record: node:node_num_cpu:sum
        - expr: |
            sum(
              node_memory_MemAvailable_bytes{job="node-exporter"} or
              (
                node_memory_Buffers_bytes{job="node-exporter"} +
                node_memory_Cached_bytes{job="node-exporter"} +
                node_memory_MemFree_bytes{job="node-exporter"} +
                node_memory_Slab_bytes{job="node-exporter"}
              )
            ) by (cluster)
          record: :node_memory_MemAvailable_bytes:sum
      - name: kubelet.rules
        rules:
        - expr: |
            histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) by (instance, le) * on(instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"})
          labels:
            quantile: "0.99"
          record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) by (instance, le) * on(instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"})
          labels:
            quantile: "0.9"
          record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) by (instance, le) * on(instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"})
          labels:
            quantile: "0.5"
          record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
      - name: kube-prometheus-node-recording.rules
        rules:
        - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[3m])) BY (instance)
          record: instance:node_cpu:rate:sum
        - expr: sum(rate(node_network_receive_bytes_total[3m])) BY (instance)
          record: instance:node_network_receive_bytes:rate:sum
        - expr: sum(rate(node_network_transmit_bytes_total[3m])) BY (instance)
          record: instance:node_network_transmit_bytes:rate:sum
        - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[5m])) WITHOUT (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu_seconds_total) BY (instance, cpu)) BY (instance)
          record: instance:node_cpu:ratio
        - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[5m]))
          record: cluster:node_cpu:sum_rate5m
        - expr: cluster:node_cpu_seconds_total:rate5m / count(sum(node_cpu_seconds_total) BY (instance, cpu))
          record: cluster:node_cpu:ratio
      - name: kube-prometheus-general.rules
        rules:
        - expr: count without(instance, pod, node) (up == 1)
          record: count:up1
        - expr: count without(instance, pod, node) (up == 0)
          record: count:up0
      - name: kube-state-metrics
        rules:
        - alert: KubeStateMetricsListErrors
          annotations:
            description: kube-state-metrics is experiencing errors at an elevated rate in list operations. This is likely causing it to not be able to expose metrics about Kubernetes objects correctly or at all.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubestatemetricslisterrors
            summary: kube-state-metrics is experiencing errors in list operations.
          expr: |
            (sum(rate(kube_state_metrics_list_total{job="kube-state-metrics",result="error"}[5m]))
              /
            sum(rate(kube_state_metrics_list_total{job="kube-state-metrics"}[5m])))
            > 0.01
          for: 15m
          labels:
            severity: critical
        - alert: KubeStateMetricsWatchErrors
          annotations:
            description: kube-state-metrics is experiencing errors at an elevated rate in watch operations. This is likely causing it to not be able to expose metrics about Kubernetes objects correctly or at all.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubestatemetricswatcherrors
            summary: kube-state-metrics is experiencing errors in watch operations.
          expr: |
            (sum(rate(kube_state_metrics_watch_total{job="kube-state-metrics",result="error"}[5m]))
              /
            sum(rate(kube_state_metrics_watch_total{job="kube-state-metrics"}[5m])))
            > 0.01
          for: 15m
          labels:
            severity: critical
      - name: node-exporter
        rules:
        - alert: NodeFilesystemSpaceFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodefilesystemspacefillingup
            summary: Filesystem is predicted to run out of space within the next 24 hours.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!=""} * 100 < 40
            and
              predict_linear(node_filesystem_avail_bytes{job="node-exporter",fstype!=""}[6h], 24*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemSpaceFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up fast.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodefilesystemspacefillingup
            summary: Filesystem is predicted to run out of space within the next 4 hours.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!=""} * 100 < 15
            and
              predict_linear(node_filesystem_avail_bytes{job="node-exporter",fstype!=""}[6h], 4*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeFilesystemAlmostOutOfSpace
          annotations:
            description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodefilesystemalmostoutofspace
            summary: Filesystem has less than 5% space left.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!=""} * 100 < 5
            and
              node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemAlmostOutOfSpace
          annotations:
            description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodefilesystemalmostoutofspace
            summary: Filesystem has less than 3% space left.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!=""} * 100 < 3
            and
              node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeFilesystemFilesFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodefilesystemfilesfillingup
            summary: Filesystem is predicted to run out of inodes within the next 24 hours.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!=""} / node_filesystem_files{job="node-exporter",fstype!=""} * 100 < 40
            and
              predict_linear(node_filesystem_files_free{job="node-exporter",fstype!=""}[6h], 24*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemFilesFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up fast.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodefilesystemfilesfillingup
            summary: Filesystem is predicted to run out of inodes within the next 4 hours.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!=""} / node_filesystem_files{job="node-exporter",fstype!=""} * 100 < 20
            and
              predict_linear(node_filesystem_files_free{job="node-exporter",fstype!=""}[6h], 4*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeFilesystemAlmostOutOfFiles
          annotations:
            description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodefilesystemalmostoutoffiles
            summary: Filesystem has less than 5% inodes left.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!=""} / node_filesystem_files{job="node-exporter",fstype!=""} * 100 < 5
            and
              node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemAlmostOutOfFiles
          annotations:
            description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodefilesystemalmostoutoffiles
            summary: Filesystem has less than 3% inodes left.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!=""} / node_filesystem_files{job="node-exporter",fstype!=""} * 100 < 3
            and
              node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeNetworkReceiveErrs
          annotations:
            description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf "%.0f" $value }} receive errors in the last two minutes.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodenetworkreceiveerrs
            summary: Network interface is reporting many receive errors.
          expr: |
            rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01
          for: 1h
          labels:
            severity: warning
        - alert: NodeNetworkTransmitErrs
          annotations:
            description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf "%.0f" $value }} transmit errors in the last two minutes.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodenetworktransmiterrs
            summary: Network interface is reporting many transmit errors.
          expr: |
            rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01
          for: 1h
          labels:
            severity: warning
        - alert: NodeHighNumberConntrackEntriesUsed
          annotations:
            description: '{{ $value | humanizePercentage }} of conntrack entries are used.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodehighnumberconntrackentriesused
            summary: Number of conntrack are getting close to the limit.
          expr: |
            (node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75
          labels:
            severity: warning
        - alert: NodeTextFileCollectorScrapeError
          annotations:
            description: Node Exporter text file collector failed to scrape.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodetextfilecollectorscrapeerror
            summary: Node Exporter text file collector failed to scrape.
          expr: |
            node_textfile_scrape_error{job="node-exporter"} == 1
          labels:
            severity: warning
        - alert: NodeClockSkewDetected
          annotations:
            message: Clock on {{ $labels.instance }} is out of sync by more than 300s. Ensure NTP is configured correctly on this host.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodeclockskewdetected
            summary: Clock skew detected.
          expr: |
            (
              node_timex_offset_seconds > 0.05
            and
              deriv(node_timex_offset_seconds[5m]) >= 0
            )
            or
            (
              node_timex_offset_seconds < -0.05
            and
              deriv(node_timex_offset_seconds[5m]) <= 0
            )
          for: 10m
          labels:
            severity: warning
        - alert: NodeClockNotSynchronising
          annotations:
            message: Clock on {{ $labels.instance }} is not synchronising. Ensure NTP is configured on this host.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/nodeclocknotsynchronising
            summary: Clock not synchronising.
          expr: |
            min_over_time(node_timex_sync_status[5m]) == 0
            and
            node_timex_maxerror_seconds >= 16
          for: 10m
          labels:
            severity: warning
        - alert: NodeRAIDDegraded
          annotations:
            description: RAID array '{{ $labels.device }}' on {{ $labels.instance }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/noderaiddegraded
            summary: RAID Array is degraded
          expr: |
            node_md_disks_required - ignoring (state) (node_md_disks{state="active"}) > 0
          for: 15m
          labels:
            severity: critical
        - alert: NodeRAIDDiskFailure
          annotations:
            description: At least one device in RAID array on {{ $labels.instance }} failed. Array '{{ $labels.device }}' needs attention and possibly a disk swap.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/noderaiddiskfailure
            summary: Failed device in RAID array
          expr: |
            node_md_disks{state="fail"} > 0
          labels:
            severity: warning
      - name: alertmanager.rules
        rules:
        - alert: AlertmanagerFailedReload
          annotations:
            description: Configuration has failed to load for {{ $labels.namespace }}/{{ $labels.pod}}.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/alertmanagerfailedreload
            summary: Reloading an Alertmanager configuration has failed.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(alertmanager_config_last_reload_successful{job="alertmanager-main",namespace="monitoring"}[5m]) == 0
          for: 10m
          labels:
            severity: critical
        - alert: AlertmanagerMembersInconsistent
          annotations:
            description: Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} has only found {{ $value }} members of the {{$labels.job}} cluster.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/alertmanagermembersinconsistent
            summary: A member of an Alertmanager cluster has not found all other cluster members.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
              max_over_time(alertmanager_cluster_members{job="alertmanager-main",namespace="monitoring"}[5m])
            < on (namespace,service) group_left
              count by (namespace,service) (max_over_time(alertmanager_cluster_members{job="alertmanager-main",namespace="monitoring"}[5m]))
          for: 10m
          labels:
            severity: critical
        - alert: AlertmanagerFailedToSendAlerts
          annotations:
            description: Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} failed to send {{ $value | humanizePercentage }} of notifications to {{ $labels.integration }}.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/alertmanagerfailedtosendalerts
            summary: An Alertmanager instance failed to send notifications.
          expr: |
            (
              rate(alertmanager_notifications_failed_total{job="alertmanager-main",namespace="monitoring"}[5m])
            /
              rate(alertmanager_notifications_total{job="alertmanager-main",namespace="monitoring"}[5m])
            )
            > 0.01
          for: 5m
          labels:
            severity: warning
        - alert: AlertmanagerClusterFailedToSendAlerts
          annotations:
            description: The minimum notification failure rate to {{ $labels.integration }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage }}.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/alertmanagerclusterfailedtosendalerts
            summary: All Alertmanager instances in a cluster failed to send notifications.
          expr: |
            min by (namespace,service) (
              rate(alertmanager_notifications_failed_total{job="alertmanager-main",namespace="monitoring"}[5m])
            /
              rate(alertmanager_notifications_total{job="alertmanager-main",namespace="monitoring"}[5m])
            )
            > 0.01
          for: 5m
          labels:
            severity: critical
        - alert: AlertmanagerConfigInconsistent
          annotations:
            description: Alertmanager instances within the {{$labels.job}} cluster have different configurations.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/alertmanagerconfiginconsistent
            summary: Alertmanager instances within the same cluster have different configurations.
          expr: |
            count by (namespace,service) (
              count_values by (namespace,service) ("config_hash", alertmanager_config_hash{job="alertmanager-main",namespace="monitoring"})
            )
            != 1
          for: 20m
          labels:
            severity: critical
        - alert: AlertmanagerClusterDown
          annotations:
            description: '{{ $value | humanizePercentage }} of Alertmanager instances within the {{$labels.job}} cluster have been up for less than half of the last 5m.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/alertmanagerclusterdown
            summary: Half or more of the Alertmanager instances within the same cluster are down.
          expr: |
            (
              count by (namespace,service) (
                avg_over_time(up{job="alertmanager-main",namespace="monitoring"}[5m]) < 0.5
              )
            /
              count by (namespace,service) (
                up{job="alertmanager-main",namespace="monitoring"}
              )
            )
            >= 0.5
          for: 5m
          labels:
            severity: critical
        - alert: AlertmanagerClusterCrashlooping
          annotations:
            description: '{{ $value | humanizePercentage }} of Alertmanager instances within the {{$labels.job}} cluster have restarted at least 5 times in the last 10m.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/alertmanagerclustercrashlooping
            summary: Half or more of the Alertmanager instances within the same cluster are crashlooping.
          expr: |
            (
              count by (namespace,service) (
                changes(process_start_time_seconds{job="alertmanager-main",namespace="monitoring"}[10m]) > 4
              )
            /
              count by (namespace,service) (
                up{job="alertmanager-main",namespace="monitoring"}
              )
            )
            >= 0.5
          for: 5m
          labels:
            severity: critical
      - name: prometheus-operator
        rules:
        - alert: PrometheusOperatorListErrors
          annotations:
            description: Errors while performing List operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusoperatorlisterrors
            summary: Errors while performing list operations in controller.
          expr: |
            (sum by (controller,namespace) (rate(prometheus_operator_list_operations_failed_total{job="prometheus-operator",namespace="monitoring"}[10m])) / sum by (controller,namespace) (rate(prometheus_operator_list_operations_total{job="prometheus-operator",namespace="monitoring"}[10m]))) > 0.4
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusOperatorWatchErrors
          annotations:
            description: Errors while performing watch operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusoperatorwatcherrors
            summary: Errors while performing watch operations in controller.
          expr: |
            (sum by (controller,namespace) (rate(prometheus_operator_watch_operations_failed_total{job="prometheus-operator",namespace="monitoring"}[10m])) / sum by (controller,namespace) (rate(prometheus_operator_watch_operations_total{job="prometheus-operator",namespace="monitoring"}[10m]))) > 0.4
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusOperatorSyncFailed
          annotations:
            description: Controller {{ $labels.controller }} in {{ $labels.namespace }} namespace fails to reconcile {{ $value }} objects.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusoperatorsyncfailed
            summary: Last controller reconciliation failed
          expr: |
            min_over_time(prometheus_operator_syncs{status="failed",job="prometheus-operator",namespace="monitoring"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorReconcileErrors
          annotations:
            description: '{{ $value | humanizePercentage }} of reconciling operations failed for {{ $labels.controller }} controller in {{ $labels.namespace }} namespace.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusoperatorreconcileerrors
            summary: Errors while reconciling controller.
          expr: |
            (sum by (controller,namespace) (rate(prometheus_operator_reconcile_errors_total{job="prometheus-operator",namespace="monitoring"}[5m]))) / (sum by (controller,namespace) (rate(prometheus_operator_reconcile_operations_total{job="prometheus-operator",namespace="monitoring"}[5m]))) > 0.1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorNodeLookupErrors
          annotations:
            description: Errors while reconciling Prometheus in {{ $labels.namespace }} Namespace.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusoperatornodelookuperrors
            summary: Errors while reconciling Prometheus.
          expr: |
            rate(prometheus_operator_node_address_lookup_errors_total{job="prometheus-operator",namespace="monitoring"}[5m]) > 0.1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorNotReady
          annotations:
            description: Prometheus operator in {{ $labels.namespace }} namespace isn't ready to reconcile {{ $labels.controller }} resources.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusoperatornotready
            summary: Prometheus operator not ready
          expr: |
            min by(namespace, controller) (max_over_time(prometheus_operator_ready{job="prometheus-operator",namespace="monitoring"}[5m]) == 0)
          for: 5m
          labels:
            severity: warning
        - alert: PrometheusOperatorRejectedResources
          annotations:
            description: Prometheus operator in {{ $labels.namespace }} namespace rejected {{ printf "%0.0f" $value }} {{ $labels.controller }}/{{ $labels.resource }} resources.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusoperatorrejectedresources
            summary: Resources rejected by Prometheus operator
          expr: |
            min_over_time(prometheus_operator_managed_resources{state="rejected",job="prometheus-operator",namespace="monitoring"}[5m]) > 0
          for: 5m
          labels:
            severity: warning
      - name: kubernetes-apps
        rules:
        - alert: KubePodCrashLooping
          annotations:
            description: Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container }}) is restarting {{ printf "%.2f" $value }} times / 5 minutes.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubepodcrashlooping
            summary: Pod is crash looping.
          expr: |
            rate(kube_pod_container_status_restarts_total{job="kube-state-metrics"}[5m]) * 60 * 5 > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubePodNotReady
          annotations:
            description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready state for longer than 15 minutes.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubepodnotready
            summary: Pod has been in a non-ready state for more than 15 minutes.
          expr: |
            sum by (namespace, pod) (
              max by(namespace, pod) (
                kube_pod_status_phase{job="kube-state-metrics", phase=~"Pending|Unknown"}
              ) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (
                1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!="Job"})
              )
            ) > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeDeploymentGenerationMismatch
          annotations:
            description: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment }} does not match, this indicates that the Deployment has failed but has not been rolled back.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubedeploymentgenerationmismatch
            summary: Deployment generation mismatch due to possible roll-back
          expr: |
            kube_deployment_status_observed_generation{job="kube-state-metrics"}
              !=
            kube_deployment_metadata_generation{job="kube-state-metrics"}
          for: 15m
          labels:
            severity: warning
        - alert: KubeDeploymentReplicasMismatch
          annotations:
            description: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has not matched the expected number of replicas for longer than 15 minutes.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubedeploymentreplicasmismatch
            summary: Deployment has not matched the expected number of replicas.
          expr: |
            (
              kube_deployment_spec_replicas{job="kube-state-metrics"}
                !=
              kube_deployment_status_replicas_available{job="kube-state-metrics"}
            ) and (
              changes(kube_deployment_status_replicas_updated{job="kube-state-metrics"}[5m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeStatefulSetReplicasMismatch
          annotations:
            description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has not matched the expected number of replicas for longer than 15 minutes.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubestatefulsetreplicasmismatch
            summary: Deployment has not matched the expected number of replicas.
          expr: |
            (
              kube_statefulset_status_replicas_ready{job="kube-state-metrics"}
                !=
              kube_statefulset_status_replicas{job="kube-state-metrics"}
            ) and (
              changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics"}[5m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeStatefulSetGenerationMismatch
          annotations:
            description: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset }} does not match, this indicates that the StatefulSet has failed but has not been rolled back.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubestatefulsetgenerationmismatch
            summary: StatefulSet generation mismatch due to possible roll-back
          expr: |
            kube_statefulset_status_observed_generation{job="kube-state-metrics"}
              !=
            kube_statefulset_metadata_generation{job="kube-state-metrics"}
          for: 15m
          labels:
            severity: warning
        - alert: KubeStatefulSetUpdateNotRolledOut
          annotations:
            description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update has not been rolled out.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubestatefulsetupdatenotrolledout
            summary: StatefulSet update has not been rolled out.
          expr: |
            (
              max without (revision) (
                kube_statefulset_status_current_revision{job="kube-state-metrics"}
                  unless
                kube_statefulset_status_update_revision{job="kube-state-metrics"}
              )
                *
              (
                kube_statefulset_replicas{job="kube-state-metrics"}
                  !=
                kube_statefulset_status_replicas_updated{job="kube-state-metrics"}
              )
            )  and (
              changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics"}[5m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeDaemonSetRolloutStuck
          annotations:
            description: DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not finished or progressed for at least 15 minutes.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubedaemonsetrolloutstuck
            summary: DaemonSet rollout is stuck.
          expr: |
            (
              (
                kube_daemonset_status_current_number_scheduled{job="kube-state-metrics"}
                 !=
                kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              ) or (
                kube_daemonset_status_number_misscheduled{job="kube-state-metrics"}
                 !=
                0
              ) or (
                kube_daemonset_updated_number_scheduled{job="kube-state-metrics"}
                 !=
                kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              ) or (
                kube_daemonset_status_number_available{job="kube-state-metrics"}
                 !=
                kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              )
            ) and (
              changes(kube_daemonset_updated_number_scheduled{job="kube-state-metrics"}[5m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeContainerWaiting
          annotations:
            description: Pod {{ $labels.namespace }}/{{ $labels.pod }} container {{ $labels.container}} has been in waiting state for longer than 1 hour.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubecontainerwaiting
            summary: Pod container waiting longer than 1 hour
          expr: |
            sum by (namespace, pod, container) (kube_pod_container_status_waiting_reason{job="kube-state-metrics"}) > 0
          for: 1h
          labels:
            severity: warning
        - alert: KubeDaemonSetNotScheduled
          annotations:
            description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubedaemonsetnotscheduled
            summary: DaemonSet pods are not scheduled.
          expr: |
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              -
            kube_daemonset_status_current_number_scheduled{job="kube-state-metrics"} > 0
          for: 10m
          labels:
            severity: warning
        - alert: KubeDaemonSetMisScheduled
          annotations:
            description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are running where they are not supposed to run.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubedaemonsetmisscheduled
            summary: DaemonSet pods are misscheduled.
          expr: |
            kube_daemonset_status_number_misscheduled{job="kube-state-metrics"} > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeJobCompletion
          annotations:
            description: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more than 12 hours to complete.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubejobcompletion
            summary: Job did not complete in time
          expr: |
            kube_job_spec_completions{job="kube-state-metrics"} - kube_job_status_succeeded{job="kube-state-metrics"}  > 0
          for: 12h
          labels:
            severity: warning
        - alert: KubeJobFailed
          annotations:
            description: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete. Removing failed job after investigation should clear this alert.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubejobfailed
            summary: Job failed to complete.
          expr: |
            kube_job_failed{job="kube-state-metrics"}  > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeHpaReplicasMismatch
          annotations:
            description: HPA {{ $labels.namespace }}/{{ $labels.hpa }} has not matched the desired number of replicas for longer than 15 minutes.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubehpareplicasmismatch
            summary: HPA has not matched descired number of replicas.
          expr: |
            (kube_hpa_status_desired_replicas{job="kube-state-metrics"}
              !=
            kube_hpa_status_current_replicas{job="kube-state-metrics"})
              and
            (kube_hpa_status_current_replicas{job="kube-state-metrics"}
              >
            kube_hpa_spec_min_replicas{job="kube-state-metrics"})
              and
            (kube_hpa_status_current_replicas{job="kube-state-metrics"}
              <
            kube_hpa_spec_max_replicas{job="kube-state-metrics"})
              and
            changes(kube_hpa_status_current_replicas[15m]) == 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeHpaMaxedOut
          annotations:
            description: HPA {{ $labels.namespace }}/{{ $labels.hpa }} has been running at max replicas for longer than 15 minutes.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubehpamaxedout
            summary: HPA is running at max replicas
          expr: |
            kube_hpa_status_current_replicas{job="kube-state-metrics"}
              ==
            kube_hpa_spec_max_replicas{job="kube-state-metrics"}
          for: 15m
          labels:
            severity: warning
      - name: kubernetes-resources
        rules:
        - alert: KubeCPUOvercommit
          annotations:
            description: Cluster has overcommitted CPU resource requests for Pods and cannot tolerate node failure.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubecpuovercommit
            summary: Cluster has overcommitted CPU resource requests.
          expr: |
            sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum{})
              /
            sum(kube_node_status_allocatable_cpu_cores)
              >
            (count(kube_node_status_allocatable_cpu_cores)-1) / count(kube_node_status_allocatable_cpu_cores)
          for: 5m
          labels:
            severity: warning
        - alert: KubeMemoryOvercommit
          annotations:
            description: Cluster has overcommitted memory resource requests for Pods and cannot tolerate node failure.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubememoryovercommit
            summary: Cluster has overcommitted memory resource requests.
          expr: |
            sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum{})
              /
            sum(kube_node_status_allocatable_memory_bytes)
              >
            (count(kube_node_status_allocatable_memory_bytes)-1)
              /
            count(kube_node_status_allocatable_memory_bytes)
          for: 5m
          labels:
            severity: warning
        - alert: KubeCPUQuotaOvercommit
          annotations:
            description: Cluster has overcommitted CPU resource requests for Namespaces.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubecpuquotaovercommit
            summary: Cluster has overcommitted CPU resource requests.
          expr: |
            sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="cpu"})
              /
            sum(kube_node_status_allocatable_cpu_cores)
              > 1.5
          for: 5m
          labels:
            severity: warning
        - alert: KubeMemoryQuotaOvercommit
          annotations:
            description: Cluster has overcommitted memory resource requests for Namespaces.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubememoryquotaovercommit
            summary: Cluster has overcommitted memory resource requests.
          expr: |
            sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="memory"})
              /
            sum(kube_node_status_allocatable_memory_bytes{job="kube-state-metrics"})
              > 1.5
          for: 5m
          labels:
            severity: warning
        - alert: KubeQuotaAlmostFull
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubequotaalmostfull
            summary: Namespace quota is going to be full.
          expr: |
            kube_resourcequota{job="kube-state-metrics", type="used"}
              / ignoring(instance, job, type)
            (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
              > 0.9 < 1
          for: 15m
          labels:
            severity: info
        - alert: KubeQuotaFullyUsed
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubequotafullyused
            summary: Namespace quota is fully used.
          expr: |
            kube_resourcequota{job="kube-state-metrics", type="used"}
              / ignoring(instance, job, type)
            (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
              == 1
          for: 15m
          labels:
            severity: info
        - alert: KubeQuotaExceeded
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubequotaexceeded
            summary: Namespace quota has exceeded the limits.
          expr: |
            kube_resourcequota{job="kube-state-metrics", type="used"}
              / ignoring(instance, job, type)
            (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
              > 1
          for: 15m
          labels:
            severity: warning
        - alert: CPUThrottlingHigh
          annotations:
            description: '{{ $value | humanizePercentage }} throttling of CPU in namespace {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod }}.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/cputhrottlinghigh
            summary: Processes experience elevated CPU throttling.
          expr: |
            sum(increase(container_cpu_cfs_throttled_periods_total{container!="", }[5m])) by (container, pod, namespace)
              /
            sum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace)
              > ( 25 / 100 )
          for: 15m
          labels:
            severity: info
      - name: kubernetes-storage
        rules:
        - alert: KubePersistentVolumeFillingUp
          annotations:
            description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage }} free.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubepersistentvolumefillingup
            summary: PersistentVolume is filling up.
          expr: |
            kubelet_volume_stats_available_bytes{job="kubelet", metrics_path="/metrics"}
              /
            kubelet_volume_stats_capacity_bytes{job="kubelet", metrics_path="/metrics"}
              < 0.03
          for: 1m
          labels:
            severity: critical
        - alert: KubePersistentVolumeFillingUp
          annotations:
            description: Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is expected to fill up within four days. Currently {{ $value | humanizePercentage }} is available.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubepersistentvolumefillingup
            summary: PersistentVolume is filling up.
          expr: |
            (
              kubelet_volume_stats_available_bytes{job="kubelet", metrics_path="/metrics"}
                /
              kubelet_volume_stats_capacity_bytes{job="kubelet", metrics_path="/metrics"}
            ) < 0.15
            and
            predict_linear(kubelet_volume_stats_available_bytes{job="kubelet", metrics_path="/metrics"}[6h], 4 * 24 * 3600) < 0
          for: 1h
          labels:
            severity: warning
        - alert: KubePersistentVolumeErrors
          annotations:
            description: The persistent volume {{ $labels.persistentvolume }} has status {{ $labels.phase }}.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubepersistentvolumeerrors
            summary: PersistentVolume is having issues with provisioning.
          expr: |
            kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="kube-state-metrics"} > 0
          for: 5m
          labels:
            severity: critical
      - name: kubernetes-system
        rules:
        - alert: KubeVersionMismatch
          annotations:
            description: There are {{ $value }} different semantic versions of Kubernetes components running.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeversionmismatch
            summary: Different semantic versions of Kubernetes components running.
          expr: |
            count(count by (gitVersion) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"gitVersion","$1","gitVersion","(v[0-9]*.[0-9]*).*"))) > 1
          for: 15m
          labels:
            severity: warning
        - alert: KubeClientErrors
          annotations:
            description: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance }}' is experiencing {{ $value | humanizePercentage }} errors.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeclienterrors
            summary: Kubernetes API server client is experiencing errors.
          expr: |
            (sum(rate(rest_client_requests_total{code=~"5.."}[5m])) by (instance, job)
              /
            sum(rate(rest_client_requests_total[5m])) by (instance, job))
            > 0.01
          for: 15m
          labels:
            severity: warning
      - name: kube-apiserver-slos
        rules:
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum(apiserver_request:burnrate1h) > (14.40 * 0.01000)
            and
            sum(apiserver_request:burnrate5m) > (14.40 * 0.01000)
          for: 2m
          labels:
            long: 1h
            severity: critical
            short: 5m
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum(apiserver_request:burnrate6h) > (6.00 * 0.01000)
            and
            sum(apiserver_request:burnrate30m) > (6.00 * 0.01000)
          for: 15m
          labels:
            long: 6h
            severity: critical
            short: 30m
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum(apiserver_request:burnrate1d) > (3.00 * 0.01000)
            and
            sum(apiserver_request:burnrate2h) > (3.00 * 0.01000)
          for: 1h
          labels:
            long: 1d
            severity: warning
            short: 2h
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum(apiserver_request:burnrate3d) > (1.00 * 0.01000)
            and
            sum(apiserver_request:burnrate6h) > (1.00 * 0.01000)
          for: 3h
          labels:
            long: 3d
            severity: warning
            short: 6h
      - name: kubernetes-system-apiserver
        rules:
        - alert: KubeClientCertificateExpiration
          annotations:
            description: A client certificate used to authenticate to the apiserver is expiring in less than 7.0 days.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeclientcertificateexpiration
            summary: Client certificate is about to expire.
          expr: |
            apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 604800
          labels:
            severity: warning
        - alert: KubeClientCertificateExpiration
          annotations:
            description: A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeclientcertificateexpiration
            summary: Client certificate is about to expire.
          expr: |
            apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 86400
          labels:
            severity: critical
        - alert: AggregatedAPIErrors
          annotations:
            description: An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has reported errors. The number of errors have increased for it in the past five minutes. High values indicate that the availability of the service changes too often.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/aggregatedapierrors
            summary: An aggregated API has reported errors.
          expr: |
            sum by(name, namespace)(increase(aggregator_unavailable_apiservice_count[5m])) > 2
          labels:
            severity: warning
        - alert: AggregatedAPIDown
          annotations:
            description: An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has been only {{ $value | humanize }}% available over the last 10m.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/aggregatedapidown
            summary: An aggregated API is down.
          expr: |
            (1 - max by(name, namespace)(avg_over_time(aggregator_unavailable_apiservice[10m]))) * 100 < 85
          for: 5m
          labels:
            severity: warning
        - alert: KubeAPIDown
          annotations:
            description: KubeAPI has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeapidown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="apiserver"} == 1)
          for: 15m
          labels:
            severity: critical
      - name: kubernetes-system-kubelet
        rules:
        - alert: KubeNodeNotReady
          annotations:
            description: '{{ $labels.node }} has been unready for more than 15 minutes.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubenodenotready
            summary: Node is not ready.
          expr: |
            kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeNodeUnreachable
          annotations:
            description: '{{ $labels.node }} is unreachable and some workloads may be rescheduled.'
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubenodeunreachable
            summary: Node is unreachable.
          expr: |
            (kube_node_spec_taint{job="kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"} unless ignoring(key,value) kube_node_spec_taint{job="kube-state-metrics",key=~"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn"}) == 1
          for: 15m
          labels:
            severity: warning
        - alert: KubeletTooManyPods
          annotations:
            description: Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage }} of its Pod capacity.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubelettoomanypods
            summary: Kubelet is running at capacity.
          expr: |
            count by(node) (
              (kube_pod_status_phase{job="kube-state-metrics",phase="Running"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{job="kube-state-metrics"})
            )
            /
            max by(node) (
              kube_node_status_capacity_pods{job="kube-state-metrics"} != 1
            ) > 0.95
          for: 15m
          labels:
            severity: warning
        - alert: KubeNodeReadinessFlapping
          annotations:
            description: The readiness status of node {{ $labels.node }} has changed {{ $value }} times in the last 15 minutes.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubenodereadinessflapping
            summary: Node readiness status is flapping.
          expr: |
            sum(changes(kube_node_status_condition{status="true",condition="Ready"}[15m])) by (node) > 2
          for: 15m
          labels:
            severity: warning
        - alert: KubeletPlegDurationHigh
          annotations:
            description: The Kubelet Pod Lifecycle Event Generator has a 99th percentile duration of {{ $value }} seconds on node {{ $labels.node }}.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeletplegdurationhigh
            summary: Kubelet Pod Lifecycle Event Generator is taking too long to relist.
          expr: |
            node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile="0.99"} >= 10
          for: 5m
          labels:
            severity: warning
        - alert: KubeletPodStartUpLatencyHigh
          annotations:
            description: Kubelet Pod startup 99th percentile latency is {{ $value }} seconds on node {{ $labels.node }}.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeletpodstartuplatencyhigh
            summary: Kubelet Pod startup latency is too high.
          expr: |
            histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (instance, le)) * on(instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"} > 60
          for: 15m
          labels:
            severity: warning
        - alert: KubeletClientCertificateExpiration
          annotations:
            description: Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeletclientcertificateexpiration
            summary: Kubelet client certificate is about to expire.
          expr: |
            kubelet_certificate_manager_client_ttl_seconds < 604800
          labels:
            severity: warning
        - alert: KubeletClientCertificateExpiration
          annotations:
            description: Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeletclientcertificateexpiration
            summary: Kubelet client certificate is about to expire.
          expr: |
            kubelet_certificate_manager_client_ttl_seconds < 86400
          labels:
            severity: critical
        - alert: KubeletServerCertificateExpiration
          annotations:
            description: Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeletservercertificateexpiration
            summary: Kubelet server certificate is about to expire.
          expr: |
            kubelet_certificate_manager_server_ttl_seconds < 604800
          labels:
            severity: warning
        - alert: KubeletServerCertificateExpiration
          annotations:
            description: Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeletservercertificateexpiration
            summary: Kubelet server certificate is about to expire.
          expr: |
            kubelet_certificate_manager_server_ttl_seconds < 86400
          labels:
            severity: critical
        - alert: KubeletClientCertificateRenewalErrors
          annotations:
            description: Kubelet on node {{ $labels.node }} has failed to renew its client certificate ({{ $value | humanize }} errors in the last 5 minutes).
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeletclientcertificaterenewalerrors
            summary: Kubelet has failed to renew its client certificate.
          expr: |
            increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeletServerCertificateRenewalErrors
          annotations:
            description: Kubelet on node {{ $labels.node }} has failed to renew its server certificate ({{ $value | humanize }} errors in the last 5 minutes).
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeletservercertificaterenewalerrors
            summary: Kubelet has failed to renew its server certificate.
          expr: |
            increase(kubelet_server_expiration_renew_errors[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeletDown
          annotations:
            description: Kubelet has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeletdown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="kubelet", metrics_path="/metrics"} == 1)
          for: 15m
          labels:
            severity: critical
      - name: kubernetes-system-scheduler
        rules:
        - alert: KubeSchedulerDown
          annotations:
            description: KubeScheduler has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubeschedulerdown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="kube-scheduler"} == 1)
          for: 15m
          labels:
            severity: critical
      - name: kubernetes-system-controller-manager
        rules:
        - alert: KubeControllerManagerDown
          annotations:
            description: KubeControllerManager has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/kubecontrollermanagerdown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="kube-controller-manager"} == 1)
          for: 15m
          labels:
            severity: critical
      - name: prometheus
        rules:
        - alert: PrometheusBadConfig
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to reload its configuration.
            summary: Failed Prometheus configuration reload.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(prometheus_config_last_reload_successful{job="prometheus-k8s",namespace="monitoring"}[5m]) == 0
          for: 10m
          labels:
            severity: critical
        - alert: PrometheusNotificationQueueRunningFull
          annotations:
            description: Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}} is running full.
            summary: Prometheus alert notification queue predicted to run full in less than 30m.
          expr: |
            # Without min_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              predict_linear(prometheus_notifications_queue_length{job="prometheus-k8s",namespace="monitoring"}[5m], 60 * 30)
            >
              min_over_time(prometheus_notifications_queue_capacity{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusErrorSendingAlertsToSomeAlertmanagers
          annotations:
            description: '{{ printf "%.1f" $value }}% errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to Alertmanager {{$labels.alertmanager}}.'
            summary: Prometheus has encountered more than 1% errors sending alerts to a specific Alertmanager.
          expr: |
            (
              rate(prometheus_notifications_errors_total{job="prometheus-k8s",namespace="monitoring"}[5m])
            /
              rate(prometheus_notifications_sent_total{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
            * 100
            > 1
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusErrorSendingAlertsToAnyAlertmanager
          annotations:
            description: '{{ printf "%.1f" $value }}% minimum errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.'
            summary: Prometheus encounters more than 3% errors sending alerts to any Alertmanager.
          expr: |
            min without(alertmanager) (
              rate(prometheus_notifications_errors_total{job="prometheus-k8s",namespace="monitoring"}[5m])
            /
              rate(prometheus_notifications_sent_total{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
            * 100
            > 3
          for: 15m
          labels:
            severity: critical
        - alert: PrometheusNotConnectedToAlertmanagers
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected to any Alertmanagers.
            summary: Prometheus is not connected to any Alertmanagers.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(prometheus_notifications_alertmanagers_discovered{job="prometheus-k8s",namespace="monitoring"}[5m]) < 1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusTSDBReloadsFailing
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} reload failures over the last 3h.
            summary: Prometheus has issues reloading blocks from disk.
          expr: |
            increase(prometheus_tsdb_reloads_failures_total{job="prometheus-k8s",namespace="monitoring"}[3h]) > 0
          for: 4h
          labels:
            severity: warning
        - alert: PrometheusTSDBCompactionsFailing
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} compaction failures over the last 3h.
            summary: Prometheus has issues compacting blocks.
          expr: |
            increase(prometheus_tsdb_compactions_failed_total{job="prometheus-k8s",namespace="monitoring"}[3h]) > 0
          for: 4h
          labels:
            severity: warning
        - alert: PrometheusNotIngestingSamples
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting samples.
            summary: Prometheus is not ingesting samples.
          expr: |
            rate(prometheus_tsdb_head_samples_appended_total{job="prometheus-k8s",namespace="monitoring"}[5m]) <= 0
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusDuplicateTimestamps
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf "%.4g" $value  }} samples/s with different values but duplicated timestamp.
            summary: Prometheus is dropping samples with duplicate timestamps.
          expr: |
            rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOutOfOrderTimestamps
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf "%.4g" $value  }} samples/s with timestamps arriving out of order.
            summary: Prometheus drops samples with out-of-order timestamps.
          expr: |
            rate(prometheus_target_scrapes_sample_out_of_order_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusRemoteStorageFailures
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send {{ printf "%.1f" $value }}% of the samples to {{ $labels.remote_name}}:{{ $labels.url }}
            summary: Prometheus fails to send samples to remote storage.
          expr: |
            (
              rate(prometheus_remote_storage_failed_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m])
            /
              (
                rate(prometheus_remote_storage_failed_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m])
              +
                rate(prometheus_remote_storage_succeeded_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m])
              )
            )
            * 100
            > 1
          for: 15m
          labels:
            severity: critical
        - alert: PrometheusRemoteWriteBehind
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is {{ printf "%.1f" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url }}.
            summary: Prometheus remote write is behind.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job="prometheus-k8s",namespace="monitoring"}[5m])
            - on(job, instance) group_right
              max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
            > 120
          for: 15m
          labels:
            severity: critical
        - alert: PrometheusRemoteWriteDesiredShards
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{ $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance="%s",job="prometheus-k8s",namespace="monitoring"}` $labels.instance | query | first | value }}.
            summary: Prometheus remote write desired shards calculation wants to run more than configured max shards.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              max_over_time(prometheus_remote_storage_shards_desired{job="prometheus-k8s",namespace="monitoring"}[5m])
            >
              max_over_time(prometheus_remote_storage_shards_max{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusRuleFailures
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to evaluate {{ printf "%.0f" $value }} rules in the last 5m.
            summary: Prometheus is failing rule evaluations.
          expr: |
            increase(prometheus_rule_evaluation_failures_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: critical
        - alert: PrometheusMissingRuleEvaluations
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{ printf "%.0f" $value }} rule group evaluations in the last 5m.
            summary: Prometheus is missing rule evaluations due to slow rule group evaluation.
          expr: |
            increase(prometheus_rule_group_iterations_missed_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusTargetLimitHit
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{ printf "%.0f" $value }} targets because the number of targets exceeded the configured target_limit.
            summary: Prometheus has dropped targets because some scrape configs have exceeded the targets limit.
          expr: |
            increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
      - name: general.rules
        rules:
        - alert: TargetDown
          annotations:
            message: '{{ printf "%.4g" $value }}% of the {{ $labels.job }}/{{ $labels.service }} targets in {{ $labels.namespace }} namespace are down.'
          expr: 100 * (count(up == 0) BY (job, namespace, service) / count(up) BY (job, namespace, service)) > 10
          for: 10m
          labels:
            severity: warning
        - alert: Watchdog
          annotations:
            message: |
              This is an alert meant to ensure that the entire alerting pipeline is functional.
              This alert is always firing, therefore it should always be firing in Alertmanager
              and always fire against a receiver. There are integrations with various notification
              mechanisms that send a notification when this alert is not firing. For example the
              "DeadMansSnitch" integration in PagerDuty.
          expr: vector(1)
          labels:
            severity: none
      - name: node-network
        rules:
        - alert: NodeNetworkInterfaceFlapping
          annotations:
            message: Network interface "{{ $labels.device }}" changing it's up status often on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}"
          expr: |
            changes(node_network_up{job="node-exporter",device!~"veth.+"}[2m]) > 2
          for: 2m
          labels:
            severity: warning


    ---
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        prometheus: k8s
      name: prometheus-k8s
      namespace: kuboard
    spec:
      ports:
      - name: web
        port: 9090
        targetPort: web
      selector:
        app: prometheus
        prometheus: k8s
      sessionAffinity: ClientIP

    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: prometheus-k8s
      namespace: kuboard

    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        k8s-app: prometheus
      name: prometheus
      namespace: kuboard
    spec:
      endpoints:
      - interval: 30s
        port: web
      selector:
        matchLabels:
          prometheus: k8s

    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        k8s-app: apiserver
      name: kube-apiserver
      namespace: kuboard
    spec:
      endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        interval: 30s
        metricRelabelings:
        - action: drop
          regex: kubelet_(pod_worker_latency_microseconds|pod_start_latency_microseconds|cgroup_manager_latency_microseconds|pod_worker_start_latency_microseconds|pleg_relist_latency_microseconds|pleg_relist_interval_microseconds|runtime_operations|runtime_operations_latency_microseconds|runtime_operations_errors|eviction_stats_age_microseconds|device_plugin_registration_count|device_plugin_alloc_latency_microseconds|network_plugin_operations_latency_microseconds)
          sourceLabels:
          - __name__
        - action: drop
          regex: scheduler_(e2e_scheduling_latency_microseconds|scheduling_algorithm_predicate_evaluation|scheduling_algorithm_priority_evaluation|scheduling_algorithm_preemption_evaluation|scheduling_algorithm_latency_microseconds|binding_latency_microseconds|scheduling_latency_seconds)
          sourceLabels:
          - __name__
        - action: drop
          regex: apiserver_(request_count|request_latencies|request_latencies_summary|dropped_requests|storage_data_key_generation_latencies_microseconds|storage_transformation_failures_total|storage_transformation_latencies_microseconds|proxy_tunnel_sync_latency_secs)
          sourceLabels:
          - __name__
        - action: drop
          regex: kubelet_docker_(operations|operations_latency_microseconds|operations_errors|operations_timeout)
          sourceLabels:
          - __name__
        - action: drop
          regex: reflector_(items_per_list|items_per_watch|list_duration_seconds|lists_total|short_watches_total|watch_duration_seconds|watches_total)
          sourceLabels:
          - __name__
        - action: drop
          regex: etcd_(helper_cache_hit_count|helper_cache_miss_count|helper_cache_entry_count|request_cache_get_latencies_summary|request_cache_add_latencies_summary|request_latencies_summary)
          sourceLabels:
          - __name__
        - action: drop
          regex: transformation_(transformation_latencies_microseconds|failures_total)
          sourceLabels:
          - __name__
        - action: drop
          regex: (admission_quota_controller_adds|crd_autoregistration_controller_work_duration|APIServiceOpenAPIAggregationControllerQueue1_adds|AvailableConditionController_retries|crd_openapi_controller_unfinished_work_seconds|APIServiceRegistrationController_retries|admission_quota_controller_longest_running_processor_microseconds|crdEstablishing_longest_running_processor_microseconds|crdEstablishing_unfinished_work_seconds|crd_openapi_controller_adds|crd_autoregistration_controller_retries|crd_finalizer_queue_latency|AvailableConditionController_work_duration|non_structural_schema_condition_controller_depth|crd_autoregistration_controller_unfinished_work_seconds|AvailableConditionController_adds|DiscoveryController_longest_running_processor_microseconds|autoregister_queue_latency|crd_autoregistration_controller_adds|non_structural_schema_condition_controller_work_duration|APIServiceRegistrationController_adds|crd_finalizer_work_duration|crd_naming_condition_controller_unfinished_work_seconds|crd_openapi_controller_longest_running_processor_microseconds|DiscoveryController_adds|crd_autoregistration_controller_longest_running_processor_microseconds|autoregister_unfinished_work_seconds|crd_naming_condition_controller_queue_latency|crd_naming_condition_controller_retries|non_structural_schema_condition_controller_queue_latency|crd_naming_condition_controller_depth|AvailableConditionController_longest_running_processor_microseconds|crdEstablishing_depth|crd_finalizer_longest_running_processor_microseconds|crd_naming_condition_controller_adds|APIServiceOpenAPIAggregationControllerQueue1_longest_running_processor_microseconds|DiscoveryController_queue_latency|DiscoveryController_unfinished_work_seconds|crd_openapi_controller_depth|APIServiceOpenAPIAggregationControllerQueue1_queue_latency|APIServiceOpenAPIAggregationControllerQueue1_unfinished_work_seconds|DiscoveryController_work_duration|autoregister_adds|crd_autoregistration_controller_queue_latency|crd_finalizer_retries|AvailableConditionController_unfinished_work_seconds|autoregister_longest_running_processor_microseconds|non_structural_schema_condition_controller_unfinished_work_seconds|APIServiceOpenAPIAggregationControllerQueue1_depth|AvailableConditionController_depth|DiscoveryController_retries|admission_quota_controller_depth|crdEstablishing_adds|APIServiceOpenAPIAggregationControllerQueue1_retries|crdEstablishing_queue_latency|non_structural_schema_condition_controller_longest_running_processor_microseconds|autoregister_work_duration|crd_openapi_controller_retries|APIServiceRegistrationController_work_duration|crdEstablishing_work_duration|crd_finalizer_adds|crd_finalizer_depth|crd_openapi_controller_queue_latency|APIServiceOpenAPIAggregationControllerQueue1_work_duration|APIServiceRegistrationController_queue_latency|crd_autoregistration_controller_depth|AvailableConditionController_queue_latency|admission_quota_controller_queue_latency|crd_naming_condition_controller_work_duration|crd_openapi_controller_work_duration|DiscoveryController_depth|crd_naming_condition_controller_longest_running_processor_microseconds|APIServiceRegistrationController_depth|APIServiceRegistrationController_longest_running_processor_microseconds|crd_finalizer_unfinished_work_seconds|crdEstablishing_retries|admission_quota_controller_unfinished_work_seconds|non_structural_schema_condition_controller_adds|APIServiceRegistrationController_unfinished_work_seconds|admission_quota_controller_work_duration|autoregister_depth|autoregister_retries|kubeproxy_sync_proxy_rules_latency_microseconds|rest_client_request_latency_seconds|non_structural_schema_condition_controller_retries)
          sourceLabels:
          - __name__
        - action: drop
          regex: etcd_(debugging|disk|server).*
          sourceLabels:
          - __name__
        - action: drop
          regex: apiserver_admission_controller_admission_latencies_seconds_.*
          sourceLabels:
          - __name__
        - action: drop
          regex: apiserver_admission_step_admission_latencies_seconds_.*
          sourceLabels:
          - __name__
        - action: drop
          regex: apiserver_request_duration_seconds_bucket;(0.15|0.25|0.3|0.35|0.4|0.45|0.6|0.7|0.8|0.9|1.25|1.5|1.75|2.5|3|3.5|4.5|6|7|8|9|15|25|30|50)
          sourceLabels:
          - __name__
          - le
        port: https
        scheme: https
        tlsConfig:
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          serverName: kubernetes
      jobLabel: component
      namespaceSelector:
        matchNames:
        - default
      selector:
        matchLabels:
          component: apiserver
          provider: kubernetes


    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        k8s-app: coredns
      name: coredns
      namespace: kuboard
    spec:
      endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        interval: 15s
        port: metrics
      jobLabel: k8s-app
      namespaceSelector:
        matchNames:
        - kube-system
      selector:
        matchLabels:
          k8s-app: kube-dns


    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        k8s-app: kube-controller-manager
      name: kube-controller-manager
      namespace: kuboard
    spec:
      endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        interval: 30s
        metricRelabelings:
        - action: drop
          regex: kubelet_(pod_worker_latency_microseconds|pod_start_latency_microseconds|cgroup_manager_latency_microseconds|pod_worker_start_latency_microseconds|pleg_relist_latency_microseconds|pleg_relist_interval_microseconds|runtime_operations|runtime_operations_latency_microseconds|runtime_operations_errors|eviction_stats_age_microseconds|device_plugin_registration_count|device_plugin_alloc_latency_microseconds|network_plugin_operations_latency_microseconds)
          sourceLabels:
          - __name__
        - action: drop
          regex: scheduler_(e2e_scheduling_latency_microseconds|scheduling_algorithm_predicate_evaluation|scheduling_algorithm_priority_evaluation|scheduling_algorithm_preemption_evaluation|scheduling_algorithm_latency_microseconds|binding_latency_microseconds|scheduling_latency_seconds)
          sourceLabels:
          - __name__
        - action: drop
          regex: apiserver_(request_count|request_latencies|request_latencies_summary|dropped_requests|storage_data_key_generation_latencies_microseconds|storage_transformation_failures_total|storage_transformation_latencies_microseconds|proxy_tunnel_sync_latency_secs)
          sourceLabels:
          - __name__
        - action: drop
          regex: kubelet_docker_(operations|operations_latency_microseconds|operations_errors|operations_timeout)
          sourceLabels:
          - __name__
        - action: drop
          regex: reflector_(items_per_list|items_per_watch|list_duration_seconds|lists_total|short_watches_total|watch_duration_seconds|watches_total)
          sourceLabels:
          - __name__
        - action: drop
          regex: etcd_(helper_cache_hit_count|helper_cache_miss_count|helper_cache_entry_count|request_cache_get_latencies_summary|request_cache_add_latencies_summary|request_latencies_summary)
          sourceLabels:
          - __name__
        - action: drop
          regex: transformation_(transformation_latencies_microseconds|failures_total)
          sourceLabels:
          - __name__
        - action: drop
          regex: (admission_quota_controller_adds|crd_autoregistration_controller_work_duration|APIServiceOpenAPIAggregationControllerQueue1_adds|AvailableConditionController_retries|crd_openapi_controller_unfinished_work_seconds|APIServiceRegistrationController_retries|admission_quota_controller_longest_running_processor_microseconds|crdEstablishing_longest_running_processor_microseconds|crdEstablishing_unfinished_work_seconds|crd_openapi_controller_adds|crd_autoregistration_controller_retries|crd_finalizer_queue_latency|AvailableConditionController_work_duration|non_structural_schema_condition_controller_depth|crd_autoregistration_controller_unfinished_work_seconds|AvailableConditionController_adds|DiscoveryController_longest_running_processor_microseconds|autoregister_queue_latency|crd_autoregistration_controller_adds|non_structural_schema_condition_controller_work_duration|APIServiceRegistrationController_adds|crd_finalizer_work_duration|crd_naming_condition_controller_unfinished_work_seconds|crd_openapi_controller_longest_running_processor_microseconds|DiscoveryController_adds|crd_autoregistration_controller_longest_running_processor_microseconds|autoregister_unfinished_work_seconds|crd_naming_condition_controller_queue_latency|crd_naming_condition_controller_retries|non_structural_schema_condition_controller_queue_latency|crd_naming_condition_controller_depth|AvailableConditionController_longest_running_processor_microseconds|crdEstablishing_depth|crd_finalizer_longest_running_processor_microseconds|crd_naming_condition_controller_adds|APIServiceOpenAPIAggregationControllerQueue1_longest_running_processor_microseconds|DiscoveryController_queue_latency|DiscoveryController_unfinished_work_seconds|crd_openapi_controller_depth|APIServiceOpenAPIAggregationControllerQueue1_queue_latency|APIServiceOpenAPIAggregationControllerQueue1_unfinished_work_seconds|DiscoveryController_work_duration|autoregister_adds|crd_autoregistration_controller_queue_latency|crd_finalizer_retries|AvailableConditionController_unfinished_work_seconds|autoregister_longest_running_processor_microseconds|non_structural_schema_condition_controller_unfinished_work_seconds|APIServiceOpenAPIAggregationControllerQueue1_depth|AvailableConditionController_depth|DiscoveryController_retries|admission_quota_controller_depth|crdEstablishing_adds|APIServiceOpenAPIAggregationControllerQueue1_retries|crdEstablishing_queue_latency|non_structural_schema_condition_controller_longest_running_processor_microseconds|autoregister_work_duration|crd_openapi_controller_retries|APIServiceRegistrationController_work_duration|crdEstablishing_work_duration|crd_finalizer_adds|crd_finalizer_depth|crd_openapi_controller_queue_latency|APIServiceOpenAPIAggregationControllerQueue1_work_duration|APIServiceRegistrationController_queue_latency|crd_autoregistration_controller_depth|AvailableConditionController_queue_latency|admission_quota_controller_queue_latency|crd_naming_condition_controller_work_duration|crd_openapi_controller_work_duration|DiscoveryController_depth|crd_naming_condition_controller_longest_running_processor_microseconds|APIServiceRegistrationController_depth|APIServiceRegistrationController_longest_running_processor_microseconds|crd_finalizer_unfinished_work_seconds|crdEstablishing_retries|admission_quota_controller_unfinished_work_seconds|non_structural_schema_condition_controller_adds|APIServiceRegistrationController_unfinished_work_seconds|admission_quota_controller_work_duration|autoregister_depth|autoregister_retries|kubeproxy_sync_proxy_rules_latency_microseconds|rest_client_request_latency_seconds|non_structural_schema_condition_controller_retries)
          sourceLabels:
          - __name__
        - action: drop
          regex: etcd_(debugging|disk|request|server).*
          sourceLabels:
          - __name__
        port: https-metrics
        scheme: https
        tlsConfig:
          insecureSkipVerify: true
      jobLabel: k8s-app
      namespaceSelector:
        matchNames:
        - kube-system
      selector:
        matchLabels:
          k8s-app: kube-controller-manager


    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        k8s-app: kubelet
      name: kubelet
      namespace: kuboard
    spec:
      endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        honorLabels: true
        interval: 30s
        metricRelabelings:
        - action: drop
          regex: kubelet_(pod_worker_latency_microseconds|pod_start_latency_microseconds|cgroup_manager_latency_microseconds|pod_worker_start_latency_microseconds|pleg_relist_latency_microseconds|pleg_relist_interval_microseconds|runtime_operations|runtime_operations_latency_microseconds|runtime_operations_errors|eviction_stats_age_microseconds|device_plugin_registration_count|device_plugin_alloc_latency_microseconds|network_plugin_operations_latency_microseconds)
          sourceLabels:
          - __name__
        - action: drop
          regex: scheduler_(e2e_scheduling_latency_microseconds|scheduling_algorithm_predicate_evaluation|scheduling_algorithm_priority_evaluation|scheduling_algorithm_preemption_evaluation|scheduling_algorithm_latency_microseconds|binding_latency_microseconds|scheduling_latency_seconds)
          sourceLabels:
          - __name__
        - action: drop
          regex: apiserver_(request_count|request_latencies|request_latencies_summary|dropped_requests|storage_data_key_generation_latencies_microseconds|storage_transformation_failures_total|storage_transformation_latencies_microseconds|proxy_tunnel_sync_latency_secs)
          sourceLabels:
          - __name__
        - action: drop
          regex: kubelet_docker_(operations|operations_latency_microseconds|operations_errors|operations_timeout)
          sourceLabels:
          - __name__
        - action: drop
          regex: reflector_(items_per_list|items_per_watch|list_duration_seconds|lists_total|short_watches_total|watch_duration_seconds|watches_total)
          sourceLabels:
          - __name__
        - action: drop
          regex: etcd_(helper_cache_hit_count|helper_cache_miss_count|helper_cache_entry_count|request_cache_get_latencies_summary|request_cache_add_latencies_summary|request_latencies_summary)
          sourceLabels:
          - __name__
        - action: drop
          regex: transformation_(transformation_latencies_microseconds|failures_total)
          sourceLabels:
          - __name__
        - action: drop
          regex: (admission_quota_controller_adds|crd_autoregistration_controller_work_duration|APIServiceOpenAPIAggregationControllerQueue1_adds|AvailableConditionController_retries|crd_openapi_controller_unfinished_work_seconds|APIServiceRegistrationController_retries|admission_quota_controller_longest_running_processor_microseconds|crdEstablishing_longest_running_processor_microseconds|crdEstablishing_unfinished_work_seconds|crd_openapi_controller_adds|crd_autoregistration_controller_retries|crd_finalizer_queue_latency|AvailableConditionController_work_duration|non_structural_schema_condition_controller_depth|crd_autoregistration_controller_unfinished_work_seconds|AvailableConditionController_adds|DiscoveryController_longest_running_processor_microseconds|autoregister_queue_latency|crd_autoregistration_controller_adds|non_structural_schema_condition_controller_work_duration|APIServiceRegistrationController_adds|crd_finalizer_work_duration|crd_naming_condition_controller_unfinished_work_seconds|crd_openapi_controller_longest_running_processor_microseconds|DiscoveryController_adds|crd_autoregistration_controller_longest_running_processor_microseconds|autoregister_unfinished_work_seconds|crd_naming_condition_controller_queue_latency|crd_naming_condition_controller_retries|non_structural_schema_condition_controller_queue_latency|crd_naming_condition_controller_depth|AvailableConditionController_longest_running_processor_microseconds|crdEstablishing_depth|crd_finalizer_longest_running_processor_microseconds|crd_naming_condition_controller_adds|APIServiceOpenAPIAggregationControllerQueue1_longest_running_processor_microseconds|DiscoveryController_queue_latency|DiscoveryController_unfinished_work_seconds|crd_openapi_controller_depth|APIServiceOpenAPIAggregationControllerQueue1_queue_latency|APIServiceOpenAPIAggregationControllerQueue1_unfinished_work_seconds|DiscoveryController_work_duration|autoregister_adds|crd_autoregistration_controller_queue_latency|crd_finalizer_retries|AvailableConditionController_unfinished_work_seconds|autoregister_longest_running_processor_microseconds|non_structural_schema_condition_controller_unfinished_work_seconds|APIServiceOpenAPIAggregationControllerQueue1_depth|AvailableConditionController_depth|DiscoveryController_retries|admission_quota_controller_depth|crdEstablishing_adds|APIServiceOpenAPIAggregationControllerQueue1_retries|crdEstablishing_queue_latency|non_structural_schema_condition_controller_longest_running_processor_microseconds|autoregister_work_duration|crd_openapi_controller_retries|APIServiceRegistrationController_work_duration|crdEstablishing_work_duration|crd_finalizer_adds|crd_finalizer_depth|crd_openapi_controller_queue_latency|APIServiceOpenAPIAggregationControllerQueue1_work_duration|APIServiceRegistrationController_queue_latency|crd_autoregistration_controller_depth|AvailableConditionController_queue_latency|admission_quota_controller_queue_latency|crd_naming_condition_controller_work_duration|crd_openapi_controller_work_duration|DiscoveryController_depth|crd_naming_condition_controller_longest_running_processor_microseconds|APIServiceRegistrationController_depth|APIServiceRegistrationController_longest_running_processor_microseconds|crd_finalizer_unfinished_work_seconds|crdEstablishing_retries|admission_quota_controller_unfinished_work_seconds|non_structural_schema_condition_controller_adds|APIServiceRegistrationController_unfinished_work_seconds|admission_quota_controller_work_duration|autoregister_depth|autoregister_retries|kubeproxy_sync_proxy_rules_latency_microseconds|rest_client_request_latency_seconds|non_structural_schema_condition_controller_retries)
          sourceLabels:
          - __name__
        port: https-metrics
        relabelings:
        - sourceLabels:
          - __metrics_path__
          targetLabel: metrics_path
        scheme: https
        tlsConfig:
          insecureSkipVerify: true
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        honorLabels: true
        honorTimestamps: false
        interval: 30s
        metricRelabelings:
        - action: drop
          regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
          sourceLabels:
          - __name__
        path: /metrics/cadvisor
        port: https-metrics
        relabelings:
        - sourceLabels:
          - __metrics_path__
          targetLabel: metrics_path
        scheme: https
        tlsConfig:
          insecureSkipVerify: true
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        honorLabels: true
        interval: 30s
        path: /metrics/probes
        port: https-metrics
        relabelings:
        - sourceLabels:
          - __metrics_path__
          targetLabel: metrics_path
        scheme: https
        tlsConfig:
          insecureSkipVerify: true
      jobLabel: k8s-app
      namespaceSelector:
        matchNames:
        - kube-system
      selector:
        matchLabels:
          k8s-app: kubelet

    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        k8s-app: kube-scheduler
      name: kube-scheduler
      namespace: kuboard
    spec:
      endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        interval: 30s
        port: https-metrics
        scheme: https
        tlsConfig:
          insecureSkipVerify: true
      jobLabel: k8s-app
      namespaceSelector:
        matchNames:
        - kube-system
      selector:
        matchLabels:
          k8s-app: kube-scheduler
kind: KuboardAddonResource
lifecycleHandler:
  install:
  - resources.yaml
metadata:
  name: system-monitor.addons.kuboard.cn-2
  namespace: kuboard


---
apiVersion: kuboard.cn/v1
initResources: {}
k8sYamls:
  dashboard-definitions.yaml: |2

    ---
    apiVersion: v1
    data:
      k8s-resources-pod.json: |-
        {
            "annotations": {
                "list": [

                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 1,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [
                                {
                                    "alias": "requests",
                                    "color": "#F2495C",
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": true,
                                    "linewidth": 2,
                                    "stack": false
                                },
                                {
                                    "alias": "limits",
                                    "color": "#FF9830",
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": true,
                                    "linewidth": 2,
                                    "stack": false
                                }
                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\", cluster=\"$cluster\"}) by (container)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{container}}",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"})\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "requests",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"})\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "limits",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Usage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 2,
                            "legend": {
                                "avg": false,
                                "current": true,
                                "max": true,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(increase(container_cpu_cfs_throttled_periods_total{namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\", container!=\"\", cluster=\"$cluster\"}[5m])) by (container) /sum(increase(container_cpu_cfs_periods_total{namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\", container!=\"\", cluster=\"$cluster\"}[5m])) by (container)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{container}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [
                                {
                                    "colorMode": "critical",
                                    "fill": true,
                                    "line": true,
                                    "op": "gt",
                                    "value": 0.25,
                                    "yaxis": "left"
                                }
                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Throttling",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": 1,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Throttling",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 3,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "CPU Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "CPU Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Container",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "container",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Quota",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 4,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [
                                {
                                    "alias": "requests",
                                    "color": "#F2495C",
                                    "dashes": true,
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": false,
                                    "linewidth": 2,
                                    "stack": false
                                },
                                {
                                    "alias": "limits",
                                    "color": "#FF9830",
                                    "dashes": true,
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": false,
                                    "linewidth": 2,
                                    "stack": false
                                }
                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\", container!=\"\", image!=\"\"}) by (container)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{container}}",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"})\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "requests",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"})\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "limits",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Usage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 5,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Memory Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Memory Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Memory Usage (RSS)",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Usage (Cache)",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #G",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Usage (Swap)",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #H",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Container",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "container",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\", container!=\"\", image!=\"\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", image!=\"\"}) by (container) / sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container) / sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_rss{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_cache{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "G",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_swap{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "H",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Quota",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 6,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Receive Bandwidth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 7,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Transmit Bandwidth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 8,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_packets_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 9,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 10,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_packets_dropped_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets Dropped",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 11,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_dropped_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets Dropped",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "namespace",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "pod",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info{cluster=\"$cluster\", namespace=\"$namespace\"}, pod)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Compute Resources / Pod",
            "uid": "6581e46e4e5c7ba40a07646395ef7b23",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-k8s-resources-pod
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      k8s-resources-workload.json: |-
        {
            "annotations": {
                "list": [

                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 1,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Usage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 2,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "CPU Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "CPU Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Pod",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
                                    "pattern": "pod",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Quota",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 3,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Usage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 4,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Memory Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Memory Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Pod",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
                                    "pattern": "pod",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Quota",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 5,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Current Receive Bandwidth",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "Bps"
                                },
                                {
                                    "alias": "Current Transmit Bandwidth",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "Bps"
                                },
                                {
                                    "alias": "Rate of Received Packets",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Transmitted Packets",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Received Packets Dropped",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Transmitted Packets Dropped",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Pod",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
                                    "pattern": "pod",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Current Network Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 6,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Receive Bandwidth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 7,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Transmit Bandwidth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 8,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Container Bandwidth by Pod: Received",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 9,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Container Bandwidth by Pod: Transmitted",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 10,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 11,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 12,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets Dropped",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 13,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets Dropped",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "namespace",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "workload",
                        "options": [

                        ],
                        "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\"}, workload)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "type",
                        "options": [

                        ],
                        "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\"}, workload_type)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Compute Resources / Workload",
            "uid": "a164a7f0339f99e89cea5cb47e9be617",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-k8s-resources-workload
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      k8s-resources-workloads-namespace.json: |-
        {
            "annotations": {
                "list": [

                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 1,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [
                                {
                                    "alias": "quota - requests",
                                    "color": "#F2495C",
                                    "dashes": true,
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": false,
                                    "linewidth": 2,
                                    "stack": false
                                },
                                {
                                    "alias": "quota - limits",
                                    "color": "#FF9830",
                                    "dashes": true,
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": false,
                                    "linewidth": 2,
                                    "stack": false
                                }
                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{workload}} - {{workload_type}}",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.cpu\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "quota - requests",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.cpu\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "quota - limits",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Usage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 2,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Running Pods",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 0,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "CPU Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Workload",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2",
                                    "pattern": "workload",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Workload Type",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "workload_type",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}) by (workload, workload_type)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n  kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n  kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Quota",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 3,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [
                                {
                                    "alias": "quota - requests",
                                    "color": "#F2495C",
                                    "dashes": true,
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": false,
                                    "linewidth": 2,
                                    "stack": false
                                },
                                {
                                    "alias": "quota - limits",
                                    "color": "#FF9830",
                                    "dashes": true,
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": false,
                                    "linewidth": 2,
                                    "stack": false
                                }
                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{workload}} - {{workload_type}}",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.memory\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "quota - requests",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.memory\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "quota - limits",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Usage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 4,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Running Pods",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 0,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Memory Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Memory Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Workload",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2",
                                    "pattern": "workload",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Workload Type",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "workload_type",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}) by (workload, workload_type)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n  kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n  kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Quota",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 5,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Current Receive Bandwidth",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "Bps"
                                },
                                {
                                    "alias": "Current Transmit Bandwidth",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "Bps"
                                },
                                {
                                    "alias": "Rate of Received Packets",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Transmitted Packets",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Received Packets Dropped",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Transmitted Packets Dropped",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Workload",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down to pods",
                                    "linkUrl": "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$type",
                                    "pattern": "workload",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Workload Type",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "workload_type",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Current Network Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 6,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{workload}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Receive Bandwidth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 7,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{workload}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Transmit Bandwidth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 8,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{workload}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Container Bandwidth by Workload: Received",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 9,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{workload}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Container Bandwidth by Workload: Transmitted",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 10,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{workload}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 11,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{workload}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 12,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{workload}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets Dropped",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 13,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{workload}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets Dropped",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "deployment",
                            "value": "deployment"
                        },
                        "datasource": "$datasource",
                        "definition": "label_values(namespace_workload_pod:kube_pod_owner:relabel{namespace=~\"$namespace\", workload=~\".+\"}, workload_type)",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "type",
                        "options": [

                        ],
                        "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{namespace=~\"$namespace\", workload=~\".+\"}, workload_type)",
                        "refresh": 1,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "namespace",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Compute Resources / Namespace (Workloads)",
            "uid": "a87fb0d919ec0ea5f6543124e16c42a5",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-k8s-resources-workloads-namespace
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      kubelet.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [

                ]
            },
            "editable": false,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 2,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 2,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(up{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Up",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "min"
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 3,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 2,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(kubelet_running_pods{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Running Pods",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "min"
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 4,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 2,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(kubelet_running_containers{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Running Container",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "min"
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 5,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 2,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\", state=\"actual_state_of_world\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Actual Volume Count",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "min"
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 6,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 2,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",state=\"desired_state_of_world\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Desired Volume Count",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "min"
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 7,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 2,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(rate(kubelet_node_config_error{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Config Error Count",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "min"
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 8,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(kubelet_runtime_operations_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (operation_type, instance)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{operation_type}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Operation Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 9,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(kubelet_runtime_operations_errors_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (instance, operation_type)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{operation_type}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Operation Error Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 10,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(kubelet_runtime_operations_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (instance, operation_type, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{operation_type}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Operation duration 99th quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 11,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (instance)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} pod",
                                    "refId": "A"
                                },
                                {
                                    "expr": "sum(rate(kubelet_pod_worker_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (instance)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} worker",
                                    "refId": "B"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Pod Start Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 12,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (instance, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} pod",
                                    "refId": "A"
                                },
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (instance, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} worker",
                                    "refId": "B"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Pod Start Duration",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 13,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(storage_operation_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (instance, operation_name, volume_plugin)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Storage Operation Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 14,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(storage_operation_errors_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (instance, operation_name, volume_plugin)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Storage Operation Error Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 15,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(storage_operation_duration_seconds_bucket{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[5m])) by (instance, operation_name, volume_plugin, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Storage Operation Duration 99th quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 16,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(kubelet_cgroup_manager_duration_seconds_count{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[5m])) by (instance, operation_type)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{operation_type}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Cgroup manager operation rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 17,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(kubelet_cgroup_manager_duration_seconds_bucket{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[5m])) by (instance, operation_type, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{operation_type}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Cgroup manager 99th quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "description": "Pod lifecycle event generator",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 18,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(kubelet_pleg_relist_duration_seconds_count{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[5m])) by (instance)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "PLEG relist rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 19,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_interval_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (instance, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "PLEG relist interval",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 20,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])) by (instance, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "PLEG relist duration",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 21,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"2..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "2xx",
                                    "refId": "A"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"3..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "3xx",
                                    "refId": "B"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"4..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "4xx",
                                    "refId": "C"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"5..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "5xx",
                                    "refId": "D"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "RPC Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 22,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[5m])) by (instance, verb, url, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{verb}} {{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Request duration 99th quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 23,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "process_resident_memory_bytes{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 24,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 25,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "go_goroutines{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Goroutines",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": "cluster",
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "instance",
                        "options": [

                        ],
                        "query": "label_values(kubelet_runtime_operations_total{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\"}, instance)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Kubelet",
            "uid": "3138fa155d5915769fbded898ac09fd9",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-kubelet
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      namespace-by-pod.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [
                    {
                        "builtIn": 1,
                        "datasource": "-- Grafana --",
                        "enable": true,
                        "hide": true,
                        "iconColor": "rgba(0, 211, 255, 1)",
                        "name": "Annotations & Alerts",
                        "type": "dashboard"
                    }
                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "panels": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 0
                    },
                    "id": 2,
                    "panels": [

                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Current Bandwidth",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "cacheTimeout": null,
                    "colorBackground": false,
                    "colorValue": false,
                    "colors": [
                        "#299c46",
                        "rgba(237, 129, 40, 0.89)",
                        "#d44a3a"
                    ],
                    "datasource": "$datasource",
                    "decimals": 0,
                    "format": "time_series",
                    "gauge": {
                        "maxValue": 100,
                        "minValue": 0,
                        "show": false,
                        "thresholdLabels": false,
                        "thresholdMarkers": true
                    },
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 0,
                        "y": 1
                    },
                    "height": 9,
                    "id": 3,
                    "interval": null,
                    "links": [

                    ],
                    "mappingType": 1,
                    "mappingTypes": [
                        {
                            "name": "value to text",
                            "value": 1
                        },
                        {
                            "name": "range to text",
                            "value": 2
                        }
                    ],
                    "maxDataPoints": 100,
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "nullText": null,
                    "options": {
                        "fieldOptions": {
                            "calcs": [
                                "last"
                            ],
                            "defaults": {
                                "max": 10000000000,
                                "min": 0,
                                "title": "$namespace",
                                "unit": "Bps"
                            },
                            "mappings": [

                            ],
                            "override": {

                            },
                            "thresholds": [
                                {
                                    "color": "dark-green",
                                    "index": 0,
                                    "value": null
                                },
                                {
                                    "color": "dark-yellow",
                                    "index": 1,
                                    "value": 5000000000
                                },
                                {
                                    "color": "dark-red",
                                    "index": 2,
                                    "value": 7000000000
                                }
                            ],
                            "values": false
                        }
                    },
                    "postfix": "",
                    "postfixFontSize": "50%",
                    "prefix": "",
                    "prefixFontSize": "50%",
                    "rangeMaps": [
                        {
                            "from": "null",
                            "text": "N/A",
                            "to": "null"
                        }
                    ],
                    "span": 12,
                    "sparkline": {
                        "fillColor": "rgba(31, 118, 189, 0.18)",
                        "full": false,
                        "lineColor": "rgb(31, 120, 193)",
                        "show": false
                    },
                    "tableColumn": "",
                    "targets": [
                        {
                            "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution]))",
                            "format": "time_series",
                            "instant": null,
                            "intervalFactor": 1,
                            "legendFormat": "",
                            "refId": "A"
                        }
                    ],
                    "thresholds": "",
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Rate of Bytes Received",
                    "type": "gauge",
                    "valueFontSize": "80%",
                    "valueMaps": [
                        {
                            "op": "=",
                            "text": "N/A",
                            "value": "null"
                        }
                    ],
                    "valueName": "current"
                },
                {
                    "cacheTimeout": null,
                    "colorBackground": false,
                    "colorValue": false,
                    "colors": [
                        "#299c46",
                        "rgba(237, 129, 40, 0.89)",
                        "#d44a3a"
                    ],
                    "datasource": "$datasource",
                    "decimals": 0,
                    "format": "time_series",
                    "gauge": {
                        "maxValue": 100,
                        "minValue": 0,
                        "show": false,
                        "thresholdLabels": false,
                        "thresholdMarkers": true
                    },
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 12,
                        "y": 1
                    },
                    "height": 9,
                    "id": 4,
                    "interval": null,
                    "links": [

                    ],
                    "mappingType": 1,
                    "mappingTypes": [
                        {
                            "name": "value to text",
                            "value": 1
                        },
                        {
                            "name": "range to text",
                            "value": 2
                        }
                    ],
                    "maxDataPoints": 100,
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "nullText": null,
                    "options": {
                        "fieldOptions": {
                            "calcs": [
                                "last"
                            ],
                            "defaults": {
                                "max": 10000000000,
                                "min": 0,
                                "title": "$namespace",
                                "unit": "Bps"
                            },
                            "mappings": [

                            ],
                            "override": {

                            },
                            "thresholds": [
                                {
                                    "color": "dark-green",
                                    "index": 0,
                                    "value": null
                                },
                                {
                                    "color": "dark-yellow",
                                    "index": 1,
                                    "value": 5000000000
                                },
                                {
                                    "color": "dark-red",
                                    "index": 2,
                                    "value": 7000000000
                                }
                            ],
                            "values": false
                        }
                    },
                    "postfix": "",
                    "postfixFontSize": "50%",
                    "prefix": "",
                    "prefixFontSize": "50%",
                    "rangeMaps": [
                        {
                            "from": "null",
                            "text": "N/A",
                            "to": "null"
                        }
                    ],
                    "span": 12,
                    "sparkline": {
                        "fillColor": "rgba(31, 118, 189, 0.18)",
                        "full": false,
                        "lineColor": "rgb(31, 120, 193)",
                        "show": false
                    },
                    "tableColumn": "",
                    "targets": [
                        {
                            "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution]))",
                            "format": "time_series",
                            "instant": null,
                            "intervalFactor": 1,
                            "legendFormat": "",
                            "refId": "A"
                        }
                    ],
                    "thresholds": "",
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Rate of Bytes Transmitted",
                    "type": "gauge",
                    "valueFontSize": "80%",
                    "valueMaps": [
                        {
                            "op": "=",
                            "text": "N/A",
                            "value": "null"
                        }
                    ],
                    "valueName": "current"
                },
                {
                    "columns": [
                        {
                            "text": "Time",
                            "value": "Time"
                        },
                        {
                            "text": "Value #A",
                            "value": "Value #A"
                        },
                        {
                            "text": "Value #B",
                            "value": "Value #B"
                        },
                        {
                            "text": "Value #C",
                            "value": "Value #C"
                        },
                        {
                            "text": "Value #D",
                            "value": "Value #D"
                        },
                        {
                            "text": "Value #E",
                            "value": "Value #E"
                        },
                        {
                            "text": "Value #F",
                            "value": "Value #F"
                        },
                        {
                            "text": "pod",
                            "value": "pod"
                        }
                    ],
                    "datasource": "$datasource",
                    "fill": 1,
                    "fontSize": "100%",
                    "gridPos": {
                        "h": 9,
                        "w": 24,
                        "x": 0,
                        "y": 10
                    },
                    "id": 5,
                    "lines": true,
                    "linewidth": 1,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "null as zero",
                    "renderer": "flot",
                    "scroll": true,
                    "showHeader": true,
                    "sort": {
                        "col": 0,
                        "desc": false
                    },
                    "spaceLength": 10,
                    "span": 24,
                    "styles": [
                        {
                            "alias": "Time",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Time",
                            "thresholds": [

                            ],
                            "type": "hidden",
                            "unit": "short"
                        },
                        {
                            "alias": "Bandwidth Received",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "Bps"
                        },
                        {
                            "alias": "Bandwidth Transmitted",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #B",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "Bps"
                        },
                        {
                            "alias": "Rate of Received Packets",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #C",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Rate of Transmitted Packets",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #D",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Rate of Received Packets Dropped",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #E",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Rate of Transmitted Packets Dropped",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #F",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Pod",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": true,
                            "linkTooltip": "Drill down",
                            "linkUrl": "d/7a18067ce943a40ae25454675c19ff5c/kubernetes-networking-pod?orgId=1&refresh=30s&var-namespace=$namespace&var-pod=$__cell",
                            "pattern": "pod",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "short"
                        }
                    ],
                    "targets": [
                        {
                            "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "A",
                            "step": 10
                        },
                        {
                            "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "B",
                            "step": 10
                        },
                        {
                            "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "C",
                            "step": 10
                        },
                        {
                            "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "D",
                            "step": 10
                        },
                        {
                            "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "E",
                            "step": 10
                        },
                        {
                            "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "F",
                            "step": 10
                        }
                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Status",
                    "type": "table"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 19
                    },
                    "id": 6,
                    "panels": [

                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Bandwidth",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "aliasColors": {

                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 0,
                        "y": 20
                    },
                    "id": 7,
                    "legend": {
                        "alignAsTable": false,
                        "avg": false,
                        "current": false,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": false,
                        "show": true,
                        "sideWidth": null,
                        "total": false,
                        "values": false
                    },
                    "lines": true,
                    "linewidth": 2,
                    "links": [

                    ],
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 12,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Receive Bandwidth",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": [

                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "aliasColors": {

                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 12,
                        "y": 20
                    },
                    "id": 8,
                    "legend": {
                        "alignAsTable": false,
                        "avg": false,
                        "current": false,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": false,
                        "show": true,
                        "sideWidth": null,
                        "total": false,
                        "values": false
                    },
                    "lines": true,
                    "linewidth": 2,
                    "links": [

                    ],
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 12,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Transmit Bandwidth",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": [

                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 29
                    },
                    "id": 9,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 10,
                                "w": 12,
                                "x": 0,
                                "y": 30
                            },
                            "id": 10,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 10,
                                "w": 12,
                                "x": 12,
                                "y": 30
                            },
                            "id": 11,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Packets",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 30
                    },
                    "id": 12,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 10,
                                "w": 12,
                                "x": 0,
                                "y": 40
                            },
                            "id": 13,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets Dropped",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 10,
                                "w": 12,
                                "x": 12,
                                "y": 40
                            },
                            "id": 14,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets Dropped",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Errors",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "refresh": "10s",
            "rows": [

            ],
            "schemaVersion": 18,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": ".+",
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "kube-system",
                            "value": "kube-system"
                        },
                        "datasource": "$datasource",
                        "definition": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "namespace",
                        "options": [

                        ],
                        "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                        "refresh": 1,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "5m",
                            "value": "5m"
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "resolution",
                        "options": [
                            {
                                "selected": false,
                                "text": "30s",
                                "value": "30s"
                            },
                            {
                                "selected": true,
                                "text": "5m",
                                "value": "5m"
                            },
                            {
                                "selected": false,
                                "text": "1h",
                                "value": "1h"
                            }
                        ],
                        "query": "30s,5m,1h",
                        "refresh": 2,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "interval",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "5m",
                            "value": "5m"
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "interval",
                        "options": [
                            {
                                "selected": true,
                                "text": "4h",
                                "value": "4h"
                            }
                        ],
                        "query": "4h",
                        "refresh": 2,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "interval",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Networking / Namespace (Pods)",
            "uid": "8b7a8b326d7a6f1f04244066368c67af",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-namespace-by-pod
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      namespace-by-workload.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [
                    {
                        "builtIn": 1,
                        "datasource": "-- Grafana --",
                        "enable": true,
                        "hide": true,
                        "iconColor": "rgba(0, 211, 255, 1)",
                        "name": "Annotations & Alerts",
                        "type": "dashboard"
                    }
                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "panels": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 0
                    },
                    "id": 2,
                    "panels": [

                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Current Bandwidth",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "aliasColors": {

                    },
                    "bars": true,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 0,
                        "y": 1
                    },
                    "id": 3,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": true,
                        "show": true,
                        "sideWidth": null,
                        "sort": "current",
                        "sortDesc": true,
                        "total": false,
                        "values": true
                    },
                    "lines": false,
                    "linewidth": 1,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "null",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 24,
                    "stack": false,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{ workload }}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Rate of Bytes Received",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "series",
                        "name": null,
                        "show": false,
                        "values": [
                            "current"
                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "aliasColors": {

                    },
                    "bars": true,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 12,
                        "y": 1
                    },
                    "id": 4,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": true,
                        "show": true,
                        "sideWidth": null,
                        "sort": "current",
                        "sortDesc": true,
                        "total": false,
                        "values": true
                    },
                    "lines": false,
                    "linewidth": 1,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "null",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 24,
                    "stack": false,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{ workload }}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Rate of Bytes Transmitted",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "series",
                        "name": null,
                        "show": false,
                        "values": [
                            "current"
                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "columns": [
                        {
                            "text": "Time",
                            "value": "Time"
                        },
                        {
                            "text": "Value #A",
                            "value": "Value #A"
                        },
                        {
                            "text": "Value #B",
                            "value": "Value #B"
                        },
                        {
                            "text": "Value #C",
                            "value": "Value #C"
                        },
                        {
                            "text": "Value #D",
                            "value": "Value #D"
                        },
                        {
                            "text": "Value #E",
                            "value": "Value #E"
                        },
                        {
                            "text": "Value #F",
                            "value": "Value #F"
                        },
                        {
                            "text": "Value #G",
                            "value": "Value #G"
                        },
                        {
                            "text": "Value #H",
                            "value": "Value #H"
                        },
                        {
                            "text": "workload",
                            "value": "workload"
                        }
                    ],
                    "datasource": "$datasource",
                    "fill": 1,
                    "fontSize": "90%",
                    "gridPos": {
                        "h": 9,
                        "w": 24,
                        "x": 0,
                        "y": 10
                    },
                    "id": 5,
                    "lines": true,
                    "linewidth": 1,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "null as zero",
                    "renderer": "flot",
                    "scroll": true,
                    "showHeader": true,
                    "sort": {
                        "col": 0,
                        "desc": false
                    },
                    "spaceLength": 10,
                    "span": 24,
                    "styles": [
                        {
                            "alias": "Time",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Time",
                            "thresholds": [

                            ],
                            "type": "hidden",
                            "unit": "short"
                        },
                        {
                            "alias": "Current Bandwidth Received",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "Bps"
                        },
                        {
                            "alias": "Current Bandwidth Transmitted",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #B",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "Bps"
                        },
                        {
                            "alias": "Average Bandwidth Received",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #C",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "Bps"
                        },
                        {
                            "alias": "Average Bandwidth Transmitted",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #D",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "Bps"
                        },
                        {
                            "alias": "Rate of Received Packets",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #E",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Rate of Transmitted Packets",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #F",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Rate of Received Packets Dropped",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #G",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Rate of Transmitted Packets Dropped",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #H",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Workload",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": true,
                            "linkTooltip": "Drill down",
                            "linkUrl": "d/728bf77cc1166d2f3133bf25846876cc/kubernetes-networking-workload?orgId=1&refresh=30s&var-namespace=$namespace&var-type=$type&var-workload=$__cell",
                            "pattern": "workload",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "short"
                        }
                    ],
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "A",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "B",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "C",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "D",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "E",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "F",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "G",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "H",
                            "step": 10
                        }
                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Status",
                    "type": "table"
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 19
                    },
                    "id": 6,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": true,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 0,
                                "y": 20
                            },
                            "id": 7,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "sort": "current",
                                "sortDesc": true,
                                "total": false,
                                "values": true
                            },
                            "lines": false,
                            "linewidth": 1,
                            "links": [

                            ],
                            "minSpan": 24,
                            "nullPointMode": "null",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{ workload }}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Rate of Bytes Received",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "series",
                                "name": null,
                                "show": false,
                                "values": [
                                    "current"
                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": true,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 12,
                                "y": 20
                            },
                            "id": 8,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "sort": "current",
                                "sortDesc": true,
                                "total": false,
                                "values": true
                            },
                            "lines": false,
                            "linewidth": 1,
                            "links": [

                            ],
                            "minSpan": 24,
                            "nullPointMode": "null",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{ workload }}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Rate of Bytes Transmitted",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "series",
                                "name": null,
                                "show": false,
                                "values": [
                                    "current"
                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Average Bandwidth",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 29
                    },
                    "id": 9,
                    "panels": [

                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Bandwidth HIstory",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "aliasColors": {

                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 0,
                        "y": 38
                    },
                    "id": 10,
                    "legend": {
                        "alignAsTable": false,
                        "avg": false,
                        "current": false,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": false,
                        "show": true,
                        "sideWidth": null,
                        "total": false,
                        "values": false
                    },
                    "lines": true,
                    "linewidth": 2,
                    "links": [

                    ],
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 12,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{workload}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Receive Bandwidth",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": [

                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "aliasColors": {

                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 12,
                        "y": 38
                    },
                    "id": 11,
                    "legend": {
                        "alignAsTable": false,
                        "avg": false,
                        "current": false,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": false,
                        "show": true,
                        "sideWidth": null,
                        "total": false,
                        "values": false
                    },
                    "lines": true,
                    "linewidth": 2,
                    "links": [

                    ],
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 12,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{workload}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Transmit Bandwidth",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": [

                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 39
                    },
                    "id": 12,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 0,
                                "y": 40
                            },
                            "id": 13,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{workload}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 12,
                                "y": 40
                            },
                            "id": 14,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{workload}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Packets",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 40
                    },
                    "id": 15,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 0,
                                "y": 41
                            },
                            "id": 16,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{workload}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets Dropped",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 12,
                                "y": 41
                            },
                            "id": 17,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{workload}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets Dropped",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Errors",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "refresh": "10s",
            "rows": [

            ],
            "schemaVersion": 18,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "kube-system",
                            "value": "kube-system"
                        },
                        "datasource": "$datasource",
                        "definition": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "namespace",
                        "options": [

                        ],
                        "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                        "refresh": 1,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "deployment",
                            "value": "deployment"
                        },
                        "datasource": "$datasource",
                        "definition": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\"}, workload_type)",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "type",
                        "options": [

                        ],
                        "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\".+\"}, workload_type)",
                        "refresh": 1,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "5m",
                            "value": "5m"
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "resolution",
                        "options": [
                            {
                                "selected": false,
                                "text": "30s",
                                "value": "30s"
                            },
                            {
                                "selected": true,
                                "text": "5m",
                                "value": "5m"
                            },
                            {
                                "selected": false,
                                "text": "1h",
                                "value": "1h"
                            }
                        ],
                        "query": "30s,5m,1h",
                        "refresh": 2,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "interval",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "5m",
                            "value": "5m"
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "interval",
                        "options": [
                            {
                                "selected": true,
                                "text": "4h",
                                "value": "4h"
                            }
                        ],
                        "query": "4h",
                        "refresh": 2,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "interval",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Networking / Namespace (Workload)",
            "uid": "bbb2a765a623ae38130206c7d94a160f",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-namespace-by-workload
      namespace: kuboard
kind: KuboardAddonResource
lifecycleHandler:
  install:
  - dashboard-definitions.yaml
metadata:
  name: system-monitor.addons.kuboard.cn-4
  namespace: kuboard

---
apiVersion: kuboard.cn/v1
initResources: {}
k8sYamls:
  dashboard-definitions.yaml: |2

    ---
    apiVersion: v1
    data:
      apiserver.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [

                ]
            },
            "editable": false,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "panels": [
                {
                    "content": "The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only.",
                    "datasource": null,
                    "description": "The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only.",
                    "gridPos": {
                        "h": 2,
                        "w": 24,
                        "x": 0,
                        "y": 0
                    },
                    "id": 2,
                    "mode": "markdown",
                    "span": 12,
                    "title": "Notice",
                    "type": "text"
                }
            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "decimals": 3,
                            "description": "How many percent of requests (both read and write) in 30 days have been answered successfully and fast enough?",
                            "format": "percentunit",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 3,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 4,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "apiserver_request:availability30d{verb=\"all\", cluster=\"$cluster\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Availability (30d) > 99.000%",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "avg"
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "decimals": 3,
                            "description": "How much error budget is left looking at our 0.990% availability guarantees?",
                            "fill": 10,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 4,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 8,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "100 * (apiserver_request:availability30d{verb=\"all\", cluster=\"$cluster\"} - 0.990000)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "errorbudget",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "ErrorBudget (30d) > 99.000%",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "decimals": 3,
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "decimals": 3,
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "decimals": 3,
                            "description": "How many percent of read requests (LIST,GET) in 30 days have been answered successfully and fast enough?",
                            "format": "percentunit",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 5,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 3,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "apiserver_request:availability30d{verb=\"read\", cluster=\"$cluster\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Read Availability (30d)",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "avg"
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "description": "How many read requests (LIST,GET) per second do the apiservers get by code?",
                            "fill": 10,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 6,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [
                                {
                                    "alias": "/2../i",
                                    "color": "#56A64B"
                                },
                                {
                                    "alias": "/3../i",
                                    "color": "#F2CC0C"
                                },
                                {
                                    "alias": "/4../i",
                                    "color": "#3274D9"
                                },
                                {
                                    "alias": "/5../i",
                                    "color": "#E02F44"
                                }
                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\"read\", cluster=\"$cluster\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{ code }}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Read SLI - Requests",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "reqps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "reqps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "description": "How many percent of read requests (LIST,GET) per second are returned with errors (5xx)?",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 7,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"read\",code=~\"5..\", cluster=\"$cluster\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"read\", cluster=\"$cluster\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{ resource }}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Read SLI - Errors",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "description": "How many seconds is the 99th percentile for reading (LIST|GET) a given resource?",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 8,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile{verb=\"read\", cluster=\"$cluster\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{ resource }}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Read SLI - Duration",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "decimals": 3,
                            "description": "How many percent of write requests (POST|PUT|PATCH|DELETE) in 30 days have been answered successfully and fast enough?",
                            "format": "percentunit",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 9,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 3,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "apiserver_request:availability30d{verb=\"write\", cluster=\"$cluster\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Write Availability (30d)",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "avg"
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "description": "How many write requests (POST|PUT|PATCH|DELETE) per second do the apiservers get by code?",
                            "fill": 10,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 10,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [
                                {
                                    "alias": "/2../i",
                                    "color": "#56A64B"
                                },
                                {
                                    "alias": "/3../i",
                                    "color": "#F2CC0C"
                                },
                                {
                                    "alias": "/4../i",
                                    "color": "#3274D9"
                                },
                                {
                                    "alias": "/5../i",
                                    "color": "#E02F44"
                                }
                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\"write\", cluster=\"$cluster\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{ code }}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Write SLI - Requests",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "reqps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "reqps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "description": "How many percent of write requests (POST|PUT|PATCH|DELETE) per second are returned with errors (5xx)?",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 11,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"write\",code=~\"5..\", cluster=\"$cluster\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"write\", cluster=\"$cluster\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{ resource }}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Write SLI - Errors",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "description": "How many seconds is the 99th percentile for writing (POST|PUT|PATCH|DELETE) a given resource?",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 12,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile{verb=\"write\", cluster=\"$cluster\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{ resource }}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Write SLI - Duration",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 13,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": false,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(workqueue_adds_total{job=\"apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[5m])) by (instance, name)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{name}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Work Queue Add Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 14,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": false,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(workqueue_depth{job=\"apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[5m])) by (instance, name)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{name}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Work Queue Depth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 15,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job=\"apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[5m])) by (instance, name, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{name}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Work Queue Latency",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 16,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "process_resident_memory_bytes{job=\"apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 17,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(process_cpu_seconds_total{job=\"apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 18,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "go_goroutines{job=\"apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Goroutines",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": "cluster",
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(apiserver_request_total, cluster)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "instance",
                        "options": [

                        ],
                        "query": "label_values(apiserver_request_total{job=\"apiserver\", cluster=\"$cluster\"}, instance)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / API server",
            "uid": "09ec8aa1e996d6ffcd6817bbaff4db1b",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-apiserver
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      cluster-total.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [
                    {
                        "builtIn": 1,
                        "datasource": "-- Grafana --",
                        "enable": true,
                        "hide": true,
                        "iconColor": "rgba(0, 211, 255, 1)",
                        "name": "Annotations & Alerts",
                        "type": "dashboard"
                    }
                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "panels": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 0
                    },
                    "id": 2,
                    "panels": [

                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Current Bandwidth",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "aliasColors": {

                    },
                    "bars": true,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 0,
                        "y": 1
                    },
                    "id": 3,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": true,
                        "show": true,
                        "sideWidth": null,
                        "sort": "current",
                        "sortDesc": true,
                        "total": false,
                        "values": true
                    },
                    "lines": false,
                    "linewidth": 1,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "null",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 24,
                    "stack": false,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{namespace}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Rate of Bytes Received",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "series",
                        "name": null,
                        "show": false,
                        "values": [
                            "current"
                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "aliasColors": {

                    },
                    "bars": true,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 12,
                        "y": 1
                    },
                    "id": 4,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": true,
                        "show": true,
                        "sideWidth": null,
                        "sort": "current",
                        "sortDesc": true,
                        "total": false,
                        "values": true
                    },
                    "lines": false,
                    "linewidth": 1,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "null",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 24,
                    "stack": false,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{namespace}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Rate of Bytes Transmitted",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "series",
                        "name": null,
                        "show": false,
                        "values": [
                            "current"
                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "columns": [
                        {
                            "text": "Time",
                            "value": "Time"
                        },
                        {
                            "text": "Value #A",
                            "value": "Value #A"
                        },
                        {
                            "text": "Value #B",
                            "value": "Value #B"
                        },
                        {
                            "text": "Value #C",
                            "value": "Value #C"
                        },
                        {
                            "text": "Value #D",
                            "value": "Value #D"
                        },
                        {
                            "text": "Value #E",
                            "value": "Value #E"
                        },
                        {
                            "text": "Value #F",
                            "value": "Value #F"
                        },
                        {
                            "text": "Value #G",
                            "value": "Value #G"
                        },
                        {
                            "text": "Value #H",
                            "value": "Value #H"
                        },
                        {
                            "text": "namespace",
                            "value": "namespace"
                        }
                    ],
                    "datasource": "$datasource",
                    "fill": 1,
                    "fontSize": "90%",
                    "gridPos": {
                        "h": 9,
                        "w": 24,
                        "x": 0,
                        "y": 10
                    },
                    "id": 5,
                    "lines": true,
                    "linewidth": 1,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "null as zero",
                    "renderer": "flot",
                    "scroll": true,
                    "showHeader": true,
                    "sort": {
                        "col": 0,
                        "desc": false
                    },
                    "spaceLength": 10,
                    "span": 24,
                    "styles": [
                        {
                            "alias": "Time",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Time",
                            "thresholds": [

                            ],
                            "type": "hidden",
                            "unit": "short"
                        },
                        {
                            "alias": "Current Bandwidth Received",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "Bps"
                        },
                        {
                            "alias": "Current Bandwidth Transmitted",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #B",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "Bps"
                        },
                        {
                            "alias": "Average Bandwidth Received",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #C",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "Bps"
                        },
                        {
                            "alias": "Average Bandwidth Transmitted",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #D",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "Bps"
                        },
                        {
                            "alias": "Rate of Received Packets",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #E",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Rate of Transmitted Packets",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #F",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Rate of Received Packets Dropped",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #G",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Rate of Transmitted Packets Dropped",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #H",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "pps"
                        },
                        {
                            "alias": "Namespace",
                            "colorMode": null,
                            "colors": [

                            ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": true,
                            "linkTooltip": "Drill down",
                            "linkUrl": "d/8b7a8b326d7a6f1f04244066368c67af/kubernetes-networking-namespace-pods?orgId=1&refresh=30s&var-namespace=$__cell",
                            "pattern": "namespace",
                            "thresholds": [

                            ],
                            "type": "number",
                            "unit": "short"
                        }
                    ],
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "A",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "B",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "C",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "D",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "E",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "F",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "G",
                            "step": 10
                        },
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "table",
                            "instant": true,
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "H",
                            "step": 10
                        }
                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Status",
                    "type": "table"
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 10
                    },
                    "id": 6,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": true,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 0,
                                "y": 11
                            },
                            "id": 7,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "sort": "current",
                                "sortDesc": true,
                                "total": false,
                                "values": true
                            },
                            "lines": false,
                            "linewidth": 1,
                            "links": [

                            ],
                            "minSpan": 24,
                            "nullPointMode": "null",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{namespace}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Rate of Bytes Received",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "series",
                                "name": null,
                                "show": false,
                                "values": [
                                    "current"
                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": true,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 12,
                                "y": 11
                            },
                            "id": 8,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "sort": "current",
                                "sortDesc": true,
                                "total": false,
                                "values": true
                            },
                            "lines": false,
                            "linewidth": 1,
                            "links": [

                            ],
                            "minSpan": 24,
                            "nullPointMode": "null",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{namespace}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Rate of Bytes Transmitted",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "series",
                                "name": null,
                                "show": false,
                                "values": [
                                    "current"
                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Average Bandwidth",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 11
                    },
                    "id": 9,
                    "panels": [

                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Bandwidth History",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "aliasColors": {

                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 24,
                        "x": 0,
                        "y": 12
                    },
                    "id": 10,
                    "legend": {
                        "alignAsTable": true,
                        "avg": true,
                        "current": true,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "sideWidth": null,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 2,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "connected",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 24,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{namespace}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Receive Bandwidth",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": [

                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "aliasColors": {

                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 24,
                        "x": 0,
                        "y": 21
                    },
                    "id": 11,
                    "legend": {
                        "alignAsTable": true,
                        "avg": true,
                        "current": true,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "sideWidth": null,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 2,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "connected",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 24,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{namespace}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Transmit Bandwidth",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": [

                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 30
                    },
                    "id": 12,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 24,
                                "x": 0,
                                "y": 31
                            },
                            "id": 13,
                            "legend": {
                                "alignAsTable": true,
                                "avg": true,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": true,
                                "min": true,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 24,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{namespace}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 24,
                                "x": 0,
                                "y": 40
                            },
                            "id": 14,
                            "legend": {
                                "alignAsTable": true,
                                "avg": true,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": true,
                                "min": true,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 24,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{namespace}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Packets",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 31
                    },
                    "id": 15,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 24,
                                "x": 0,
                                "y": 50
                            },
                            "id": 16,
                            "legend": {
                                "alignAsTable": true,
                                "avg": true,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": true,
                                "min": true,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 24,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{namespace}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets Dropped",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 24,
                                "x": 0,
                                "y": 59
                            },
                            "id": 17,
                            "legend": {
                                "alignAsTable": true,
                                "avg": true,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": true,
                                "min": true,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 24,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{namespace}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets Dropped",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 24,
                                "x": 0,
                                "y": 59
                            },
                            "id": 18,
                            "legend": {
                                "alignAsTable": true,
                                "avg": true,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": true,
                                "min": true,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [
                                {
                                    "targetBlank": true,
                                    "title": "What is TCP Retransmit?",
                                    "url": "https://accedian.com/enterprises/blog/network-packet-loss-retransmissions-and-duplicate-acknowledgements/"
                                }
                            ],
                            "minSpan": 24,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(rate(node_netstat_Tcp_RetransSegs{cluster=\"$cluster\"}[$interval:$resolution]) / rate(node_netstat_Tcp_OutSegs{cluster=\"$cluster\"}[$interval:$resolution])) by (instance))",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of TCP Retransmits out of all sent segments",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 24,
                                "x": 0,
                                "y": 59
                            },
                            "id": 19,
                            "legend": {
                                "alignAsTable": true,
                                "avg": true,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": true,
                                "min": true,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [
                                {
                                    "targetBlank": true,
                                    "title": "Why monitor SYN retransmits?",
                                    "url": "https://github.com/prometheus/node_exporter/issues/1023#issuecomment-408128365"
                                }
                            ],
                            "minSpan": 24,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(rate(node_netstat_TcpExt_TCPSynRetrans{cluster=\"$cluster\"}[$interval:$resolution]) / rate(node_netstat_Tcp_RetransSegs{cluster=\"$cluster\"}[$interval:$resolution])) by (instance))",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of TCP SYN Retransmits out of all retransmits",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Errors",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "refresh": "10s",
            "rows": [

            ],
            "schemaVersion": 18,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "5m",
                            "value": "5m"
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "resolution",
                        "options": [
                            {
                                "selected": false,
                                "text": "30s",
                                "value": "30s"
                            },
                            {
                                "selected": true,
                                "text": "5m",
                                "value": "5m"
                            },
                            {
                                "selected": false,
                                "text": "1h",
                                "value": "1h"
                            }
                        ],
                        "query": "30s,5m,1h",
                        "refresh": 2,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "interval",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "5m",
                            "value": "5m"
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "interval",
                        "options": [
                            {
                                "selected": true,
                                "text": "4h",
                                "value": "4h"
                            }
                        ],
                        "query": "4h",
                        "refresh": 2,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "interval",
                        "useTags": false
                    },
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Networking / Cluster",
            "uid": "ff635a025bcfea7bc3dd4f508990a3e9",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-cluster-total
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      controller-manager.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [

                ]
            },
            "editable": false,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 2,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 2,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(up{job=\"kube-controller-manager\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Up",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "min"
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 3,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 10,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(workqueue_adds_total{job=\"kube-controller-manager\", instance=~\"$instance\"}[5m])) by (instance, name)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{name}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Work Queue Add Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 4,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(workqueue_depth{job=\"kube-controller-manager\", instance=~\"$instance\"}[5m])) by (instance, name)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{name}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Work Queue Depth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 5,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job=\"kube-controller-manager\", instance=~\"$instance\"}[5m])) by (instance, name, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{name}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Work Queue Latency",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 6,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"2..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "2xx",
                                    "refId": "A"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"3..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "3xx",
                                    "refId": "B"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"4..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "4xx",
                                    "refId": "C"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"5..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "5xx",
                                    "refId": "D"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Kube API Request Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 7,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 8,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"POST\"}[5m])) by (verb, url, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{verb}} {{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Post Request Latency 99th Quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 8,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"GET\"}[5m])) by (verb, url, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{verb}} {{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Get Request Latency 99th Quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 9,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "process_resident_memory_bytes{job=\"kube-controller-manager\",instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 10,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(process_cpu_seconds_total{job=\"kube-controller-manager\",instance=~\"$instance\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 11,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "go_goroutines{job=\"kube-controller-manager\",instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Goroutines",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "instance",
                        "options": [

                        ],
                        "query": "label_values(process_cpu_seconds_total{job=\"kube-controller-manager\"}, instance)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Controller Manager",
            "uid": "72e0e05bef5099e5f049b05fdc429ed4",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-controller-manager
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      k8s-resources-cluster.json: |-
        {
            "annotations": {
                "list": [

                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "height": "100px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "format": "percentunit",
                            "id": 1,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 2,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "1 - avg(rate(node_cpu_seconds_total{mode=\"idle\", cluster=\"$cluster\"}[$__rate_interval]))",
                                    "format": "time_series",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "70,80",
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Utilisation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "singlestat",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "format": "percentunit",
                            "id": 2,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 2,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable_cpu_cores{cluster=\"$cluster\"})",
                                    "format": "time_series",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "70,80",
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Requests Commitment",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "singlestat",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "format": "percentunit",
                            "id": 3,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 2,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable_cpu_cores{cluster=\"$cluster\"})",
                                    "format": "time_series",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "70,80",
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Limits Commitment",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "singlestat",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "format": "percentunit",
                            "id": 4,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 2,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "1 - sum(:node_memory_MemAvailable_bytes:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable_memory_bytes{cluster=\"$cluster\"})",
                                    "format": "time_series",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "70,80",
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Utilisation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "singlestat",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "format": "percentunit",
                            "id": 5,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 2,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable_memory_bytes{cluster=\"$cluster\"})",
                                    "format": "time_series",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "70,80",
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Requests Commitment",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "singlestat",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "format": "percentunit",
                            "id": 6,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 2,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable_memory_bytes{cluster=\"$cluster\"})",
                                    "format": "time_series",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "70,80",
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Limits Commitment",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "singlestat",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Headlines",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 7,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{namespace}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 8,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Pods",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 0,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down to pods",
                                    "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Workloads",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 0,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down to workloads",
                                    "linkUrl": "./d/a87fb0d919ec0ea5f6543124e16c42a5/k8s-resources-workloads-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "CPU Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #G",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Namespace",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down to pods",
                                    "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell",
                                    "pattern": "namespace",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(kube_pod_owner{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "G",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Quota",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 9,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(container_memory_rss{cluster=\"$cluster\", container!=\"\"}) by (namespace)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{namespace}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Usage (w/o cache)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 10,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Pods",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 0,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down to pods",
                                    "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Workloads",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 0,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down to workloads",
                                    "linkUrl": "./d/a87fb0d919ec0ea5f6543124e16c42a5/k8s-resources-workloads-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Memory Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Memory Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #G",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Namespace",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down to pods",
                                    "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell",
                                    "pattern": "namespace",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(kube_pod_owner{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_rss{cluster=\"$cluster\", container!=\"\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_rss{cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_rss{cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "G",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Requests by Namespace",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Requests",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 11,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Current Receive Bandwidth",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "Bps"
                                },
                                {
                                    "alias": "Current Transmit Bandwidth",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "Bps"
                                },
                                {
                                    "alias": "Rate of Received Packets",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Transmitted Packets",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Received Packets Dropped",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Transmitted Packets Dropped",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Namespace",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down to pods",
                                    "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell",
                                    "pattern": "namespace",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Current Network Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 12,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{namespace}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Receive Bandwidth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 13,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{namespace}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Transmit Bandwidth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 14,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{namespace}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Container Bandwidth by Namespace: Received",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 15,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{namespace}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Container Bandwidth by Namespace: Transmitted",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 16,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{namespace}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 17,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{namespace}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 18,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{namespace}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets Dropped",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 19,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{namespace}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets Dropped",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(node_cpu_seconds_total, cluster)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Compute Resources / Cluster",
            "uid": "efa86fd1d0c121a26444b636a3f509a8",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-k8s-resources-cluster
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      k8s-resources-namespace.json: |-
        {
            "annotations": {
                "list": [

                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "height": "100px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "format": "percentunit",
                            "id": 1,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"})",
                                    "format": "time_series",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "70,80",
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Utilisation (from requests)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "singlestat",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "format": "percentunit",
                            "id": 2,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"})",
                                    "format": "time_series",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "70,80",
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Utilisation (from limits)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "singlestat",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "format": "percentunit",
                            "id": 3,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) / sum(kube_pod_container_resource_requests_memory_bytes{namespace=\"$namespace\"})",
                                    "format": "time_series",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "70,80",
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Utilization (from requests)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "singlestat",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "format": "percentunit",
                            "id": 4,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) / sum(kube_pod_container_resource_limits_memory_bytes{namespace=\"$namespace\"})",
                                    "format": "time_series",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "70,80",
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Utilisation (from limits)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "singlestat",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Headlines",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 5,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [
                                {
                                    "alias": "quota - requests",
                                    "color": "#F2495C",
                                    "dashes": true,
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": false,
                                    "linewidth": 2,
                                    "stack": false
                                },
                                {
                                    "alias": "quota - limits",
                                    "color": "#FF9830",
                                    "dashes": true,
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": false,
                                    "linewidth": 2,
                                    "stack": false
                                }
                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.cpu\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "quota - requests",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.cpu\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "quota - limits",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Usage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 6,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "CPU Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "CPU Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Pod",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
                                    "pattern": "pod",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Quota",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 7,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [
                                {
                                    "alias": "quota - requests",
                                    "color": "#F2495C",
                                    "dashes": true,
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": false,
                                    "linewidth": 2,
                                    "stack": false
                                },
                                {
                                    "alias": "quota - limits",
                                    "color": "#FF9830",
                                    "dashes": true,
                                    "fill": 0,
                                    "hideTooltip": true,
                                    "legend": false,
                                    "linewidth": 2,
                                    "stack": false
                                }
                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.memory\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "quota - requests",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.memory\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "quota - limits",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Usage (w/o cache)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Usage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 8,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Memory Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Memory Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Memory Usage (RSS)",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Usage (Cache)",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #G",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Usage (Swap)",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #H",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Pod",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
                                    "pattern": "pod",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod) / sum(kube_pod_container_resource_requests_memory_bytes{namespace=\"$namespace\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod) / sum(kube_pod_container_resource_limits_memory_bytes{namespace=\"$namespace\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_rss{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_cache{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "G",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(container_memory_swap{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "H",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Quota",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 9,
                            "interval": "1m",
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Current Receive Bandwidth",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "Bps"
                                },
                                {
                                    "alias": "Current Transmit Bandwidth",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "Bps"
                                },
                                {
                                    "alias": "Rate of Received Packets",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Transmitted Packets",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Received Packets Dropped",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Rate of Transmitted Packets Dropped",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "pps"
                                },
                                {
                                    "alias": "Pod",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": true,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down to pods",
                                    "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
                                    "pattern": "pod",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Current Network Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 10,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Receive Bandwidth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 11,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Transmit Bandwidth",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 12,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 13,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 14,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets Dropped",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 15,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets Dropped",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "namespace",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Compute Resources / Namespace (Pods)",
            "uid": "85a562078cdf77779eaa1add43ccec1e",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-k8s-resources-namespace
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      k8s-resources-node.json: |-
        {
            "annotations": {
                "list": [

                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 1,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Usage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 2,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "CPU Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "CPU Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "CPU Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Pod",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "pod",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", node=~\"$node\"}) by (pod) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", node=~\"$node\"}) by (pod) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU Quota",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 3,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\", container!=\"\"}) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{pod}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Usage (w/o cache)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Usage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 4,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Memory Usage",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Requests %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #C",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Memory Limits",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #D",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Limits %",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #E",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "percentunit"
                                },
                                {
                                    "alias": "Memory Usage (RSS)",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #F",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Usage (Cache)",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #G",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Memory Usage (Swap)",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #H",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "bytes"
                                },
                                {
                                    "alias": "Pod",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "pod",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod) / sum(kube_pod_container_resource_requests_memory_bytes{node=~\"$node\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "C",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "D",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod) / sum(kube_pod_container_resource_limits_memory_bytes{node=~\"$node\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "E",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_memory_rss{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "F",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_memory_cache{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "G",
                                    "step": 10
                                },
                                {
                                    "expr": "sum(node_namespace_pod_container:container_memory_swap{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "H",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Quota",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory Quota",
                    "titleSize": "h6"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": true,
                        "name": "node",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, node)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Compute Resources / Node (Pods)",
            "uid": "200ac8fdbfbb74b39aff88118e4d1c2c",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-k8s-resources-node
      namespace: kuboard
kind: KuboardAddonResource
lifecycleHandler:
  install:
  - dashboard-definitions.yaml
metadata:
  name: system-monitor.addons.kuboard.cn-3
  namespace: kuboard

---
apiVersion: kuboard.cn/v1
initResources: {}
k8sYamls:
  dashboard-definitions.yaml: |2

    ---
    apiVersion: v1
    data:
      node-cluster-rsrc-use.json: |-
        {
            "annotations": {
                "list": [

                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 1,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(\n  instance:node_cpu_utilisation:rate1m{job=\"node-exporter\"}\n*\n  instance:node_num_cpu:sum{job=\"node-exporter\"}\n)\n/ scalar(sum(instance:node_num_cpu:sum{job=\"node-exporter\"}))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Utilisation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": 1,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 2,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_load1_per_cpu:ratio{job=\"node-exporter\"}\n/ scalar(count(instance:node_load1_per_cpu:ratio{job=\"node-exporter\"}))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Saturation (load1 per CPU)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": 1,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 3,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_memory_utilisation:ratio{job=\"node-exporter\"}\n/ scalar(count(instance:node_memory_utilisation:ratio{job=\"node-exporter\"}))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Utilisation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": 1,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 4,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_vmstat_pgmajfault:rate1m{job=\"node-exporter\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Saturation (Major Page Faults)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "rps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 5,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [
                                {
                                    "alias": "/ Receive/",
                                    "stack": "A"
                                },
                                {
                                    "alias": "/ Transmit/",
                                    "stack": "B",
                                    "transform": "negative-Y"
                                }
                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_network_receive_bytes_excluding_lo:rate1m{job=\"node-exporter\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} Receive",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                },
                                {
                                    "expr": "instance:node_network_transmit_bytes_excluding_lo:rate1m{job=\"node-exporter\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} Transmit",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Net Utilisation (Bytes Receive/Transmit)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 6,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [
                                {
                                    "alias": "/ Receive/",
                                    "stack": "A"
                                },
                                {
                                    "alias": "/ Transmit/",
                                    "stack": "B",
                                    "transform": "negative-Y"
                                }
                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_network_receive_drop_excluding_lo:rate1m{job=\"node-exporter\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} Receive",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                },
                                {
                                    "expr": "instance:node_network_transmit_drop_excluding_lo:rate1m{job=\"node-exporter\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} Transmit",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Net Saturation (Drops Receive/Transmit)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "rps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Network",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 7,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance_device:node_disk_io_time_seconds:rate1m{job=\"node-exporter\"}\n/ scalar(count(instance_device:node_disk_io_time_seconds:rate1m{job=\"node-exporter\"}))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{device}}",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Disk IO Utilisation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": 1,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 8,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance_device:node_disk_io_time_weighted_seconds:rate1m{job=\"node-exporter\"}\n/ scalar(count(instance_device:node_disk_io_time_weighted_seconds:rate1m{job=\"node-exporter\"}))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} {{device}}",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Disk IO Saturation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": 1,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Disk IO",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 9,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum without (device) (\n  max without (fstype, mountpoint) (\n    node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\"} - node_filesystem_avail_bytes{job=\"node-exporter\", fstype!=\"\"}\n  )\n) \n/ scalar(sum(max without (fstype, mountpoint) (node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\"})))\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "legendLink": "/dashboard/file/node-rsrc-use.json",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Disk Space Utilisation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": 1,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Disk Space",
                    "titleSize": "h6"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [

            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "USE Method / Cluster",
            "uid": "3e97d1d02672cdd0861f4c97c64f89b2",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-node-cluster-rsrc-use
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      node-rsrc-use.json: |-
        {
            "annotations": {
                "list": [

                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 1,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": false,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_cpu_utilisation:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "Utilisation",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Utilisation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 2,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": false,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_load1_per_cpu:ratio{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "Saturation",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Saturation (Load1 per CPU)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "CPU",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 3,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_memory_utilisation:ratio{job=\"node-exporter\", job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "Memory",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Utilisation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 4,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": false,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_vmstat_pgmajfault:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "Major page faults",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Saturation (Major Page Faults)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Memory",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 5,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [
                                {
                                    "alias": "/Receive/",
                                    "stack": "A"
                                },
                                {
                                    "alias": "/Transmit/",
                                    "stack": "B",
                                    "transform": "negative-Y"
                                }
                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_network_receive_bytes_excluding_lo:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "Receive",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "instance:node_network_transmit_bytes_excluding_lo:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "Transmit",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Net Utilisation (Bytes Receive/Transmit)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 6,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [
                                {
                                    "alias": "/Receive/",
                                    "stack": "A"
                                },
                                {
                                    "alias": "/Transmit/",
                                    "stack": "B",
                                    "transform": "negative-Y"
                                }
                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance:node_network_receive_drop_excluding_lo:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "Receive drops",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "instance:node_network_transmit_drop_excluding_lo:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "Transmit drops",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Net Saturation (Drops Receive/Transmit)",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "rps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Net",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 7,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance_device:node_disk_io_time_seconds:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{device}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Disk IO Utilisation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 8,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "instance_device:node_disk_io_time_weighted_seconds:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{device}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Disk IO Saturation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Disk IO",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 9,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": false,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "1 -\n(\n  max without (mountpoint, fstype) (node_filesystem_avail_bytes{job=\"node-exporter\", fstype!=\"\", instance=\"$instance\"})\n/\n  max without (mountpoint, fstype) (node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\", instance=\"$instance\"})\n)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{device}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Disk Space Utilisation",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Disk Space",
                    "titleSize": "h6"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [

            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": "prod",
                            "value": "prod"
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": "instance",
                        "multi": false,
                        "name": "instance",
                        "options": [

                        ],
                        "query": "label_values(up{job=\"node-exporter\"}, instance)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 2,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "USE Method / Node",
            "uid": "fac67cfbe174d3ef53eb473d73d9212f",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-node-rsrc-use
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      nodes.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [

                ]
            },
            "editable": false,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "refresh": "",
            "rows": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 2,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(\n  (1 - rate(node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\", instance=\"$instance\"}[$__interval]))\n/ ignoring(cpu) group_left\n  count without (cpu)( node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\", instance=\"$instance\"})\n)\n",
                                    "format": "time_series",
                                    "interval": "1m",
                                    "intervalFactor": 5,
                                    "legendFormat": "{{cpu}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": 1,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "percentunit",
                                    "label": null,
                                    "logBase": 1,
                                    "max": 1,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 0,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 3,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "node_load1{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "1m load average",
                                    "refId": "A"
                                },
                                {
                                    "expr": "node_load5{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "5m load average",
                                    "refId": "B"
                                },
                                {
                                    "expr": "node_load15{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "15m load average",
                                    "refId": "C"
                                },
                                {
                                    "expr": "count(node_cpu_seconds_total{job=\"node-exporter\", instance=\"$instance\", mode=\"idle\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "logical cores",
                                    "refId": "D"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Load Average",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 4,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 9,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(\n  node_memory_MemTotal_bytes{job=\"node-exporter\", instance=\"$instance\"}\n-\n  node_memory_MemFree_bytes{job=\"node-exporter\", instance=\"$instance\"}\n-\n  node_memory_Buffers_bytes{job=\"node-exporter\", instance=\"$instance\"}\n-\n  node_memory_Cached_bytes{job=\"node-exporter\", instance=\"$instance\"}\n)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "memory used",
                                    "refId": "A"
                                },
                                {
                                    "expr": "node_memory_Buffers_bytes{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "memory buffers",
                                    "refId": "B"
                                },
                                {
                                    "expr": "node_memory_Cached_bytes{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "memory cached",
                                    "refId": "C"
                                },
                                {
                                    "expr": "node_memory_MemFree_bytes{job=\"node-exporter\", instance=\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "memory free",
                                    "refId": "D"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "rgba(50, 172, 45, 0.97)",
                                "rgba(237, 129, 40, 0.89)",
                                "rgba(245, 54, 54, 0.9)"
                            ],
                            "datasource": "$datasource",
                            "format": "percent",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": true,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 5,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 3,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "100 -\n(\n  avg(node_memory_MemAvailable_bytes{job=\"node-exporter\", instance=\"$instance\"})\n/\n  avg(node_memory_MemTotal_bytes{job=\"node-exporter\", instance=\"$instance\"})\n* 100\n)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "80, 90",
                            "title": "Memory Usage",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "current"
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 0,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 6,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [
                                {
                                    "alias": "/ read| written/",
                                    "yaxis": 1
                                },
                                {
                                    "alias": "/ io time/",
                                    "yaxis": 2
                                }
                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(node_disk_read_bytes_total{job=\"node-exporter\", instance=\"$instance\", device=~\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\"}[$__interval])",
                                    "format": "time_series",
                                    "interval": "1m",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{device}} read",
                                    "refId": "A"
                                },
                                {
                                    "expr": "rate(node_disk_written_bytes_total{job=\"node-exporter\", instance=\"$instance\", device=~\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\"}[$__interval])",
                                    "format": "time_series",
                                    "interval": "1m",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{device}} written",
                                    "refId": "B"
                                },
                                {
                                    "expr": "rate(node_disk_io_time_seconds_total{job=\"node-exporter\", instance=\"$instance\", device=~\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\"}[$__interval])",
                                    "format": "time_series",
                                    "interval": "1m",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{device}} io time",
                                    "refId": "C"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Disk I/O",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 7,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [
                                {
                                    "alias": "used",
                                    "color": "#E0B400"
                                },
                                {
                                    "alias": "available",
                                    "color": "#73BF69"
                                }
                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(\n  max by (device) (\n    node_filesystem_size_bytes{job=\"node-exporter\", instance=\"$instance\", fstype!=\"\"}\n  -\n    node_filesystem_avail_bytes{job=\"node-exporter\", instance=\"$instance\", fstype!=\"\"}\n  )\n)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "used",
                                    "refId": "A"
                                },
                                {
                                    "expr": "sum(\n  max by (device) (\n    node_filesystem_avail_bytes{job=\"node-exporter\", instance=\"$instance\", fstype!=\"\"}\n  )\n)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "available",
                                    "refId": "B"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Disk Space Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 0,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 8,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(node_network_receive_bytes_total{job=\"node-exporter\", instance=\"$instance\", device!=\"lo\"}[$__interval])",
                                    "format": "time_series",
                                    "interval": "1m",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{device}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Network Received",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 0,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 9,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(node_network_transmit_bytes_total{job=\"node-exporter\", instance=\"$instance\", device!=\"lo\"}[$__interval])",
                                    "format": "time_series",
                                    "interval": "1m",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{device}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Network Transmitted",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [

            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "Prometheus",
                            "value": "Prometheus"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "instance",
                        "options": [

                        ],
                        "query": "label_values(node_exporter_build_info{job=\"node-exporter\"}, instance)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Nodes",
            "uid": "fa49a4706d07a042595b664c87fb33ea",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-nodes
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      persistentvolumesusage.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [

                ]
            },
            "editable": false,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 2,
                            "legend": {
                                "alignAsTable": true,
                                "avg": true,
                                "current": true,
                                "max": true,
                                "min": true,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 9,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(\n  sum without(instance, node) (kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n  -\n  sum without(instance, node) (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n)\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "Used Space",
                                    "refId": "A"
                                },
                                {
                                    "expr": "sum without(instance, node) (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "Free Space",
                                    "refId": "B"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Volume Space Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "rgba(50, 172, 45, 0.97)",
                                "rgba(237, 129, 40, 0.89)",
                                "rgba(245, 54, 54, 0.9)"
                            ],
                            "datasource": "$datasource",
                            "format": "percent",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": true,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 3,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 3,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "(\n  kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n  -\n  kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n)\n/\nkubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n* 100\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "80, 90",
                            "title": "Volume Space Usage",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "current"
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 4,
                            "legend": {
                                "alignAsTable": true,
                                "avg": true,
                                "current": true,
                                "max": true,
                                "min": true,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 9,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum without(instance, node) (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "Used inodes",
                                    "refId": "A"
                                },
                                {
                                    "expr": "(\n  sum without(instance, node) (kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n  -\n  sum without(instance, node) (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n)\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": " Free inodes",
                                    "refId": "B"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Volume inodes Usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "none",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "none",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "rgba(50, 172, 45, 0.97)",
                                "rgba(237, 129, 40, 0.89)",
                                "rgba(245, 54, 54, 0.9)"
                            ],
                            "datasource": "$datasource",
                            "format": "percent",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": true,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 5,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 3,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n/\nkubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n* 100\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "80, 90",
                            "title": "Volume inodes Usage",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "current"
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": "cluster",
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kubelet_volume_stats_capacity_bytes, cluster)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": "Namespace",
                        "multi": false,
                        "name": "namespace",
                        "options": [

                        ],
                        "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\"}, namespace)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": "PersistentVolumeClaim",
                        "multi": false,
                        "name": "volume",
                        "options": [

                        ],
                        "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\"}, persistentvolumeclaim)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-7d",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Persistent Volumes",
            "uid": "919b92a8e8041bd567af9edab12c840c",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-persistentvolumesusage
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      pod-total.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [
                    {
                        "builtIn": 1,
                        "datasource": "-- Grafana --",
                        "enable": true,
                        "hide": true,
                        "iconColor": "rgba(0, 211, 255, 1)",
                        "name": "Annotations & Alerts",
                        "type": "dashboard"
                    }
                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "panels": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 0
                    },
                    "id": 2,
                    "panels": [

                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Current Bandwidth",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "cacheTimeout": null,
                    "colorBackground": false,
                    "colorValue": false,
                    "colors": [
                        "#299c46",
                        "rgba(237, 129, 40, 0.89)",
                        "#d44a3a"
                    ],
                    "datasource": "$datasource",
                    "decimals": 0,
                    "format": "time_series",
                    "gauge": {
                        "maxValue": 100,
                        "minValue": 0,
                        "show": false,
                        "thresholdLabels": false,
                        "thresholdMarkers": true
                    },
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 0,
                        "y": 1
                    },
                    "height": 9,
                    "id": 3,
                    "interval": null,
                    "links": [

                    ],
                    "mappingType": 1,
                    "mappingTypes": [
                        {
                            "name": "value to text",
                            "value": 1
                        },
                        {
                            "name": "range to text",
                            "value": 2
                        }
                    ],
                    "maxDataPoints": 100,
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "nullText": null,
                    "options": {
                        "fieldOptions": {
                            "calcs": [
                                "last"
                            ],
                            "defaults": {
                                "max": 10000000000,
                                "min": 0,
                                "title": "$namespace: $pod",
                                "unit": "Bps"
                            },
                            "mappings": [

                            ],
                            "override": {

                            },
                            "thresholds": [
                                {
                                    "color": "dark-green",
                                    "index": 0,
                                    "value": null
                                },
                                {
                                    "color": "dark-yellow",
                                    "index": 1,
                                    "value": 5000000000
                                },
                                {
                                    "color": "dark-red",
                                    "index": 2,
                                    "value": 7000000000
                                }
                            ],
                            "values": false
                        }
                    },
                    "postfix": "",
                    "postfixFontSize": "50%",
                    "prefix": "",
                    "prefixFontSize": "50%",
                    "rangeMaps": [
                        {
                            "from": "null",
                            "text": "N/A",
                            "to": "null"
                        }
                    ],
                    "span": 12,
                    "sparkline": {
                        "fillColor": "rgba(31, 118, 189, 0.18)",
                        "full": false,
                        "lineColor": "rgb(31, 120, 193)",
                        "show": false
                    },
                    "tableColumn": "",
                    "targets": [
                        {
                            "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution]))",
                            "format": "time_series",
                            "instant": null,
                            "intervalFactor": 1,
                            "legendFormat": "",
                            "refId": "A"
                        }
                    ],
                    "thresholds": "",
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Rate of Bytes Received",
                    "type": "gauge",
                    "valueFontSize": "80%",
                    "valueMaps": [
                        {
                            "op": "=",
                            "text": "N/A",
                            "value": "null"
                        }
                    ],
                    "valueName": "current"
                },
                {
                    "cacheTimeout": null,
                    "colorBackground": false,
                    "colorValue": false,
                    "colors": [
                        "#299c46",
                        "rgba(237, 129, 40, 0.89)",
                        "#d44a3a"
                    ],
                    "datasource": "$datasource",
                    "decimals": 0,
                    "format": "time_series",
                    "gauge": {
                        "maxValue": 100,
                        "minValue": 0,
                        "show": false,
                        "thresholdLabels": false,
                        "thresholdMarkers": true
                    },
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 12,
                        "y": 1
                    },
                    "height": 9,
                    "id": 4,
                    "interval": null,
                    "links": [

                    ],
                    "mappingType": 1,
                    "mappingTypes": [
                        {
                            "name": "value to text",
                            "value": 1
                        },
                        {
                            "name": "range to text",
                            "value": 2
                        }
                    ],
                    "maxDataPoints": 100,
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "nullText": null,
                    "options": {
                        "fieldOptions": {
                            "calcs": [
                                "last"
                            ],
                            "defaults": {
                                "max": 10000000000,
                                "min": 0,
                                "title": "$namespace: $pod",
                                "unit": "Bps"
                            },
                            "mappings": [

                            ],
                            "override": {

                            },
                            "thresholds": [
                                {
                                    "color": "dark-green",
                                    "index": 0,
                                    "value": null
                                },
                                {
                                    "color": "dark-yellow",
                                    "index": 1,
                                    "value": 5000000000
                                },
                                {
                                    "color": "dark-red",
                                    "index": 2,
                                    "value": 7000000000
                                }
                            ],
                            "values": false
                        }
                    },
                    "postfix": "",
                    "postfixFontSize": "50%",
                    "prefix": "",
                    "prefixFontSize": "50%",
                    "rangeMaps": [
                        {
                            "from": "null",
                            "text": "N/A",
                            "to": "null"
                        }
                    ],
                    "span": 12,
                    "sparkline": {
                        "fillColor": "rgba(31, 118, 189, 0.18)",
                        "full": false,
                        "lineColor": "rgb(31, 120, 193)",
                        "show": false
                    },
                    "tableColumn": "",
                    "targets": [
                        {
                            "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution]))",
                            "format": "time_series",
                            "instant": null,
                            "intervalFactor": 1,
                            "legendFormat": "",
                            "refId": "A"
                        }
                    ],
                    "thresholds": "",
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Rate of Bytes Transmitted",
                    "type": "gauge",
                    "valueFontSize": "80%",
                    "valueMaps": [
                        {
                            "op": "=",
                            "text": "N/A",
                            "value": "null"
                        }
                    ],
                    "valueName": "current"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 10
                    },
                    "id": 5,
                    "panels": [

                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Bandwidth",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "aliasColors": {

                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 0,
                        "y": 11
                    },
                    "id": 6,
                    "legend": {
                        "alignAsTable": false,
                        "avg": false,
                        "current": false,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": false,
                        "show": true,
                        "sideWidth": null,
                        "total": false,
                        "values": false
                    },
                    "lines": true,
                    "linewidth": 2,
                    "links": [

                    ],
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 12,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Receive Bandwidth",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": [

                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "aliasColors": {

                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 12,
                        "y": 11
                    },
                    "id": 7,
                    "legend": {
                        "alignAsTable": false,
                        "avg": false,
                        "current": false,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": false,
                        "show": true,
                        "sideWidth": null,
                        "total": false,
                        "values": false
                    },
                    "lines": true,
                    "linewidth": 2,
                    "links": [

                    ],
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 12,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Transmit Bandwidth",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": [

                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 20
                    },
                    "id": 8,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 10,
                                "w": 12,
                                "x": 0,
                                "y": 21
                            },
                            "id": 9,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 10,
                                "w": 12,
                                "x": 12,
                                "y": 21
                            },
                            "id": 10,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Packets",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 21
                    },
                    "id": 11,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 10,
                                "w": 12,
                                "x": 0,
                                "y": 32
                            },
                            "id": 12,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets Dropped",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 10,
                                "w": 12,
                                "x": 12,
                                "y": 32
                            },
                            "id": 13,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets Dropped",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Errors",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "refresh": "10s",
            "rows": [

            ],
            "schemaVersion": 18,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": ".+",
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "kube-system",
                            "value": "kube-system"
                        },
                        "datasource": "$datasource",
                        "definition": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "namespace",
                        "options": [

                        ],
                        "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                        "refresh": 1,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": ".+",
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "definition": "label_values(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}, pod)",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "pod",
                        "options": [

                        ],
                        "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}, pod)",
                        "refresh": 1,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "5m",
                            "value": "5m"
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "resolution",
                        "options": [
                            {
                                "selected": false,
                                "text": "30s",
                                "value": "30s"
                            },
                            {
                                "selected": true,
                                "text": "5m",
                                "value": "5m"
                            },
                            {
                                "selected": false,
                                "text": "1h",
                                "value": "1h"
                            }
                        ],
                        "query": "30s,5m,1h",
                        "refresh": 2,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "interval",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "5m",
                            "value": "5m"
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "interval",
                        "options": [
                            {
                                "selected": true,
                                "text": "4h",
                                "value": "4h"
                            }
                        ],
                        "query": "4h",
                        "refresh": 2,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "interval",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Networking / Pod",
            "uid": "7a18067ce943a40ae25454675c19ff5c",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-pod-total
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      prometheus-remote-write.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [

                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "refresh": "",
            "rows": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 2,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(\n  prometheus_remote_storage_highest_timestamp_in_seconds{cluster=~\"$cluster\", instance=~\"$instance\"} \n-  \n  ignoring(remote_name, url) group_right(instance) prometheus_remote_storage_queue_highest_sent_timestamp_seconds{cluster=~\"$cluster\", instance=~\"$instance\"}\n)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Highest Timestamp In vs. Highest Timestamp Sent",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 3,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "(\n  rate(prometheus_remote_storage_highest_timestamp_in_seconds{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])  \n- \n  ignoring (remote_name, url) group_right(instance) rate(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])\n)\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate[5m]",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Timestamps",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 4,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(\n  prometheus_remote_storage_samples_in_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])\n- \n  ignoring(remote_name, url) group_right(instance) rate(prometheus_remote_storage_succeeded_samples_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])\n- \n  rate(prometheus_remote_storage_dropped_samples_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])\n",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate, in vs. succeeded or dropped [5m]",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Samples",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 5,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "minSpan": 6,
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "prometheus_remote_storage_shards{cluster=~\"$cluster\", instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Current Shards",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 6,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "prometheus_remote_storage_shards_max{cluster=~\"$cluster\", instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Max Shards",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 7,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "prometheus_remote_storage_shards_min{cluster=~\"$cluster\", instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Min Shards",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 8,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "prometheus_remote_storage_shards_desired{cluster=~\"$cluster\", instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Desired Shards",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Shards",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 9,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "prometheus_remote_storage_shard_capacity{cluster=~\"$cluster\", instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Shard Capacity",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 10,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "prometheus_remote_storage_pending_samples{cluster=~\"$cluster\", instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Pending Samples",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Shard Details",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 11,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "prometheus_tsdb_wal_segment_current{cluster=~\"$cluster\", instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "TSDB Current Segment",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "none",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 12,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "prometheus_wal_watcher_current_segment{cluster=~\"$cluster\", instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{consumer}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Remote Write Current Segment",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "none",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Segments",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 13,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(prometheus_remote_storage_dropped_samples_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Dropped Samples",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 14,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(prometheus_remote_storage_failed_samples_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Failed Samples",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 15,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(prometheus_remote_storage_retried_samples_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Retried Samples",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 16,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 3,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(prometheus_remote_storage_enqueue_retries_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Enqueue Retries",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Misc. Rates",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [

            ],
            "templating": {
                "list": [
                    {
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": {
                                "selected": true,
                                "text": "All",
                                "value": "$__all"
                            },
                            "value": {
                                "selected": true,
                                "text": "All",
                                "value": "$__all"
                            }
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "instance",
                        "options": [

                        ],
                        "query": "label_values(prometheus_build_info, instance)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "text": {
                                "selected": true,
                                "text": "All",
                                "value": "$__all"
                            },
                            "value": {
                                "selected": true,
                                "text": "All",
                                "value": "$__all"
                            }
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_container_info{image=~\".*prometheus.*\"}, cluster)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "url",
                        "options": [

                        ],
                        "query": "label_values(prometheus_remote_storage_shards{cluster=~\"$cluster\", instance=~\"$instance\"}, url)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-6h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "browser",
            "title": "Prometheus Remote Write",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-prometheus-remote-write
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      prometheus.json: |-
        {
            "annotations": {
                "list": [

                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 1,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "styles": [
                                {
                                    "alias": "Time",
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "pattern": "Time",
                                    "type": "hidden"
                                },
                                {
                                    "alias": "Count",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #A",
                                    "thresholds": [

                                    ],
                                    "type": "hidden",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Uptime",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "Value #B",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Instance",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "instance",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Job",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "job",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "Version",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "link": false,
                                    "linkTargetBlank": false,
                                    "linkTooltip": "Drill down",
                                    "linkUrl": "",
                                    "pattern": "version",
                                    "thresholds": [

                                    ],
                                    "type": "number",
                                    "unit": "short"
                                },
                                {
                                    "alias": "",
                                    "colorMode": null,
                                    "colors": [

                                    ],
                                    "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                    "decimals": 2,
                                    "pattern": "/.*/",
                                    "thresholds": [

                                    ],
                                    "type": "string",
                                    "unit": "short"
                                }
                            ],
                            "targets": [
                                {
                                    "expr": "count by (job, instance, version) (prometheus_build_info{job=~\"$job\", instance=~\"$instance\"})",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A",
                                    "step": 10
                                },
                                {
                                    "expr": "max by (job, instance) (time() - process_start_time_seconds{job=~\"$job\", instance=~\"$instance\"})",
                                    "format": "table",
                                    "instant": true,
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "B",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Prometheus Stats",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "transform": "table",
                            "type": "table",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Prometheus Stats",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 2,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(prometheus_target_sync_length_seconds_sum{job=~\"$job\",instance=~\"$instance\"}[5m])) by (scrape_job) * 1e3",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{scrape_job}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Target Sync",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ms",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 3,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(prometheus_sd_discovered_targets{job=~\"$job\",instance=~\"$instance\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "Targets",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Targets",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Discovery",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "id": 4,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(prometheus_target_interval_length_seconds_sum{job=~\"$job\",instance=~\"$instance\"}[5m]) / rate(prometheus_target_interval_length_seconds_count{job=~\"$job\",instance=~\"$instance\"}[5m]) * 1e3",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{interval}} configured",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Scrape Interval Duration",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ms",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 5,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum by (job) (rate(prometheus_target_scrapes_exceeded_sample_limit_total[1m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "exceeded sample limit: {{job}}",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "sum by (job) (rate(prometheus_target_scrapes_sample_duplicate_timestamp_total[1m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "duplicate timestamp: {{job}}",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "sum by (job) (rate(prometheus_target_scrapes_sample_out_of_bounds_total[1m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "out of bounds: {{job}}",
                                    "legendLink": null,
                                    "step": 10
                                },
                                {
                                    "expr": "sum by (job) (rate(prometheus_target_scrapes_sample_out_of_order_total[1m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "out of order: {{job}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Scrape failures",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 6,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(prometheus_tsdb_head_samples_appended_total{job=~\"$job\",instance=~\"$instance\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{job}} {{instance}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Appended Samples",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Retrieval",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 7,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "prometheus_tsdb_head_series{job=~\"$job\",instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{job}} {{instance}} head series",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Head Series",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 8,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "prometheus_tsdb_head_chunks{job=~\"$job\",instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{job}} {{instance}} head chunks",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Head Chunks",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Storage",
                    "titleSize": "h6"
                },
                {
                    "collapse": false,
                    "height": "250px",
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 9,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(prometheus_engine_query_duration_seconds_count{job=~\"$job\",instance=~\"$instance\",slice=\"inner_eval\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{job}} {{instance}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Query Rate",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 10,
                            "id": 10,
                            "legend": {
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "show": true,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 0,
                            "links": [

                            ],
                            "nullPointMode": "null as zero",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "max by (slice) (prometheus_engine_query_duration_seconds{quantile=\"0.9\",job=~\"$job\",instance=~\"$instance\"}) * 1e3",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{slice}}",
                                    "legendLink": null,
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Stage Duration",
                            "tooltip": {
                                "shared": true,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ms",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": false
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Query",
                    "titleSize": "h6"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [

            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {
                            "selected": true,
                            "text": "All",
                            "value": "$__all"
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": true,
                        "label": "job",
                        "multi": true,
                        "name": "job",
                        "options": [

                        ],
                        "query": "label_values(prometheus_build_info, job)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 2,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {
                            "selected": true,
                            "text": "All",
                            "value": "$__all"
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": true,
                        "label": "instance",
                        "multi": true,
                        "name": "instance",
                        "options": [

                        ],
                        "query": "label_values(prometheus_build_info, instance)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 2,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "utc",
            "title": "Prometheus Overview",
            "uid": "",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-prometheus
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      proxy.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [

                ]
            },
            "editable": false,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 2,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 2,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(up{job=\"kube-proxy\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Up",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "min"
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 3,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 5,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(kubeproxy_sync_proxy_rules_duration_seconds_count{job=\"kube-proxy\", instance=~\"$instance\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "rate",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rules Sync Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 4,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 5,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99,rate(kubeproxy_sync_proxy_rules_duration_seconds_bucket{job=\"kube-proxy\", instance=~\"$instance\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rule Sync Latency 99th Quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 5,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(kubeproxy_network_programming_duration_seconds_count{job=\"kube-proxy\", instance=~\"$instance\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "rate",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Network Programming Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 6,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 6,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(kubeproxy_network_programming_duration_seconds_bucket{job=\"kube-proxy\", instance=~\"$instance\"}[5m])) by (instance, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Network Programming Latency 99th Quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 7,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-proxy\", instance=~\"$instance\",code=~\"2..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "2xx",
                                    "refId": "A"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-proxy\", instance=~\"$instance\",code=~\"3..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "3xx",
                                    "refId": "B"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-proxy\", instance=~\"$instance\",code=~\"4..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "4xx",
                                    "refId": "C"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-proxy\", instance=~\"$instance\",code=~\"5..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "5xx",
                                    "refId": "D"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Kube API Request Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 8,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 8,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job=\"kube-proxy\",instance=~\"$instance\",verb=\"POST\"}[5m])) by (verb, url, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{verb}} {{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Post Request Latency 99th Quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 9,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job=\"kube-proxy\", instance=~\"$instance\", verb=\"GET\"}[5m])) by (verb, url, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{verb}} {{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Get Request Latency 99th Quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 10,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "process_resident_memory_bytes{job=\"kube-proxy\",instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 11,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(process_cpu_seconds_total{job=\"kube-proxy\",instance=~\"$instance\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 12,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "go_goroutines{job=\"kube-proxy\",instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Goroutines",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "instance",
                        "options": [

                        ],
                        "query": "label_values(kubeproxy_network_programming_duration_seconds_bucket{job=\"kube-proxy\"}, instance)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Proxy",
            "uid": "632e265de029684c40b21cb76bca4f94",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-proxy
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      scheduler.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [

                ]
            },
            "editable": false,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "refresh": "10s",
            "rows": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 2,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 2,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(up{job=\"kube-scheduler\"})",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Up",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "N/A",
                                    "value": "null"
                                }
                            ],
                            "valueName": "min"
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 3,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 5,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(scheduler_e2e_scheduling_duration_seconds_count{job=\"kube-scheduler\", instance=~\"$instance\"}[5m])) by (instance)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} e2e",
                                    "refId": "A"
                                },
                                {
                                    "expr": "sum(rate(scheduler_binding_duration_seconds_count{job=\"kube-scheduler\", instance=~\"$instance\"}[5m])) by (instance)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} binding",
                                    "refId": "B"
                                },
                                {
                                    "expr": "sum(rate(scheduler_scheduling_algorithm_duration_seconds_count{job=\"kube-scheduler\", instance=~\"$instance\"}[5m])) by (instance)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} scheduling algorithm",
                                    "refId": "C"
                                },
                                {
                                    "expr": "sum(rate(scheduler_volume_scheduling_duration_seconds_count{job=\"kube-scheduler\", instance=~\"$instance\"}[5m])) by (instance)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} volume",
                                    "refId": "D"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Scheduling Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 4,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 5,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\",instance=~\"$instance\"}[5m])) by (instance, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} e2e",
                                    "refId": "A"
                                },
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\",instance=~\"$instance\"}[5m])) by (instance, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} binding",
                                    "refId": "B"
                                },
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\",instance=~\"$instance\"}[5m])) by (instance, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} scheduling algorithm",
                                    "refId": "C"
                                },
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(scheduler_volume_scheduling_duration_seconds_bucket{job=\"kube-scheduler\",instance=~\"$instance\"}[5m])) by (instance, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}} volume",
                                    "refId": "D"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Scheduling latency 99th Quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 5,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-scheduler\", instance=~\"$instance\",code=~\"2..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "2xx",
                                    "refId": "A"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-scheduler\", instance=~\"$instance\",code=~\"3..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "3xx",
                                    "refId": "B"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-scheduler\", instance=~\"$instance\",code=~\"4..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "4xx",
                                    "refId": "C"
                                },
                                {
                                    "expr": "sum(rate(rest_client_requests_total{job=\"kube-scheduler\", instance=~\"$instance\",code=~\"5..\"}[5m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "5xx",
                                    "refId": "D"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Kube API Request Rate",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "ops",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 6,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 8,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job=\"kube-scheduler\", instance=~\"$instance\", verb=\"POST\"}[5m])) by (verb, url, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{verb}} {{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Post Request Latency 99th Quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 7,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": true
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job=\"kube-scheduler\", instance=~\"$instance\", verb=\"GET\"}[5m])) by (verb, url, le))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{verb}} {{url}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Get Request Latency 99th Quantile",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "s",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 8,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "process_resident_memory_bytes{job=\"kube-scheduler\", instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Memory",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 9,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "rate(process_cpu_seconds_total{job=\"kube-scheduler\", instance=~\"$instance\"}[5m])",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "CPU usage",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "bytes",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 10,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 4,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "go_goroutines{job=\"kube-scheduler\",instance=~\"$instance\"}",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "{{instance}}",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Goroutines",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "instance",
                        "options": [

                        ],
                        "query": "label_values(process_cpu_seconds_total{job=\"kube-scheduler\"}, instance)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Scheduler",
            "uid": "2e6b6a3b4bddf1427b3a55aa1311c656",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-scheduler
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      statefulset.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [

                ]
            },
            "editable": false,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "refresh": "",
            "rows": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 2,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "cores",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 4,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "lineColor": "rgb(31, 120, 193)",
                                "show": true
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", container!=\"\", namespace=\"$namespace\", pod=~\"$statefulset.*\"}[3m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "CPU",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "0",
                                    "value": "null"
                                }
                            ],
                            "valueName": "current"
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 3,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "GB",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 4,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "lineColor": "rgb(31, 120, 193)",
                                "show": true
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(container_memory_usage_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", container!=\"\", namespace=\"$namespace\", pod=~\"$statefulset.*\"}) / 1024^3",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Memory",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "0",
                                    "value": "null"
                                }
                            ],
                            "valueName": "current"
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 4,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "Bps",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 4,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "lineColor": "rgb(31, 120, 193)",
                                "show": true
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$statefulset.*\"}[3m])) + sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",pod=~\"$statefulset.*\"}[3m]))",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Network",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "0",
                                    "value": "null"
                                }
                            ],
                            "valueName": "current"
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "height": "100px",
                    "panels": [
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 5,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 3,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "max(kube_statefulset_replicas{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", statefulset=\"$statefulset\"}) without (instance, pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Desired Replicas",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "0",
                                    "value": "null"
                                }
                            ],
                            "valueName": "current"
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 6,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 3,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "min(kube_statefulset_status_replicas_current{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", statefulset=\"$statefulset\"}) without (instance, pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Replicas of current version",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "0",
                                    "value": "null"
                                }
                            ],
                            "valueName": "current"
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 7,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 3,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "max(kube_statefulset_status_observed_generation{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", statefulset=\"$statefulset\"}) without (instance, pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Observed Generation",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "0",
                                    "value": "null"
                                }
                            ],
                            "valueName": "current"
                        },
                        {
                            "cacheTimeout": null,
                            "colorBackground": false,
                            "colorValue": false,
                            "colors": [
                                "#299c46",
                                "rgba(237, 129, 40, 0.89)",
                                "#d44a3a"
                            ],
                            "datasource": "$datasource",
                            "format": "none",
                            "gauge": {
                                "maxValue": 100,
                                "minValue": 0,
                                "show": false,
                                "thresholdLabels": false,
                                "thresholdMarkers": true
                            },
                            "gridPos": {

                            },
                            "id": 8,
                            "interval": null,
                            "links": [

                            ],
                            "mappingType": 1,
                            "mappingTypes": [
                                {
                                    "name": "value to text",
                                    "value": 1
                                },
                                {
                                    "name": "range to text",
                                    "value": 2
                                }
                            ],
                            "maxDataPoints": 100,
                            "nullPointMode": "connected",
                            "nullText": null,
                            "postfix": "",
                            "postfixFontSize": "50%",
                            "prefix": "",
                            "prefixFontSize": "50%",
                            "rangeMaps": [
                                {
                                    "from": "null",
                                    "text": "N/A",
                                    "to": "null"
                                }
                            ],
                            "span": 3,
                            "sparkline": {
                                "fillColor": "rgba(31, 118, 189, 0.18)",
                                "full": false,
                                "lineColor": "rgb(31, 120, 193)",
                                "show": false
                            },
                            "tableColumn": "",
                            "targets": [
                                {
                                    "expr": "max(kube_statefulset_metadata_generation{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "",
                                    "refId": "A"
                                }
                            ],
                            "thresholds": "",
                            "title": "Metadata Generation",
                            "tooltip": {
                                "shared": false
                            },
                            "type": "singlestat",
                            "valueFontSize": "80%",
                            "valueMaps": [
                                {
                                    "op": "=",
                                    "text": "0",
                                    "value": "null"
                                }
                            ],
                            "valueName": "current"
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 1,
                            "fillGradient": 0,
                            "gridPos": {

                            },
                            "id": 9,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 1,
                            "links": [

                            ],
                            "nullPointMode": "null",
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "max(kube_statefulset_replicas{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "replicas specified",
                                    "refId": "A"
                                },
                                {
                                    "expr": "max(kube_statefulset_status_replicas{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "replicas created",
                                    "refId": "B"
                                },
                                {
                                    "expr": "min(kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "ready",
                                    "refId": "C"
                                },
                                {
                                    "expr": "min(kube_statefulset_status_replicas_current{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "replicas of current version",
                                    "refId": "D"
                                },
                                {
                                    "expr": "min(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
                                    "format": "time_series",
                                    "intervalFactor": 2,
                                    "legendFormat": "updated",
                                    "refId": "E"
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Replicas",
                            "tooltip": {
                                "shared": false,
                                "sort": 0,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                },
                                {
                                    "format": "short",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": null,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": false,
                    "title": "Dashboard Row",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "schemaVersion": 14,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": "cluster",
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_statefulset_metadata_generation, cluster)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": "Namespace",
                        "multi": false,
                        "name": "namespace",
                        "options": [

                        ],
                        "query": "label_values(kube_statefulset_metadata_generation{job=\"kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": "Name",
                        "multi": false,
                        "name": "statefulset",
                        "options": [

                        ],
                        "query": "label_values(kube_statefulset_metadata_generation{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\"}, statefulset)",
                        "refresh": 2,
                        "regex": "",
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / StatefulSets",
            "uid": "a31c1f46e6f727cb37c0d731a7245005",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-statefulset
      namespace: kuboard

    ---
    apiVersion: v1
    data:
      workload-total.json: |-
        {
            "__inputs": [

            ],
            "__requires": [

            ],
            "annotations": {
                "list": [
                    {
                        "builtIn": 1,
                        "datasource": "-- Grafana --",
                        "enable": true,
                        "hide": true,
                        "iconColor": "rgba(0, 211, 255, 1)",
                        "name": "Annotations & Alerts",
                        "type": "dashboard"
                    }
                ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "hideControls": false,
            "id": null,
            "links": [

            ],
            "panels": [
                {
                    "collapse": false,
                    "collapsed": false,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 0
                    },
                    "id": 2,
                    "panels": [

                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Current Bandwidth",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "aliasColors": {

                    },
                    "bars": true,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 0,
                        "y": 1
                    },
                    "id": 3,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": true,
                        "show": true,
                        "sideWidth": null,
                        "sort": "current",
                        "sortDesc": true,
                        "total": false,
                        "values": true
                    },
                    "lines": false,
                    "linewidth": 1,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "null",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 24,
                    "stack": false,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{ pod }}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Rate of Bytes Received",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "series",
                        "name": null,
                        "show": false,
                        "values": [
                            "current"
                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "aliasColors": {

                    },
                    "bars": true,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 12,
                        "y": 1
                    },
                    "id": 4,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": true,
                        "show": true,
                        "sideWidth": null,
                        "sort": "current",
                        "sortDesc": true,
                        "total": false,
                        "values": true
                    },
                    "lines": false,
                    "linewidth": 1,
                    "links": [

                    ],
                    "minSpan": 24,
                    "nullPointMode": "null",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 24,
                    "stack": false,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{ pod }}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Current Rate of Bytes Transmitted",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "series",
                        "name": null,
                        "show": false,
                        "values": [
                            "current"
                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 10
                    },
                    "id": 5,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": true,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 0,
                                "y": 11
                            },
                            "id": 6,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "sort": "current",
                                "sortDesc": true,
                                "total": false,
                                "values": true
                            },
                            "lines": false,
                            "linewidth": 1,
                            "links": [

                            ],
                            "minSpan": 24,
                            "nullPointMode": "null",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{ pod }}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Rate of Bytes Received",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "series",
                                "name": null,
                                "show": false,
                                "values": [
                                    "current"
                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": true,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 12,
                                "y": 11
                            },
                            "id": 7,
                            "legend": {
                                "alignAsTable": true,
                                "avg": false,
                                "current": true,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": true,
                                "show": true,
                                "sideWidth": null,
                                "sort": "current",
                                "sortDesc": true,
                                "total": false,
                                "values": true
                            },
                            "lines": false,
                            "linewidth": 1,
                            "links": [

                            ],
                            "minSpan": 24,
                            "nullPointMode": "null",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 24,
                            "stack": false,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{ pod }}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Average Rate of Bytes Transmitted",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "series",
                                "name": null,
                                "show": false,
                                "values": [
                                    "current"
                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "Bps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Average Bandwidth",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": false,
                    "collapsed": false,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 11
                    },
                    "id": 8,
                    "panels": [

                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Bandwidth HIstory",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "aliasColors": {

                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 0,
                        "y": 12
                    },
                    "id": 9,
                    "legend": {
                        "alignAsTable": false,
                        "avg": false,
                        "current": false,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": false,
                        "show": true,
                        "sideWidth": null,
                        "total": false,
                        "values": false
                    },
                    "lines": true,
                    "linewidth": 2,
                    "links": [

                    ],
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 12,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Receive Bandwidth",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": [

                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "aliasColors": {

                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$datasource",
                    "fill": 2,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 9,
                        "w": 12,
                        "x": 12,
                        "y": 12
                    },
                    "id": 10,
                    "legend": {
                        "alignAsTable": false,
                        "avg": false,
                        "current": false,
                        "hideEmpty": true,
                        "hideZero": true,
                        "max": false,
                        "min": false,
                        "rightSide": false,
                        "show": true,
                        "sideWidth": null,
                        "total": false,
                        "values": false
                    },
                    "lines": true,
                    "linewidth": 2,
                    "links": [

                    ],
                    "minSpan": 12,
                    "nullPointMode": "connected",
                    "paceLength": 10,
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": null,
                    "seriesOverrides": [

                    ],
                    "spaceLength": 10,
                    "span": 12,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                        }
                    ],
                    "thresholds": [

                    ],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "Transmit Bandwidth",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": [

                        ]
                    },
                    "yaxes": [
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                        }
                    ]
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 21
                    },
                    "id": 11,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 0,
                                "y": 22
                            },
                            "id": 12,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 12,
                                "y": 22
                            },
                            "id": 13,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Packets",
                    "titleSize": "h6",
                    "type": "row"
                },
                {
                    "collapse": true,
                    "collapsed": true,
                    "gridPos": {
                        "h": 1,
                        "w": 24,
                        "x": 0,
                        "y": 22
                    },
                    "id": 14,
                    "panels": [
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 0,
                                "y": 23
                            },
                            "id": 15,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Received Packets Dropped",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        },
                        {
                            "aliasColors": {

                            },
                            "bars": false,
                            "dashLength": 10,
                            "dashes": false,
                            "datasource": "$datasource",
                            "fill": 2,
                            "fillGradient": 0,
                            "gridPos": {
                                "h": 9,
                                "w": 12,
                                "x": 12,
                                "y": 23
                            },
                            "id": 16,
                            "legend": {
                                "alignAsTable": false,
                                "avg": false,
                                "current": false,
                                "hideEmpty": true,
                                "hideZero": true,
                                "max": false,
                                "min": false,
                                "rightSide": false,
                                "show": true,
                                "sideWidth": null,
                                "total": false,
                                "values": false
                            },
                            "lines": true,
                            "linewidth": 2,
                            "links": [

                            ],
                            "minSpan": 12,
                            "nullPointMode": "connected",
                            "paceLength": 10,
                            "percentage": false,
                            "pointradius": 5,
                            "points": false,
                            "renderer": "flot",
                            "repeat": null,
                            "seriesOverrides": [

                            ],
                            "spaceLength": 10,
                            "span": 12,
                            "stack": true,
                            "steppedLine": false,
                            "targets": [
                                {
                                    "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
                                    "format": "time_series",
                                    "intervalFactor": 1,
                                    "legendFormat": "{{pod}}",
                                    "refId": "A",
                                    "step": 10
                                }
                            ],
                            "thresholds": [

                            ],
                            "timeFrom": null,
                            "timeShift": null,
                            "title": "Rate of Transmitted Packets Dropped",
                            "tooltip": {
                                "shared": true,
                                "sort": 2,
                                "value_type": "individual"
                            },
                            "type": "graph",
                            "xaxis": {
                                "buckets": null,
                                "mode": "time",
                                "name": null,
                                "show": true,
                                "values": [

                                ]
                            },
                            "yaxes": [
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                },
                                {
                                    "format": "pps",
                                    "label": null,
                                    "logBase": 1,
                                    "max": null,
                                    "min": 0,
                                    "show": true
                                }
                            ]
                        }
                    ],
                    "repeat": null,
                    "repeatIteration": null,
                    "repeatRowId": null,
                    "showTitle": true,
                    "title": "Errors",
                    "titleSize": "h6",
                    "type": "row"
                }
            ],
            "refresh": "10s",
            "rows": [

            ],
            "schemaVersion": 18,
            "style": "dark",
            "tags": [
                "kubernetes-mixin"
            ],
            "templating": {
                "list": [
                    {
                        "current": {
                            "text": "default",
                            "value": "default"
                        },
                        "hide": 0,
                        "label": null,
                        "name": "datasource",
                        "options": [

                        ],
                        "query": "prometheus",
                        "refresh": 1,
                        "regex": "",
                        "type": "datasource"
                    },
                    {
                        "allValue": null,
                        "current": {

                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "cluster",
                        "options": [

                        ],
                        "query": "label_values(kube_pod_info, cluster)",
                        "refresh": 1,
                        "regex": "",
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": ".+",
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "kube-system",
                            "value": "kube-system"
                        },
                        "datasource": "$datasource",
                        "definition": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                        "hide": 0,
                        "includeAll": true,
                        "label": null,
                        "multi": false,
                        "name": "namespace",
                        "options": [

                        ],
                        "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                        "refresh": 1,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "",
                            "value": ""
                        },
                        "datasource": "$datasource",
                        "definition": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\"}, workload)",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "workload",
                        "options": [

                        ],
                        "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\"}, workload)",
                        "refresh": 1,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "deployment",
                            "value": "deployment"
                        },
                        "datasource": "$datasource",
                        "definition": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\"}, workload_type)",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "type",
                        "options": [

                        ],
                        "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\"}, workload_type)",
                        "refresh": 1,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 0,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "query",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "5m",
                            "value": "5m"
                        },
                        "datasource": "$datasource",
                        "hide": 0,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "resolution",
                        "options": [
                            {
                                "selected": false,
                                "text": "30s",
                                "value": "30s"
                            },
                            {
                                "selected": true,
                                "text": "5m",
                                "value": "5m"
                            },
                            {
                                "selected": false,
                                "text": "1h",
                                "value": "1h"
                            }
                        ],
                        "query": "30s,5m,1h",
                        "refresh": 2,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "interval",
                        "useTags": false
                    },
                    {
                        "allValue": null,
                        "auto": false,
                        "auto_count": 30,
                        "auto_min": "10s",
                        "current": {
                            "text": "5m",
                            "value": "5m"
                        },
                        "datasource": "$datasource",
                        "hide": 2,
                        "includeAll": false,
                        "label": null,
                        "multi": false,
                        "name": "interval",
                        "options": [
                            {
                                "selected": true,
                                "text": "4h",
                                "value": "4h"
                            }
                        ],
                        "query": "4h",
                        "refresh": 2,
                        "regex": "",
                        "skipUrlSync": false,
                        "sort": 1,
                        "tagValuesQuery": "",
                        "tags": [

                        ],
                        "tagsQuery": "",
                        "type": "interval",
                        "useTags": false
                    }
                ]
            },
            "time": {
                "from": "now-1h",
                "to": "now"
            },
            "timepicker": {
                "refresh_intervals": [
                    "5s",
                    "10s",
                    "30s",
                    "1m",
                    "5m",
                    "15m",
                    "30m",
                    "1h",
                    "2h",
                    "1d"
                ],
                "time_options": [
                    "5m",
                    "15m",
                    "1h",
                    "6h",
                    "12h",
                    "24h",
                    "2d",
                    "7d",
                    "30d"
                ]
            },
            "timezone": "UTC",
            "title": "Kubernetes / Networking / Workload",
            "uid": "728bf77cc1166d2f3133bf25846876cc",
            "version": 0
        }
    kind: ConfigMap
    metadata:
      name: grafana-dashboard-workload-total
      namespace: kuboard
kind: KuboardAddonResource
lifecycleHandler:
  install:
  - dashboard-definitions.yaml
metadata:
  name: system-monitor.addons.kuboard.cn-5
  namespace: kuboard
